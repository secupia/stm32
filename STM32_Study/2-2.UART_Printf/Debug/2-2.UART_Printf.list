
2-2.UART_Printf.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004640  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002f0  080047f0  080047f0  000147f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08004ae0  08004ae0  00014ae0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08004ae8  08004ae8  00014ae8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  08004aec  08004aec  00014aec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         000001dc  20000000  08004af0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .ccmram       00000000  10000000  10000000  000201dc  2**0
                  CONTENTS
  8 .bss          00000070  200001dc  200001dc  000201dc  2**2
                  ALLOC
  9 ._user_heap_stack 00000600  2000024c  2000024c  000201dc  2**0
                  ALLOC
 10 .ARM.attributes 00000030  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 11 .debug_info   00007f56  00000000  00000000  0002020c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 000016e0  00000000  00000000  00028162  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00002a14  00000000  00000000  00029842  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000660  00000000  00000000  0002c258  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000610  00000000  00000000  0002c8b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   00002ef6  00000000  00000000  0002cec8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    00002673  00000000  00000000  0002fdbe  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .comment      0000007c  00000000  00000000  00032431  2**0
                  CONTENTS, READONLY
 19 .debug_frame  00001cc4  00000000  00000000  000324b0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200001dc 	.word	0x200001dc
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080047d8 	.word	0x080047d8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200001e0 	.word	0x200001e0
 80001ec:	080047d8 	.word	0x080047d8

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003de:	f1a4 0401 	sub.w	r4, r4, #1
 80003e2:	d1e9      	bne.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f092 0f00 	teq	r2, #0
 800058a:	bf14      	ite	ne
 800058c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000590:	4770      	bxeq	lr
 8000592:	b530      	push	{r4, r5, lr}
 8000594:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000598:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800059c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a0:	e720      	b.n	80003e4 <__adddf3+0x138>
 80005a2:	bf00      	nop

080005a4 <__aeabi_ul2d>:
 80005a4:	ea50 0201 	orrs.w	r2, r0, r1
 80005a8:	bf08      	it	eq
 80005aa:	4770      	bxeq	lr
 80005ac:	b530      	push	{r4, r5, lr}
 80005ae:	f04f 0500 	mov.w	r5, #0
 80005b2:	e00a      	b.n	80005ca <__aeabi_l2d+0x16>

080005b4 <__aeabi_l2d>:
 80005b4:	ea50 0201 	orrs.w	r2, r0, r1
 80005b8:	bf08      	it	eq
 80005ba:	4770      	bxeq	lr
 80005bc:	b530      	push	{r4, r5, lr}
 80005be:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005c2:	d502      	bpl.n	80005ca <__aeabi_l2d+0x16>
 80005c4:	4240      	negs	r0, r0
 80005c6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005ca:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005ce:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005d2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005d6:	f43f aedc 	beq.w	8000392 <__adddf3+0xe6>
 80005da:	f04f 0203 	mov.w	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005f2:	f1c2 0320 	rsb	r3, r2, #32
 80005f6:	fa00 fc03 	lsl.w	ip, r0, r3
 80005fa:	fa20 f002 	lsr.w	r0, r0, r2
 80005fe:	fa01 fe03 	lsl.w	lr, r1, r3
 8000602:	ea40 000e 	orr.w	r0, r0, lr
 8000606:	fa21 f102 	lsr.w	r1, r1, r2
 800060a:	4414      	add	r4, r2
 800060c:	e6c1      	b.n	8000392 <__adddf3+0xe6>
 800060e:	bf00      	nop

08000610 <__aeabi_dmul>:
 8000610:	b570      	push	{r4, r5, r6, lr}
 8000612:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000616:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800061a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800061e:	bf1d      	ittte	ne
 8000620:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000624:	ea94 0f0c 	teqne	r4, ip
 8000628:	ea95 0f0c 	teqne	r5, ip
 800062c:	f000 f8de 	bleq	80007ec <__aeabi_dmul+0x1dc>
 8000630:	442c      	add	r4, r5
 8000632:	ea81 0603 	eor.w	r6, r1, r3
 8000636:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800063a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800063e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000642:	bf18      	it	ne
 8000644:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000648:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800064c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000650:	d038      	beq.n	80006c4 <__aeabi_dmul+0xb4>
 8000652:	fba0 ce02 	umull	ip, lr, r0, r2
 8000656:	f04f 0500 	mov.w	r5, #0
 800065a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800065e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000662:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000666:	f04f 0600 	mov.w	r6, #0
 800066a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800066e:	f09c 0f00 	teq	ip, #0
 8000672:	bf18      	it	ne
 8000674:	f04e 0e01 	orrne.w	lr, lr, #1
 8000678:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800067c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000680:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000684:	d204      	bcs.n	8000690 <__aeabi_dmul+0x80>
 8000686:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800068a:	416d      	adcs	r5, r5
 800068c:	eb46 0606 	adc.w	r6, r6, r6
 8000690:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000694:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000698:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800069c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006a4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a8:	bf88      	it	hi
 80006aa:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006ae:	d81e      	bhi.n	80006ee <__aeabi_dmul+0xde>
 80006b0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006b4:	bf08      	it	eq
 80006b6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006ba:	f150 0000 	adcs.w	r0, r0, #0
 80006be:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006c2:	bd70      	pop	{r4, r5, r6, pc}
 80006c4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c8:	ea46 0101 	orr.w	r1, r6, r1
 80006cc:	ea40 0002 	orr.w	r0, r0, r2
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d8:	bfc2      	ittt	gt
 80006da:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006de:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006e2:	bd70      	popgt	{r4, r5, r6, pc}
 80006e4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e8:	f04f 0e00 	mov.w	lr, #0
 80006ec:	3c01      	subs	r4, #1
 80006ee:	f300 80ab 	bgt.w	8000848 <__aeabi_dmul+0x238>
 80006f2:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006f6:	bfde      	ittt	le
 80006f8:	2000      	movle	r0, #0
 80006fa:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006fe:	bd70      	pople	{r4, r5, r6, pc}
 8000700:	f1c4 0400 	rsb	r4, r4, #0
 8000704:	3c20      	subs	r4, #32
 8000706:	da35      	bge.n	8000774 <__aeabi_dmul+0x164>
 8000708:	340c      	adds	r4, #12
 800070a:	dc1b      	bgt.n	8000744 <__aeabi_dmul+0x134>
 800070c:	f104 0414 	add.w	r4, r4, #20
 8000710:	f1c4 0520 	rsb	r5, r4, #32
 8000714:	fa00 f305 	lsl.w	r3, r0, r5
 8000718:	fa20 f004 	lsr.w	r0, r0, r4
 800071c:	fa01 f205 	lsl.w	r2, r1, r5
 8000720:	ea40 0002 	orr.w	r0, r0, r2
 8000724:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000728:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800072c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000730:	fa21 f604 	lsr.w	r6, r1, r4
 8000734:	eb42 0106 	adc.w	r1, r2, r6
 8000738:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800073c:	bf08      	it	eq
 800073e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000742:	bd70      	pop	{r4, r5, r6, pc}
 8000744:	f1c4 040c 	rsb	r4, r4, #12
 8000748:	f1c4 0520 	rsb	r5, r4, #32
 800074c:	fa00 f304 	lsl.w	r3, r0, r4
 8000750:	fa20 f005 	lsr.w	r0, r0, r5
 8000754:	fa01 f204 	lsl.w	r2, r1, r4
 8000758:	ea40 0002 	orr.w	r0, r0, r2
 800075c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000760:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000764:	f141 0100 	adc.w	r1, r1, #0
 8000768:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800076c:	bf08      	it	eq
 800076e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000772:	bd70      	pop	{r4, r5, r6, pc}
 8000774:	f1c4 0520 	rsb	r5, r4, #32
 8000778:	fa00 f205 	lsl.w	r2, r0, r5
 800077c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000780:	fa20 f304 	lsr.w	r3, r0, r4
 8000784:	fa01 f205 	lsl.w	r2, r1, r5
 8000788:	ea43 0302 	orr.w	r3, r3, r2
 800078c:	fa21 f004 	lsr.w	r0, r1, r4
 8000790:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000794:	fa21 f204 	lsr.w	r2, r1, r4
 8000798:	ea20 0002 	bic.w	r0, r0, r2
 800079c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007a4:	bf08      	it	eq
 80007a6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007aa:	bd70      	pop	{r4, r5, r6, pc}
 80007ac:	f094 0f00 	teq	r4, #0
 80007b0:	d10f      	bne.n	80007d2 <__aeabi_dmul+0x1c2>
 80007b2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007b6:	0040      	lsls	r0, r0, #1
 80007b8:	eb41 0101 	adc.w	r1, r1, r1
 80007bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c0:	bf08      	it	eq
 80007c2:	3c01      	subeq	r4, #1
 80007c4:	d0f7      	beq.n	80007b6 <__aeabi_dmul+0x1a6>
 80007c6:	ea41 0106 	orr.w	r1, r1, r6
 80007ca:	f095 0f00 	teq	r5, #0
 80007ce:	bf18      	it	ne
 80007d0:	4770      	bxne	lr
 80007d2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007d6:	0052      	lsls	r2, r2, #1
 80007d8:	eb43 0303 	adc.w	r3, r3, r3
 80007dc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e0:	bf08      	it	eq
 80007e2:	3d01      	subeq	r5, #1
 80007e4:	d0f7      	beq.n	80007d6 <__aeabi_dmul+0x1c6>
 80007e6:	ea43 0306 	orr.w	r3, r3, r6
 80007ea:	4770      	bx	lr
 80007ec:	ea94 0f0c 	teq	r4, ip
 80007f0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007f4:	bf18      	it	ne
 80007f6:	ea95 0f0c 	teqne	r5, ip
 80007fa:	d00c      	beq.n	8000816 <__aeabi_dmul+0x206>
 80007fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000800:	bf18      	it	ne
 8000802:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000806:	d1d1      	bne.n	80007ac <__aeabi_dmul+0x19c>
 8000808:	ea81 0103 	eor.w	r1, r1, r3
 800080c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000810:	f04f 0000 	mov.w	r0, #0
 8000814:	bd70      	pop	{r4, r5, r6, pc}
 8000816:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800081a:	bf06      	itte	eq
 800081c:	4610      	moveq	r0, r2
 800081e:	4619      	moveq	r1, r3
 8000820:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000824:	d019      	beq.n	800085a <__aeabi_dmul+0x24a>
 8000826:	ea94 0f0c 	teq	r4, ip
 800082a:	d102      	bne.n	8000832 <__aeabi_dmul+0x222>
 800082c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000830:	d113      	bne.n	800085a <__aeabi_dmul+0x24a>
 8000832:	ea95 0f0c 	teq	r5, ip
 8000836:	d105      	bne.n	8000844 <__aeabi_dmul+0x234>
 8000838:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800083c:	bf1c      	itt	ne
 800083e:	4610      	movne	r0, r2
 8000840:	4619      	movne	r1, r3
 8000842:	d10a      	bne.n	800085a <__aeabi_dmul+0x24a>
 8000844:	ea81 0103 	eor.w	r1, r1, r3
 8000848:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800084c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000850:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000854:	f04f 0000 	mov.w	r0, #0
 8000858:	bd70      	pop	{r4, r5, r6, pc}
 800085a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800085e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000862:	bd70      	pop	{r4, r5, r6, pc}

08000864 <__aeabi_ddiv>:
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800086a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800086e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000872:	bf1d      	ittte	ne
 8000874:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000878:	ea94 0f0c 	teqne	r4, ip
 800087c:	ea95 0f0c 	teqne	r5, ip
 8000880:	f000 f8a7 	bleq	80009d2 <__aeabi_ddiv+0x16e>
 8000884:	eba4 0405 	sub.w	r4, r4, r5
 8000888:	ea81 0e03 	eor.w	lr, r1, r3
 800088c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000890:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000894:	f000 8088 	beq.w	80009a8 <__aeabi_ddiv+0x144>
 8000898:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800089c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008a4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008ac:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008b4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008bc:	429d      	cmp	r5, r3
 80008be:	bf08      	it	eq
 80008c0:	4296      	cmpeq	r6, r2
 80008c2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008c6:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008ca:	d202      	bcs.n	80008d2 <__aeabi_ddiv+0x6e>
 80008cc:	085b      	lsrs	r3, r3, #1
 80008ce:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d2:	1ab6      	subs	r6, r6, r2
 80008d4:	eb65 0503 	sbc.w	r5, r5, r3
 80008d8:	085b      	lsrs	r3, r3, #1
 80008da:	ea4f 0232 	mov.w	r2, r2, rrx
 80008de:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008e2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000940:	ea55 0e06 	orrs.w	lr, r5, r6
 8000944:	d018      	beq.n	8000978 <__aeabi_ddiv+0x114>
 8000946:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800094a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800094e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000952:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000956:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800095a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800095e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000962:	d1c0      	bne.n	80008e6 <__aeabi_ddiv+0x82>
 8000964:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000968:	d10b      	bne.n	8000982 <__aeabi_ddiv+0x11e>
 800096a:	ea41 0100 	orr.w	r1, r1, r0
 800096e:	f04f 0000 	mov.w	r0, #0
 8000972:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000976:	e7b6      	b.n	80008e6 <__aeabi_ddiv+0x82>
 8000978:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800097c:	bf04      	itt	eq
 800097e:	4301      	orreq	r1, r0
 8000980:	2000      	moveq	r0, #0
 8000982:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000986:	bf88      	it	hi
 8000988:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800098c:	f63f aeaf 	bhi.w	80006ee <__aeabi_dmul+0xde>
 8000990:	ebb5 0c03 	subs.w	ip, r5, r3
 8000994:	bf04      	itt	eq
 8000996:	ebb6 0c02 	subseq.w	ip, r6, r2
 800099a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800099e:	f150 0000 	adcs.w	r0, r0, #0
 80009a2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	pop	{r4, r5, r6, pc}
 80009a8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009ac:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009b4:	bfc2      	ittt	gt
 80009b6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009ba:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009be:	bd70      	popgt	{r4, r5, r6, pc}
 80009c0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009c4:	f04f 0e00 	mov.w	lr, #0
 80009c8:	3c01      	subs	r4, #1
 80009ca:	e690      	b.n	80006ee <__aeabi_dmul+0xde>
 80009cc:	ea45 0e06 	orr.w	lr, r5, r6
 80009d0:	e68d      	b.n	80006ee <__aeabi_dmul+0xde>
 80009d2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009d6:	ea94 0f0c 	teq	r4, ip
 80009da:	bf08      	it	eq
 80009dc:	ea95 0f0c 	teqeq	r5, ip
 80009e0:	f43f af3b 	beq.w	800085a <__aeabi_dmul+0x24a>
 80009e4:	ea94 0f0c 	teq	r4, ip
 80009e8:	d10a      	bne.n	8000a00 <__aeabi_ddiv+0x19c>
 80009ea:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009ee:	f47f af34 	bne.w	800085a <__aeabi_dmul+0x24a>
 80009f2:	ea95 0f0c 	teq	r5, ip
 80009f6:	f47f af25 	bne.w	8000844 <__aeabi_dmul+0x234>
 80009fa:	4610      	mov	r0, r2
 80009fc:	4619      	mov	r1, r3
 80009fe:	e72c      	b.n	800085a <__aeabi_dmul+0x24a>
 8000a00:	ea95 0f0c 	teq	r5, ip
 8000a04:	d106      	bne.n	8000a14 <__aeabi_ddiv+0x1b0>
 8000a06:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a0a:	f43f aefd 	beq.w	8000808 <__aeabi_dmul+0x1f8>
 8000a0e:	4610      	mov	r0, r2
 8000a10:	4619      	mov	r1, r3
 8000a12:	e722      	b.n	800085a <__aeabi_dmul+0x24a>
 8000a14:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a18:	bf18      	it	ne
 8000a1a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a1e:	f47f aec5 	bne.w	80007ac <__aeabi_dmul+0x19c>
 8000a22:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a26:	f47f af0d 	bne.w	8000844 <__aeabi_dmul+0x234>
 8000a2a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a2e:	f47f aeeb 	bne.w	8000808 <__aeabi_dmul+0x1f8>
 8000a32:	e712      	b.n	800085a <__aeabi_dmul+0x24a>

08000a34 <__gedf2>:
 8000a34:	f04f 3cff 	mov.w	ip, #4294967295
 8000a38:	e006      	b.n	8000a48 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__ledf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	e002      	b.n	8000a48 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__cmpdf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a54:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a58:	bf18      	it	ne
 8000a5a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a5e:	d01b      	beq.n	8000a98 <__cmpdf2+0x54>
 8000a60:	b001      	add	sp, #4
 8000a62:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a66:	bf0c      	ite	eq
 8000a68:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a6c:	ea91 0f03 	teqne	r1, r3
 8000a70:	bf02      	ittt	eq
 8000a72:	ea90 0f02 	teqeq	r0, r2
 8000a76:	2000      	moveq	r0, #0
 8000a78:	4770      	bxeq	lr
 8000a7a:	f110 0f00 	cmn.w	r0, #0
 8000a7e:	ea91 0f03 	teq	r1, r3
 8000a82:	bf58      	it	pl
 8000a84:	4299      	cmppl	r1, r3
 8000a86:	bf08      	it	eq
 8000a88:	4290      	cmpeq	r0, r2
 8000a8a:	bf2c      	ite	cs
 8000a8c:	17d8      	asrcs	r0, r3, #31
 8000a8e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a92:	f040 0001 	orr.w	r0, r0, #1
 8000a96:	4770      	bx	lr
 8000a98:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a9c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa0:	d102      	bne.n	8000aa8 <__cmpdf2+0x64>
 8000aa2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aa6:	d107      	bne.n	8000ab8 <__cmpdf2+0x74>
 8000aa8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab0:	d1d6      	bne.n	8000a60 <__cmpdf2+0x1c>
 8000ab2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ab6:	d0d3      	beq.n	8000a60 <__cmpdf2+0x1c>
 8000ab8:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000abc:	4770      	bx	lr
 8000abe:	bf00      	nop

08000ac0 <__aeabi_cdrcmple>:
 8000ac0:	4684      	mov	ip, r0
 8000ac2:	4610      	mov	r0, r2
 8000ac4:	4662      	mov	r2, ip
 8000ac6:	468c      	mov	ip, r1
 8000ac8:	4619      	mov	r1, r3
 8000aca:	4663      	mov	r3, ip
 8000acc:	e000      	b.n	8000ad0 <__aeabi_cdcmpeq>
 8000ace:	bf00      	nop

08000ad0 <__aeabi_cdcmpeq>:
 8000ad0:	b501      	push	{r0, lr}
 8000ad2:	f7ff ffb7 	bl	8000a44 <__cmpdf2>
 8000ad6:	2800      	cmp	r0, #0
 8000ad8:	bf48      	it	mi
 8000ada:	f110 0f00 	cmnmi.w	r0, #0
 8000ade:	bd01      	pop	{r0, pc}

08000ae0 <__aeabi_dcmpeq>:
 8000ae0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae4:	f7ff fff4 	bl	8000ad0 <__aeabi_cdcmpeq>
 8000ae8:	bf0c      	ite	eq
 8000aea:	2001      	moveq	r0, #1
 8000aec:	2000      	movne	r0, #0
 8000aee:	f85d fb08 	ldr.w	pc, [sp], #8
 8000af2:	bf00      	nop

08000af4 <__aeabi_dcmplt>:
 8000af4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af8:	f7ff ffea 	bl	8000ad0 <__aeabi_cdcmpeq>
 8000afc:	bf34      	ite	cc
 8000afe:	2001      	movcc	r0, #1
 8000b00:	2000      	movcs	r0, #0
 8000b02:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b06:	bf00      	nop

08000b08 <__aeabi_dcmple>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff ffe0 	bl	8000ad0 <__aeabi_cdcmpeq>
 8000b10:	bf94      	ite	ls
 8000b12:	2001      	movls	r0, #1
 8000b14:	2000      	movhi	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmpge>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffce 	bl	8000ac0 <__aeabi_cdrcmple>
 8000b24:	bf94      	ite	ls
 8000b26:	2001      	movls	r0, #1
 8000b28:	2000      	movhi	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmpgt>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffc4 	bl	8000ac0 <__aeabi_cdrcmple>
 8000b38:	bf34      	ite	cc
 8000b3a:	2001      	movcc	r0, #1
 8000b3c:	2000      	movcs	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpun>:
 8000b44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b4c:	d102      	bne.n	8000b54 <__aeabi_dcmpun+0x10>
 8000b4e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b52:	d10a      	bne.n	8000b6a <__aeabi_dcmpun+0x26>
 8000b54:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b5c:	d102      	bne.n	8000b64 <__aeabi_dcmpun+0x20>
 8000b5e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b62:	d102      	bne.n	8000b6a <__aeabi_dcmpun+0x26>
 8000b64:	f04f 0000 	mov.w	r0, #0
 8000b68:	4770      	bx	lr
 8000b6a:	f04f 0001 	mov.w	r0, #1
 8000b6e:	4770      	bx	lr

08000b70 <__aeabi_d2iz>:
 8000b70:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b74:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b78:	d215      	bcs.n	8000ba6 <__aeabi_d2iz+0x36>
 8000b7a:	d511      	bpl.n	8000ba0 <__aeabi_d2iz+0x30>
 8000b7c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b80:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b84:	d912      	bls.n	8000bac <__aeabi_d2iz+0x3c>
 8000b86:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b8a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b8e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b92:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b96:	fa23 f002 	lsr.w	r0, r3, r2
 8000b9a:	bf18      	it	ne
 8000b9c:	4240      	negne	r0, r0
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000baa:	d105      	bne.n	8000bb8 <__aeabi_d2iz+0x48>
 8000bac:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb0:	bf08      	it	eq
 8000bb2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bb6:	4770      	bx	lr
 8000bb8:	f04f 0000 	mov.w	r0, #0
 8000bbc:	4770      	bx	lr
 8000bbe:	bf00      	nop

08000bc0 <__aeabi_uldivmod>:
 8000bc0:	b953      	cbnz	r3, 8000bd8 <__aeabi_uldivmod+0x18>
 8000bc2:	b94a      	cbnz	r2, 8000bd8 <__aeabi_uldivmod+0x18>
 8000bc4:	2900      	cmp	r1, #0
 8000bc6:	bf08      	it	eq
 8000bc8:	2800      	cmpeq	r0, #0
 8000bca:	bf1c      	itt	ne
 8000bcc:	f04f 31ff 	movne.w	r1, #4294967295
 8000bd0:	f04f 30ff 	movne.w	r0, #4294967295
 8000bd4:	f000 b97a 	b.w	8000ecc <__aeabi_idiv0>
 8000bd8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bdc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000be0:	f000 f806 	bl	8000bf0 <__udivmoddi4>
 8000be4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000be8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bec:	b004      	add	sp, #16
 8000bee:	4770      	bx	lr

08000bf0 <__udivmoddi4>:
 8000bf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bf4:	468c      	mov	ip, r1
 8000bf6:	460d      	mov	r5, r1
 8000bf8:	4604      	mov	r4, r0
 8000bfa:	9e08      	ldr	r6, [sp, #32]
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	d151      	bne.n	8000ca4 <__udivmoddi4+0xb4>
 8000c00:	428a      	cmp	r2, r1
 8000c02:	4617      	mov	r7, r2
 8000c04:	d96d      	bls.n	8000ce2 <__udivmoddi4+0xf2>
 8000c06:	fab2 fe82 	clz	lr, r2
 8000c0a:	f1be 0f00 	cmp.w	lr, #0
 8000c0e:	d00b      	beq.n	8000c28 <__udivmoddi4+0x38>
 8000c10:	f1ce 0c20 	rsb	ip, lr, #32
 8000c14:	fa01 f50e 	lsl.w	r5, r1, lr
 8000c18:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000c1c:	fa02 f70e 	lsl.w	r7, r2, lr
 8000c20:	ea4c 0c05 	orr.w	ip, ip, r5
 8000c24:	fa00 f40e 	lsl.w	r4, r0, lr
 8000c28:	ea4f 4a17 	mov.w	sl, r7, lsr #16
 8000c2c:	0c25      	lsrs	r5, r4, #16
 8000c2e:	fbbc f8fa 	udiv	r8, ip, sl
 8000c32:	fa1f f987 	uxth.w	r9, r7
 8000c36:	fb0a cc18 	mls	ip, sl, r8, ip
 8000c3a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
 8000c3e:	fb08 f309 	mul.w	r3, r8, r9
 8000c42:	42ab      	cmp	r3, r5
 8000c44:	d90a      	bls.n	8000c5c <__udivmoddi4+0x6c>
 8000c46:	19ed      	adds	r5, r5, r7
 8000c48:	f108 32ff 	add.w	r2, r8, #4294967295
 8000c4c:	f080 8123 	bcs.w	8000e96 <__udivmoddi4+0x2a6>
 8000c50:	42ab      	cmp	r3, r5
 8000c52:	f240 8120 	bls.w	8000e96 <__udivmoddi4+0x2a6>
 8000c56:	f1a8 0802 	sub.w	r8, r8, #2
 8000c5a:	443d      	add	r5, r7
 8000c5c:	1aed      	subs	r5, r5, r3
 8000c5e:	b2a4      	uxth	r4, r4
 8000c60:	fbb5 f0fa 	udiv	r0, r5, sl
 8000c64:	fb0a 5510 	mls	r5, sl, r0, r5
 8000c68:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000c6c:	fb00 f909 	mul.w	r9, r0, r9
 8000c70:	45a1      	cmp	r9, r4
 8000c72:	d909      	bls.n	8000c88 <__udivmoddi4+0x98>
 8000c74:	19e4      	adds	r4, r4, r7
 8000c76:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c7a:	f080 810a 	bcs.w	8000e92 <__udivmoddi4+0x2a2>
 8000c7e:	45a1      	cmp	r9, r4
 8000c80:	f240 8107 	bls.w	8000e92 <__udivmoddi4+0x2a2>
 8000c84:	3802      	subs	r0, #2
 8000c86:	443c      	add	r4, r7
 8000c88:	eba4 0409 	sub.w	r4, r4, r9
 8000c8c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000c90:	2100      	movs	r1, #0
 8000c92:	2e00      	cmp	r6, #0
 8000c94:	d061      	beq.n	8000d5a <__udivmoddi4+0x16a>
 8000c96:	fa24 f40e 	lsr.w	r4, r4, lr
 8000c9a:	2300      	movs	r3, #0
 8000c9c:	6034      	str	r4, [r6, #0]
 8000c9e:	6073      	str	r3, [r6, #4]
 8000ca0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca4:	428b      	cmp	r3, r1
 8000ca6:	d907      	bls.n	8000cb8 <__udivmoddi4+0xc8>
 8000ca8:	2e00      	cmp	r6, #0
 8000caa:	d054      	beq.n	8000d56 <__udivmoddi4+0x166>
 8000cac:	2100      	movs	r1, #0
 8000cae:	e886 0021 	stmia.w	r6, {r0, r5}
 8000cb2:	4608      	mov	r0, r1
 8000cb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cb8:	fab3 f183 	clz	r1, r3
 8000cbc:	2900      	cmp	r1, #0
 8000cbe:	f040 808e 	bne.w	8000dde <__udivmoddi4+0x1ee>
 8000cc2:	42ab      	cmp	r3, r5
 8000cc4:	d302      	bcc.n	8000ccc <__udivmoddi4+0xdc>
 8000cc6:	4282      	cmp	r2, r0
 8000cc8:	f200 80fa 	bhi.w	8000ec0 <__udivmoddi4+0x2d0>
 8000ccc:	1a84      	subs	r4, r0, r2
 8000cce:	eb65 0503 	sbc.w	r5, r5, r3
 8000cd2:	2001      	movs	r0, #1
 8000cd4:	46ac      	mov	ip, r5
 8000cd6:	2e00      	cmp	r6, #0
 8000cd8:	d03f      	beq.n	8000d5a <__udivmoddi4+0x16a>
 8000cda:	e886 1010 	stmia.w	r6, {r4, ip}
 8000cde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ce2:	b912      	cbnz	r2, 8000cea <__udivmoddi4+0xfa>
 8000ce4:	2701      	movs	r7, #1
 8000ce6:	fbb7 f7f2 	udiv	r7, r7, r2
 8000cea:	fab7 fe87 	clz	lr, r7
 8000cee:	f1be 0f00 	cmp.w	lr, #0
 8000cf2:	d134      	bne.n	8000d5e <__udivmoddi4+0x16e>
 8000cf4:	1beb      	subs	r3, r5, r7
 8000cf6:	0c3a      	lsrs	r2, r7, #16
 8000cf8:	fa1f fc87 	uxth.w	ip, r7
 8000cfc:	2101      	movs	r1, #1
 8000cfe:	fbb3 f8f2 	udiv	r8, r3, r2
 8000d02:	0c25      	lsrs	r5, r4, #16
 8000d04:	fb02 3318 	mls	r3, r2, r8, r3
 8000d08:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000d0c:	fb0c f308 	mul.w	r3, ip, r8
 8000d10:	42ab      	cmp	r3, r5
 8000d12:	d907      	bls.n	8000d24 <__udivmoddi4+0x134>
 8000d14:	19ed      	adds	r5, r5, r7
 8000d16:	f108 30ff 	add.w	r0, r8, #4294967295
 8000d1a:	d202      	bcs.n	8000d22 <__udivmoddi4+0x132>
 8000d1c:	42ab      	cmp	r3, r5
 8000d1e:	f200 80d1 	bhi.w	8000ec4 <__udivmoddi4+0x2d4>
 8000d22:	4680      	mov	r8, r0
 8000d24:	1aed      	subs	r5, r5, r3
 8000d26:	b2a3      	uxth	r3, r4
 8000d28:	fbb5 f0f2 	udiv	r0, r5, r2
 8000d2c:	fb02 5510 	mls	r5, r2, r0, r5
 8000d30:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8000d34:	fb0c fc00 	mul.w	ip, ip, r0
 8000d38:	45a4      	cmp	ip, r4
 8000d3a:	d907      	bls.n	8000d4c <__udivmoddi4+0x15c>
 8000d3c:	19e4      	adds	r4, r4, r7
 8000d3e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d42:	d202      	bcs.n	8000d4a <__udivmoddi4+0x15a>
 8000d44:	45a4      	cmp	ip, r4
 8000d46:	f200 80b8 	bhi.w	8000eba <__udivmoddi4+0x2ca>
 8000d4a:	4618      	mov	r0, r3
 8000d4c:	eba4 040c 	sub.w	r4, r4, ip
 8000d50:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000d54:	e79d      	b.n	8000c92 <__udivmoddi4+0xa2>
 8000d56:	4631      	mov	r1, r6
 8000d58:	4630      	mov	r0, r6
 8000d5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d5e:	f1ce 0420 	rsb	r4, lr, #32
 8000d62:	fa05 f30e 	lsl.w	r3, r5, lr
 8000d66:	fa07 f70e 	lsl.w	r7, r7, lr
 8000d6a:	fa20 f804 	lsr.w	r8, r0, r4
 8000d6e:	0c3a      	lsrs	r2, r7, #16
 8000d70:	fa25 f404 	lsr.w	r4, r5, r4
 8000d74:	ea48 0803 	orr.w	r8, r8, r3
 8000d78:	fbb4 f1f2 	udiv	r1, r4, r2
 8000d7c:	ea4f 4518 	mov.w	r5, r8, lsr #16
 8000d80:	fb02 4411 	mls	r4, r2, r1, r4
 8000d84:	fa1f fc87 	uxth.w	ip, r7
 8000d88:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
 8000d8c:	fb01 f30c 	mul.w	r3, r1, ip
 8000d90:	42ab      	cmp	r3, r5
 8000d92:	fa00 f40e 	lsl.w	r4, r0, lr
 8000d96:	d909      	bls.n	8000dac <__udivmoddi4+0x1bc>
 8000d98:	19ed      	adds	r5, r5, r7
 8000d9a:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d9e:	f080 808a 	bcs.w	8000eb6 <__udivmoddi4+0x2c6>
 8000da2:	42ab      	cmp	r3, r5
 8000da4:	f240 8087 	bls.w	8000eb6 <__udivmoddi4+0x2c6>
 8000da8:	3902      	subs	r1, #2
 8000daa:	443d      	add	r5, r7
 8000dac:	1aeb      	subs	r3, r5, r3
 8000dae:	fa1f f588 	uxth.w	r5, r8
 8000db2:	fbb3 f0f2 	udiv	r0, r3, r2
 8000db6:	fb02 3310 	mls	r3, r2, r0, r3
 8000dba:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000dbe:	fb00 f30c 	mul.w	r3, r0, ip
 8000dc2:	42ab      	cmp	r3, r5
 8000dc4:	d907      	bls.n	8000dd6 <__udivmoddi4+0x1e6>
 8000dc6:	19ed      	adds	r5, r5, r7
 8000dc8:	f100 38ff 	add.w	r8, r0, #4294967295
 8000dcc:	d26f      	bcs.n	8000eae <__udivmoddi4+0x2be>
 8000dce:	42ab      	cmp	r3, r5
 8000dd0:	d96d      	bls.n	8000eae <__udivmoddi4+0x2be>
 8000dd2:	3802      	subs	r0, #2
 8000dd4:	443d      	add	r5, r7
 8000dd6:	1aeb      	subs	r3, r5, r3
 8000dd8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000ddc:	e78f      	b.n	8000cfe <__udivmoddi4+0x10e>
 8000dde:	f1c1 0720 	rsb	r7, r1, #32
 8000de2:	fa22 f807 	lsr.w	r8, r2, r7
 8000de6:	408b      	lsls	r3, r1
 8000de8:	fa05 f401 	lsl.w	r4, r5, r1
 8000dec:	ea48 0303 	orr.w	r3, r8, r3
 8000df0:	fa20 fe07 	lsr.w	lr, r0, r7
 8000df4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 8000df8:	40fd      	lsrs	r5, r7
 8000dfa:	ea4e 0e04 	orr.w	lr, lr, r4
 8000dfe:	fbb5 f9fc 	udiv	r9, r5, ip
 8000e02:	ea4f 441e 	mov.w	r4, lr, lsr #16
 8000e06:	fb0c 5519 	mls	r5, ip, r9, r5
 8000e0a:	fa1f f883 	uxth.w	r8, r3
 8000e0e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
 8000e12:	fb09 f408 	mul.w	r4, r9, r8
 8000e16:	42ac      	cmp	r4, r5
 8000e18:	fa02 f201 	lsl.w	r2, r2, r1
 8000e1c:	fa00 fa01 	lsl.w	sl, r0, r1
 8000e20:	d908      	bls.n	8000e34 <__udivmoddi4+0x244>
 8000e22:	18ed      	adds	r5, r5, r3
 8000e24:	f109 30ff 	add.w	r0, r9, #4294967295
 8000e28:	d243      	bcs.n	8000eb2 <__udivmoddi4+0x2c2>
 8000e2a:	42ac      	cmp	r4, r5
 8000e2c:	d941      	bls.n	8000eb2 <__udivmoddi4+0x2c2>
 8000e2e:	f1a9 0902 	sub.w	r9, r9, #2
 8000e32:	441d      	add	r5, r3
 8000e34:	1b2d      	subs	r5, r5, r4
 8000e36:	fa1f fe8e 	uxth.w	lr, lr
 8000e3a:	fbb5 f0fc 	udiv	r0, r5, ip
 8000e3e:	fb0c 5510 	mls	r5, ip, r0, r5
 8000e42:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
 8000e46:	fb00 f808 	mul.w	r8, r0, r8
 8000e4a:	45a0      	cmp	r8, r4
 8000e4c:	d907      	bls.n	8000e5e <__udivmoddi4+0x26e>
 8000e4e:	18e4      	adds	r4, r4, r3
 8000e50:	f100 35ff 	add.w	r5, r0, #4294967295
 8000e54:	d229      	bcs.n	8000eaa <__udivmoddi4+0x2ba>
 8000e56:	45a0      	cmp	r8, r4
 8000e58:	d927      	bls.n	8000eaa <__udivmoddi4+0x2ba>
 8000e5a:	3802      	subs	r0, #2
 8000e5c:	441c      	add	r4, r3
 8000e5e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000e62:	eba4 0408 	sub.w	r4, r4, r8
 8000e66:	fba0 8902 	umull	r8, r9, r0, r2
 8000e6a:	454c      	cmp	r4, r9
 8000e6c:	46c6      	mov	lr, r8
 8000e6e:	464d      	mov	r5, r9
 8000e70:	d315      	bcc.n	8000e9e <__udivmoddi4+0x2ae>
 8000e72:	d012      	beq.n	8000e9a <__udivmoddi4+0x2aa>
 8000e74:	b156      	cbz	r6, 8000e8c <__udivmoddi4+0x29c>
 8000e76:	ebba 030e 	subs.w	r3, sl, lr
 8000e7a:	eb64 0405 	sbc.w	r4, r4, r5
 8000e7e:	fa04 f707 	lsl.w	r7, r4, r7
 8000e82:	40cb      	lsrs	r3, r1
 8000e84:	431f      	orrs	r7, r3
 8000e86:	40cc      	lsrs	r4, r1
 8000e88:	6037      	str	r7, [r6, #0]
 8000e8a:	6074      	str	r4, [r6, #4]
 8000e8c:	2100      	movs	r1, #0
 8000e8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e92:	4618      	mov	r0, r3
 8000e94:	e6f8      	b.n	8000c88 <__udivmoddi4+0x98>
 8000e96:	4690      	mov	r8, r2
 8000e98:	e6e0      	b.n	8000c5c <__udivmoddi4+0x6c>
 8000e9a:	45c2      	cmp	sl, r8
 8000e9c:	d2ea      	bcs.n	8000e74 <__udivmoddi4+0x284>
 8000e9e:	ebb8 0e02 	subs.w	lr, r8, r2
 8000ea2:	eb69 0503 	sbc.w	r5, r9, r3
 8000ea6:	3801      	subs	r0, #1
 8000ea8:	e7e4      	b.n	8000e74 <__udivmoddi4+0x284>
 8000eaa:	4628      	mov	r0, r5
 8000eac:	e7d7      	b.n	8000e5e <__udivmoddi4+0x26e>
 8000eae:	4640      	mov	r0, r8
 8000eb0:	e791      	b.n	8000dd6 <__udivmoddi4+0x1e6>
 8000eb2:	4681      	mov	r9, r0
 8000eb4:	e7be      	b.n	8000e34 <__udivmoddi4+0x244>
 8000eb6:	4601      	mov	r1, r0
 8000eb8:	e778      	b.n	8000dac <__udivmoddi4+0x1bc>
 8000eba:	3802      	subs	r0, #2
 8000ebc:	443c      	add	r4, r7
 8000ebe:	e745      	b.n	8000d4c <__udivmoddi4+0x15c>
 8000ec0:	4608      	mov	r0, r1
 8000ec2:	e708      	b.n	8000cd6 <__udivmoddi4+0xe6>
 8000ec4:	f1a8 0802 	sub.w	r8, r8, #2
 8000ec8:	443d      	add	r5, r7
 8000eca:	e72b      	b.n	8000d24 <__udivmoddi4+0x134>

08000ecc <__aeabi_idiv0>:
 8000ecc:	4770      	bx	lr
 8000ece:	bf00      	nop

08000ed0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000ed0:	b510      	push	{r4, lr}
 8000ed2:	4604      	mov	r4, r0
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8000ed4:	4b0e      	ldr	r3, [pc, #56]	; (8000f10 <HAL_InitTick+0x40>)
 8000ed6:	7818      	ldrb	r0, [r3, #0]
 8000ed8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000edc:	fbb3 f3f0 	udiv	r3, r3, r0
 8000ee0:	4a0c      	ldr	r2, [pc, #48]	; (8000f14 <HAL_InitTick+0x44>)
 8000ee2:	6810      	ldr	r0, [r2, #0]
 8000ee4:	fbb0 f0f3 	udiv	r0, r0, r3
 8000ee8:	f000 f89c 	bl	8001024 <HAL_SYSTICK_Config>
 8000eec:	b968      	cbnz	r0, 8000f0a <HAL_InitTick+0x3a>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000eee:	2c0f      	cmp	r4, #15
 8000ef0:	d901      	bls.n	8000ef6 <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 8000ef2:	2001      	movs	r0, #1
  }

  /* Return function status */
  return HAL_OK;
}
 8000ef4:	bd10      	pop	{r4, pc}
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8000ef6:	2200      	movs	r2, #0
 8000ef8:	4621      	mov	r1, r4
 8000efa:	f04f 30ff 	mov.w	r0, #4294967295
 8000efe:	f000 f85f 	bl	8000fc0 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8000f02:	4b05      	ldr	r3, [pc, #20]	; (8000f18 <HAL_InitTick+0x48>)
 8000f04:	601c      	str	r4, [r3, #0]
  return HAL_OK;
 8000f06:	2000      	movs	r0, #0
 8000f08:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8000f0a:	2001      	movs	r0, #1
 8000f0c:	bd10      	pop	{r4, pc}
 8000f0e:	bf00      	nop
 8000f10:	20000000 	.word	0x20000000
 8000f14:	20000008 	.word	0x20000008
 8000f18:	20000004 	.word	0x20000004

08000f1c <HAL_Init>:
{
 8000f1c:	b508      	push	{r3, lr}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8000f1e:	4b0b      	ldr	r3, [pc, #44]	; (8000f4c <HAL_Init+0x30>)
 8000f20:	681a      	ldr	r2, [r3, #0]
 8000f22:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8000f26:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8000f28:	681a      	ldr	r2, [r3, #0]
 8000f2a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000f2e:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8000f30:	681a      	ldr	r2, [r3, #0]
 8000f32:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000f36:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000f38:	2003      	movs	r0, #3
 8000f3a:	f000 f82f 	bl	8000f9c <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 8000f3e:	2000      	movs	r0, #0
 8000f40:	f7ff ffc6 	bl	8000ed0 <HAL_InitTick>
  HAL_MspInit();
 8000f44:	f000 ffc6 	bl	8001ed4 <HAL_MspInit>
}
 8000f48:	2000      	movs	r0, #0
 8000f4a:	bd08      	pop	{r3, pc}
 8000f4c:	40023c00 	.word	0x40023c00

08000f50 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8000f50:	4a03      	ldr	r2, [pc, #12]	; (8000f60 <HAL_IncTick+0x10>)
 8000f52:	6811      	ldr	r1, [r2, #0]
 8000f54:	4b03      	ldr	r3, [pc, #12]	; (8000f64 <HAL_IncTick+0x14>)
 8000f56:	781b      	ldrb	r3, [r3, #0]
 8000f58:	440b      	add	r3, r1
 8000f5a:	6013      	str	r3, [r2, #0]
 8000f5c:	4770      	bx	lr
 8000f5e:	bf00      	nop
 8000f60:	20000204 	.word	0x20000204
 8000f64:	20000000 	.word	0x20000000

08000f68 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8000f68:	4b01      	ldr	r3, [pc, #4]	; (8000f70 <HAL_GetTick+0x8>)
 8000f6a:	6818      	ldr	r0, [r3, #0]
}
 8000f6c:	4770      	bx	lr
 8000f6e:	bf00      	nop
 8000f70:	20000204 	.word	0x20000204

08000f74 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8000f74:	b538      	push	{r3, r4, r5, lr}
 8000f76:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8000f78:	f7ff fff6 	bl	8000f68 <HAL_GetTick>
 8000f7c:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8000f7e:	f1b4 3fff 	cmp.w	r4, #4294967295
 8000f82:	d002      	beq.n	8000f8a <HAL_Delay+0x16>
  {
    wait += (uint32_t)(uwTickFreq);
 8000f84:	4b04      	ldr	r3, [pc, #16]	; (8000f98 <HAL_Delay+0x24>)
 8000f86:	781b      	ldrb	r3, [r3, #0]
 8000f88:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8000f8a:	f7ff ffed 	bl	8000f68 <HAL_GetTick>
 8000f8e:	1b40      	subs	r0, r0, r5
 8000f90:	4284      	cmp	r4, r0
 8000f92:	d8fa      	bhi.n	8000f8a <HAL_Delay+0x16>
  {
  }
}
 8000f94:	bd38      	pop	{r3, r4, r5, pc}
 8000f96:	bf00      	nop
 8000f98:	20000000 	.word	0x20000000

08000f9c <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8000f9c:	4a07      	ldr	r2, [pc, #28]	; (8000fbc <HAL_NVIC_SetPriorityGrouping+0x20>)
 8000f9e:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8000fa0:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8000fa4:	041b      	lsls	r3, r3, #16
 8000fa6:	0c1b      	lsrs	r3, r3, #16
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8000fa8:	0200      	lsls	r0, r0, #8
 8000faa:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8000fae:	4318      	orrs	r0, r3
  reg_value  =  (reg_value                                   |
 8000fb0:	f040 60bf 	orr.w	r0, r0, #100139008	; 0x5f80000
 8000fb4:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8000fb8:	60d0      	str	r0, [r2, #12]
 8000fba:	4770      	bx	lr
 8000fbc:	e000ed00 	.word	0xe000ed00

08000fc0 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8000fc0:	b430      	push	{r4, r5}
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8000fc2:	4b16      	ldr	r3, [pc, #88]	; (800101c <HAL_NVIC_SetPriority+0x5c>)
 8000fc4:	68db      	ldr	r3, [r3, #12]
 8000fc6:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8000fca:	f1c3 0407 	rsb	r4, r3, #7
 8000fce:	2c04      	cmp	r4, #4
 8000fd0:	bf28      	it	cs
 8000fd2:	2404      	movcs	r4, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8000fd4:	1d1d      	adds	r5, r3, #4
 8000fd6:	2d06      	cmp	r5, #6
 8000fd8:	d917      	bls.n	800100a <HAL_NVIC_SetPriority+0x4a>
 8000fda:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000fdc:	2501      	movs	r5, #1
 8000fde:	fa05 f404 	lsl.w	r4, r5, r4
 8000fe2:	3c01      	subs	r4, #1
 8000fe4:	4021      	ands	r1, r4
 8000fe6:	4099      	lsls	r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8000fe8:	fa05 f303 	lsl.w	r3, r5, r3
 8000fec:	3b01      	subs	r3, #1
 8000fee:	4013      	ands	r3, r2
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000ff0:	4319      	orrs	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8000ff2:	2800      	cmp	r0, #0
 8000ff4:	db0b      	blt.n	800100e <HAL_NVIC_SetPriority+0x4e>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000ff6:	0109      	lsls	r1, r1, #4
 8000ff8:	b2c9      	uxtb	r1, r1
 8000ffa:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8000ffe:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8001002:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8001006:	bc30      	pop	{r4, r5}
 8001008:	4770      	bx	lr
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800100a:	2300      	movs	r3, #0
 800100c:	e7e6      	b.n	8000fdc <HAL_NVIC_SetPriority+0x1c>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800100e:	f000 000f 	and.w	r0, r0, #15
 8001012:	0109      	lsls	r1, r1, #4
 8001014:	b2c9      	uxtb	r1, r1
 8001016:	4b02      	ldr	r3, [pc, #8]	; (8001020 <HAL_NVIC_SetPriority+0x60>)
 8001018:	5419      	strb	r1, [r3, r0]
 800101a:	e7f4      	b.n	8001006 <HAL_NVIC_SetPriority+0x46>
 800101c:	e000ed00 	.word	0xe000ed00
 8001020:	e000ed14 	.word	0xe000ed14

08001024 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001024:	3801      	subs	r0, #1
 8001026:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800102a:	d20a      	bcs.n	8001042 <HAL_SYSTICK_Config+0x1e>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800102c:	4b06      	ldr	r3, [pc, #24]	; (8001048 <HAL_SYSTICK_Config+0x24>)
 800102e:	6058      	str	r0, [r3, #4]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001030:	21f0      	movs	r1, #240	; 0xf0
 8001032:	4a06      	ldr	r2, [pc, #24]	; (800104c <HAL_SYSTICK_Config+0x28>)
 8001034:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001038:	2000      	movs	r0, #0
 800103a:	6098      	str	r0, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800103c:	2207      	movs	r2, #7
 800103e:	601a      	str	r2, [r3, #0]
 8001040:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 8001042:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8001044:	4770      	bx	lr
 8001046:	bf00      	nop
 8001048:	e000e010 	.word	0xe000e010
 800104c:	e000ed00 	.word	0xe000ed00

08001050 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001050:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001052:	b083      	sub	sp, #12
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001054:	2400      	movs	r4, #0
 8001056:	e04b      	b.n	80010f0 <HAL_GPIO_Init+0xa0>
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8001058:	ea4f 0ed4 	mov.w	lr, r4, lsr #3
 800105c:	f10e 0e08 	add.w	lr, lr, #8
 8001060:	f850 202e 	ldr.w	r2, [r0, lr, lsl #2]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001064:	f004 0607 	and.w	r6, r4, #7
 8001068:	00b6      	lsls	r6, r6, #2
 800106a:	270f      	movs	r7, #15
 800106c:	40b7      	lsls	r7, r6
 800106e:	ea22 0207 	bic.w	r2, r2, r7
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001072:	690f      	ldr	r7, [r1, #16]
 8001074:	fa07 f606 	lsl.w	r6, r7, r6
 8001078:	4332      	orrs	r2, r6
        GPIOx->AFR[position >> 3U] = temp;
 800107a:	f840 202e 	str.w	r2, [r0, lr, lsl #2]
 800107e:	e046      	b.n	800110e <HAL_GPIO_Init+0xbe>
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001080:	2609      	movs	r6, #9
 8001082:	e000      	b.n	8001086 <HAL_GPIO_Init+0x36>
 8001084:	2600      	movs	r6, #0
 8001086:	fa06 f60e 	lsl.w	r6, r6, lr
 800108a:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
 800108c:	3302      	adds	r3, #2
 800108e:	4e64      	ldr	r6, [pc, #400]	; (8001220 <HAL_GPIO_Init+0x1d0>)
 8001090:	f846 2023 	str.w	r2, [r6, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8001094:	4b63      	ldr	r3, [pc, #396]	; (8001224 <HAL_GPIO_Init+0x1d4>)
 8001096:	681a      	ldr	r2, [r3, #0]
        temp &= ~((uint32_t)iocurrent);
 8001098:	43eb      	mvns	r3, r5
 800109a:	ea02 0603 	and.w	r6, r2, r3
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800109e:	684f      	ldr	r7, [r1, #4]
 80010a0:	f417 3f80 	tst.w	r7, #65536	; 0x10000
 80010a4:	d001      	beq.n	80010aa <HAL_GPIO_Init+0x5a>
        {
          temp |= iocurrent;
 80010a6:	ea45 0602 	orr.w	r6, r5, r2
        }
        EXTI->IMR = temp;
 80010aa:	4a5e      	ldr	r2, [pc, #376]	; (8001224 <HAL_GPIO_Init+0x1d4>)
 80010ac:	6016      	str	r6, [r2, #0]

        temp = EXTI->EMR;
 80010ae:	6852      	ldr	r2, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 80010b0:	ea03 0602 	and.w	r6, r3, r2
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80010b4:	684f      	ldr	r7, [r1, #4]
 80010b6:	f417 3f00 	tst.w	r7, #131072	; 0x20000
 80010ba:	d001      	beq.n	80010c0 <HAL_GPIO_Init+0x70>
        {
          temp |= iocurrent;
 80010bc:	ea45 0602 	orr.w	r6, r5, r2
        }
        EXTI->EMR = temp;
 80010c0:	4a58      	ldr	r2, [pc, #352]	; (8001224 <HAL_GPIO_Init+0x1d4>)
 80010c2:	6056      	str	r6, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80010c4:	6892      	ldr	r2, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80010c6:	ea03 0602 	and.w	r6, r3, r2
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80010ca:	684f      	ldr	r7, [r1, #4]
 80010cc:	f417 1f80 	tst.w	r7, #1048576	; 0x100000
 80010d0:	d001      	beq.n	80010d6 <HAL_GPIO_Init+0x86>
        {
          temp |= iocurrent;
 80010d2:	ea45 0602 	orr.w	r6, r5, r2
        }
        EXTI->RTSR = temp;
 80010d6:	4a53      	ldr	r2, [pc, #332]	; (8001224 <HAL_GPIO_Init+0x1d4>)
 80010d8:	6096      	str	r6, [r2, #8]

        temp = EXTI->FTSR;
 80010da:	68d2      	ldr	r2, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 80010dc:	4013      	ands	r3, r2
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80010de:	684e      	ldr	r6, [r1, #4]
 80010e0:	f416 1f00 	tst.w	r6, #2097152	; 0x200000
 80010e4:	d001      	beq.n	80010ea <HAL_GPIO_Init+0x9a>
        {
          temp |= iocurrent;
 80010e6:	ea45 0302 	orr.w	r3, r5, r2
        }
        EXTI->FTSR = temp;
 80010ea:	4a4e      	ldr	r2, [pc, #312]	; (8001224 <HAL_GPIO_Init+0x1d4>)
 80010ec:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80010ee:	3401      	adds	r4, #1
 80010f0:	2c0f      	cmp	r4, #15
 80010f2:	f200 8092 	bhi.w	800121a <HAL_GPIO_Init+0x1ca>
    ioposition = 0x01U << position;
 80010f6:	2301      	movs	r3, #1
 80010f8:	40a3      	lsls	r3, r4
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80010fa:	680a      	ldr	r2, [r1, #0]
 80010fc:	ea03 0502 	and.w	r5, r3, r2
    if(iocurrent == ioposition)
 8001100:	42ab      	cmp	r3, r5
 8001102:	d1f4      	bne.n	80010ee <HAL_GPIO_Init+0x9e>
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001104:	684a      	ldr	r2, [r1, #4]
 8001106:	2a02      	cmp	r2, #2
 8001108:	d0a6      	beq.n	8001058 <HAL_GPIO_Init+0x8>
 800110a:	2a12      	cmp	r2, #18
 800110c:	d0a4      	beq.n	8001058 <HAL_GPIO_Init+0x8>
      temp = GPIOx->MODER;
 800110e:	6806      	ldr	r6, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001110:	ea4f 0e44 	mov.w	lr, r4, lsl #1
 8001114:	2203      	movs	r2, #3
 8001116:	fa02 f20e 	lsl.w	r2, r2, lr
 800111a:	43d2      	mvns	r2, r2
 800111c:	4016      	ands	r6, r2
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800111e:	684f      	ldr	r7, [r1, #4]
 8001120:	f007 0703 	and.w	r7, r7, #3
 8001124:	fa07 f70e 	lsl.w	r7, r7, lr
 8001128:	433e      	orrs	r6, r7
      GPIOx->MODER = temp;
 800112a:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800112c:	684e      	ldr	r6, [r1, #4]
 800112e:	1e77      	subs	r7, r6, #1
 8001130:	2f01      	cmp	r7, #1
 8001132:	d903      	bls.n	800113c <HAL_GPIO_Init+0xec>
 8001134:	2e11      	cmp	r6, #17
 8001136:	d001      	beq.n	800113c <HAL_GPIO_Init+0xec>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001138:	2e12      	cmp	r6, #18
 800113a:	d10f      	bne.n	800115c <HAL_GPIO_Init+0x10c>
        temp = GPIOx->OSPEEDR; 
 800113c:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800113e:	4016      	ands	r6, r2
        temp |= (GPIO_Init->Speed << (position * 2U));
 8001140:	68cf      	ldr	r7, [r1, #12]
 8001142:	fa07 f70e 	lsl.w	r7, r7, lr
 8001146:	433e      	orrs	r6, r7
        GPIOx->OSPEEDR = temp;
 8001148:	6086      	str	r6, [r0, #8]
        temp = GPIOx->OTYPER;
 800114a:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800114c:	ea26 0303 	bic.w	r3, r6, r3
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8001150:	684e      	ldr	r6, [r1, #4]
 8001152:	f3c6 1600 	ubfx	r6, r6, #4, #1
 8001156:	40a6      	lsls	r6, r4
 8001158:	4333      	orrs	r3, r6
        GPIOx->OTYPER = temp;
 800115a:	6043      	str	r3, [r0, #4]
      temp = GPIOx->PUPDR;
 800115c:	68c3      	ldr	r3, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800115e:	401a      	ands	r2, r3
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001160:	688b      	ldr	r3, [r1, #8]
 8001162:	fa03 f30e 	lsl.w	r3, r3, lr
 8001166:	431a      	orrs	r2, r3
      GPIOx->PUPDR = temp;
 8001168:	60c2      	str	r2, [r0, #12]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800116a:	684b      	ldr	r3, [r1, #4]
 800116c:	f013 5f80 	tst.w	r3, #268435456	; 0x10000000
 8001170:	d0bd      	beq.n	80010ee <HAL_GPIO_Init+0x9e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001172:	2300      	movs	r3, #0
 8001174:	9301      	str	r3, [sp, #4]
 8001176:	4b2c      	ldr	r3, [pc, #176]	; (8001228 <HAL_GPIO_Init+0x1d8>)
 8001178:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800117a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800117e:	645a      	str	r2, [r3, #68]	; 0x44
 8001180:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001182:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001186:	9301      	str	r3, [sp, #4]
 8001188:	9b01      	ldr	r3, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800118a:	08a3      	lsrs	r3, r4, #2
 800118c:	1c9e      	adds	r6, r3, #2
 800118e:	4a24      	ldr	r2, [pc, #144]	; (8001220 <HAL_GPIO_Init+0x1d0>)
 8001190:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001194:	f004 0603 	and.w	r6, r4, #3
 8001198:	ea4f 0e86 	mov.w	lr, r6, lsl #2
 800119c:	260f      	movs	r6, #15
 800119e:	fa06 f60e 	lsl.w	r6, r6, lr
 80011a2:	ea22 0206 	bic.w	r2, r2, r6
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80011a6:	4f21      	ldr	r7, [pc, #132]	; (800122c <HAL_GPIO_Init+0x1dc>)
 80011a8:	42b8      	cmp	r0, r7
 80011aa:	f43f af6b 	beq.w	8001084 <HAL_GPIO_Init+0x34>
 80011ae:	4e20      	ldr	r6, [pc, #128]	; (8001230 <HAL_GPIO_Init+0x1e0>)
 80011b0:	42b0      	cmp	r0, r6
 80011b2:	d022      	beq.n	80011fa <HAL_GPIO_Init+0x1aa>
 80011b4:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80011b8:	42b0      	cmp	r0, r6
 80011ba:	d020      	beq.n	80011fe <HAL_GPIO_Init+0x1ae>
 80011bc:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80011c0:	42b0      	cmp	r0, r6
 80011c2:	d01e      	beq.n	8001202 <HAL_GPIO_Init+0x1b2>
 80011c4:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80011c8:	42b0      	cmp	r0, r6
 80011ca:	d01c      	beq.n	8001206 <HAL_GPIO_Init+0x1b6>
 80011cc:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80011d0:	42b0      	cmp	r0, r6
 80011d2:	d01a      	beq.n	800120a <HAL_GPIO_Init+0x1ba>
 80011d4:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80011d8:	42b0      	cmp	r0, r6
 80011da:	d018      	beq.n	800120e <HAL_GPIO_Init+0x1be>
 80011dc:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80011e0:	42b0      	cmp	r0, r6
 80011e2:	d016      	beq.n	8001212 <HAL_GPIO_Init+0x1c2>
 80011e4:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80011e8:	42b0      	cmp	r0, r6
 80011ea:	d014      	beq.n	8001216 <HAL_GPIO_Init+0x1c6>
 80011ec:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80011f0:	42b0      	cmp	r0, r6
 80011f2:	f43f af45 	beq.w	8001080 <HAL_GPIO_Init+0x30>
 80011f6:	260a      	movs	r6, #10
 80011f8:	e745      	b.n	8001086 <HAL_GPIO_Init+0x36>
 80011fa:	2601      	movs	r6, #1
 80011fc:	e743      	b.n	8001086 <HAL_GPIO_Init+0x36>
 80011fe:	2602      	movs	r6, #2
 8001200:	e741      	b.n	8001086 <HAL_GPIO_Init+0x36>
 8001202:	2603      	movs	r6, #3
 8001204:	e73f      	b.n	8001086 <HAL_GPIO_Init+0x36>
 8001206:	2604      	movs	r6, #4
 8001208:	e73d      	b.n	8001086 <HAL_GPIO_Init+0x36>
 800120a:	2605      	movs	r6, #5
 800120c:	e73b      	b.n	8001086 <HAL_GPIO_Init+0x36>
 800120e:	2606      	movs	r6, #6
 8001210:	e739      	b.n	8001086 <HAL_GPIO_Init+0x36>
 8001212:	2607      	movs	r6, #7
 8001214:	e737      	b.n	8001086 <HAL_GPIO_Init+0x36>
 8001216:	2608      	movs	r6, #8
 8001218:	e735      	b.n	8001086 <HAL_GPIO_Init+0x36>
      }
    }
  }
}
 800121a:	b003      	add	sp, #12
 800121c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800121e:	bf00      	nop
 8001220:	40013800 	.word	0x40013800
 8001224:	40013c00 	.word	0x40013c00
 8001228:	40023800 	.word	0x40023800
 800122c:	40020000 	.word	0x40020000
 8001230:	40020400 	.word	0x40020400

08001234 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8001234:	b912      	cbnz	r2, 800123c <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8001236:	0409      	lsls	r1, r1, #16
 8001238:	6181      	str	r1, [r0, #24]
 800123a:	4770      	bx	lr
    GPIOx->BSRR = GPIO_Pin;
 800123c:	6181      	str	r1, [r0, #24]
 800123e:	4770      	bx	lr

08001240 <HAL_GPIO_TogglePin>:
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->ODR & GPIO_Pin) == GPIO_Pin)
 8001240:	6943      	ldr	r3, [r0, #20]
 8001242:	ea31 0303 	bics.w	r3, r1, r3
 8001246:	d001      	beq.n	800124c <HAL_GPIO_TogglePin+0xc>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
  }
  else
  {
    GPIOx->BSRR = GPIO_Pin;
 8001248:	6181      	str	r1, [r0, #24]
 800124a:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 800124c:	0409      	lsls	r1, r1, #16
 800124e:	6181      	str	r1, [r0, #24]
 8001250:	4770      	bx	lr
	...

08001254 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8001254:	2800      	cmp	r0, #0
 8001256:	f000 81bb 	beq.w	80015d0 <HAL_RCC_OscConfig+0x37c>
{
 800125a:	b570      	push	{r4, r5, r6, lr}
 800125c:	b082      	sub	sp, #8
 800125e:	4604      	mov	r4, r0
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001260:	6803      	ldr	r3, [r0, #0]
 8001262:	f013 0f01 	tst.w	r3, #1
 8001266:	d03b      	beq.n	80012e0 <HAL_RCC_OscConfig+0x8c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001268:	4ba7      	ldr	r3, [pc, #668]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 800126a:	689b      	ldr	r3, [r3, #8]
 800126c:	f003 030c 	and.w	r3, r3, #12
 8001270:	2b04      	cmp	r3, #4
 8001272:	d02c      	beq.n	80012ce <HAL_RCC_OscConfig+0x7a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001274:	4ba4      	ldr	r3, [pc, #656]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 8001276:	689b      	ldr	r3, [r3, #8]
 8001278:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800127c:	2b08      	cmp	r3, #8
 800127e:	d021      	beq.n	80012c4 <HAL_RCC_OscConfig+0x70>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001280:	6863      	ldr	r3, [r4, #4]
 8001282:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001286:	d04f      	beq.n	8001328 <HAL_RCC_OscConfig+0xd4>
 8001288:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800128c:	d052      	beq.n	8001334 <HAL_RCC_OscConfig+0xe0>
 800128e:	4b9e      	ldr	r3, [pc, #632]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 8001290:	681a      	ldr	r2, [r3, #0]
 8001292:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001296:	601a      	str	r2, [r3, #0]
 8001298:	681a      	ldr	r2, [r3, #0]
 800129a:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800129e:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80012a0:	6863      	ldr	r3, [r4, #4]
 80012a2:	2b00      	cmp	r3, #0
 80012a4:	d050      	beq.n	8001348 <HAL_RCC_OscConfig+0xf4>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80012a6:	f7ff fe5f 	bl	8000f68 <HAL_GetTick>
 80012aa:	4605      	mov	r5, r0

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80012ac:	4b96      	ldr	r3, [pc, #600]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 80012ae:	681b      	ldr	r3, [r3, #0]
 80012b0:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80012b4:	d114      	bne.n	80012e0 <HAL_RCC_OscConfig+0x8c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80012b6:	f7ff fe57 	bl	8000f68 <HAL_GetTick>
 80012ba:	1b40      	subs	r0, r0, r5
 80012bc:	2864      	cmp	r0, #100	; 0x64
 80012be:	d9f5      	bls.n	80012ac <HAL_RCC_OscConfig+0x58>
          {
            return HAL_TIMEOUT;
 80012c0:	2003      	movs	r0, #3
 80012c2:	e18a      	b.n	80015da <HAL_RCC_OscConfig+0x386>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80012c4:	4b90      	ldr	r3, [pc, #576]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 80012c6:	685b      	ldr	r3, [r3, #4]
 80012c8:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 80012cc:	d0d8      	beq.n	8001280 <HAL_RCC_OscConfig+0x2c>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80012ce:	4b8e      	ldr	r3, [pc, #568]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 80012d0:	681b      	ldr	r3, [r3, #0]
 80012d2:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80012d6:	d003      	beq.n	80012e0 <HAL_RCC_OscConfig+0x8c>
 80012d8:	6863      	ldr	r3, [r4, #4]
 80012da:	2b00      	cmp	r3, #0
 80012dc:	f000 817a 	beq.w	80015d4 <HAL_RCC_OscConfig+0x380>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80012e0:	6823      	ldr	r3, [r4, #0]
 80012e2:	f013 0f02 	tst.w	r3, #2
 80012e6:	d055      	beq.n	8001394 <HAL_RCC_OscConfig+0x140>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80012e8:	4b87      	ldr	r3, [pc, #540]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 80012ea:	689b      	ldr	r3, [r3, #8]
 80012ec:	f013 0f0c 	tst.w	r3, #12
 80012f0:	d03e      	beq.n	8001370 <HAL_RCC_OscConfig+0x11c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80012f2:	4b85      	ldr	r3, [pc, #532]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 80012f4:	689b      	ldr	r3, [r3, #8]
 80012f6:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80012fa:	2b08      	cmp	r3, #8
 80012fc:	d033      	beq.n	8001366 <HAL_RCC_OscConfig+0x112>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80012fe:	68e3      	ldr	r3, [r4, #12]
 8001300:	2b00      	cmp	r3, #0
 8001302:	d068      	beq.n	80013d6 <HAL_RCC_OscConfig+0x182>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8001304:	2201      	movs	r2, #1
 8001306:	4b81      	ldr	r3, [pc, #516]	; (800150c <HAL_RCC_OscConfig+0x2b8>)
 8001308:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800130a:	f7ff fe2d 	bl	8000f68 <HAL_GetTick>
 800130e:	4605      	mov	r5, r0

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001310:	4b7d      	ldr	r3, [pc, #500]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 8001312:	681b      	ldr	r3, [r3, #0]
 8001314:	f013 0f02 	tst.w	r3, #2
 8001318:	d154      	bne.n	80013c4 <HAL_RCC_OscConfig+0x170>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800131a:	f7ff fe25 	bl	8000f68 <HAL_GetTick>
 800131e:	1b40      	subs	r0, r0, r5
 8001320:	2802      	cmp	r0, #2
 8001322:	d9f5      	bls.n	8001310 <HAL_RCC_OscConfig+0xbc>
          {
            return HAL_TIMEOUT;
 8001324:	2003      	movs	r0, #3
 8001326:	e158      	b.n	80015da <HAL_RCC_OscConfig+0x386>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001328:	4a77      	ldr	r2, [pc, #476]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 800132a:	6813      	ldr	r3, [r2, #0]
 800132c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001330:	6013      	str	r3, [r2, #0]
 8001332:	e7b5      	b.n	80012a0 <HAL_RCC_OscConfig+0x4c>
 8001334:	4b74      	ldr	r3, [pc, #464]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 8001336:	681a      	ldr	r2, [r3, #0]
 8001338:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800133c:	601a      	str	r2, [r3, #0]
 800133e:	681a      	ldr	r2, [r3, #0]
 8001340:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001344:	601a      	str	r2, [r3, #0]
 8001346:	e7ab      	b.n	80012a0 <HAL_RCC_OscConfig+0x4c>
        tickstart = HAL_GetTick();
 8001348:	f7ff fe0e 	bl	8000f68 <HAL_GetTick>
 800134c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800134e:	4b6e      	ldr	r3, [pc, #440]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 8001350:	681b      	ldr	r3, [r3, #0]
 8001352:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8001356:	d0c3      	beq.n	80012e0 <HAL_RCC_OscConfig+0x8c>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001358:	f7ff fe06 	bl	8000f68 <HAL_GetTick>
 800135c:	1b40      	subs	r0, r0, r5
 800135e:	2864      	cmp	r0, #100	; 0x64
 8001360:	d9f5      	bls.n	800134e <HAL_RCC_OscConfig+0xfa>
            return HAL_TIMEOUT;
 8001362:	2003      	movs	r0, #3
 8001364:	e139      	b.n	80015da <HAL_RCC_OscConfig+0x386>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001366:	4b68      	ldr	r3, [pc, #416]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 8001368:	685b      	ldr	r3, [r3, #4]
 800136a:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 800136e:	d1c6      	bne.n	80012fe <HAL_RCC_OscConfig+0xaa>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001370:	4b65      	ldr	r3, [pc, #404]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 8001372:	681b      	ldr	r3, [r3, #0]
 8001374:	f013 0f02 	tst.w	r3, #2
 8001378:	d004      	beq.n	8001384 <HAL_RCC_OscConfig+0x130>
 800137a:	68e3      	ldr	r3, [r4, #12]
 800137c:	2b01      	cmp	r3, #1
 800137e:	d001      	beq.n	8001384 <HAL_RCC_OscConfig+0x130>
        return HAL_ERROR;
 8001380:	2001      	movs	r0, #1
 8001382:	e12a      	b.n	80015da <HAL_RCC_OscConfig+0x386>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001384:	4a60      	ldr	r2, [pc, #384]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 8001386:	6813      	ldr	r3, [r2, #0]
 8001388:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800138c:	6921      	ldr	r1, [r4, #16]
 800138e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8001392:	6013      	str	r3, [r2, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001394:	6823      	ldr	r3, [r4, #0]
 8001396:	f013 0f08 	tst.w	r3, #8
 800139a:	d040      	beq.n	800141e <HAL_RCC_OscConfig+0x1ca>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800139c:	6963      	ldr	r3, [r4, #20]
 800139e:	b363      	cbz	r3, 80013fa <HAL_RCC_OscConfig+0x1a6>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80013a0:	2201      	movs	r2, #1
 80013a2:	4b5b      	ldr	r3, [pc, #364]	; (8001510 <HAL_RCC_OscConfig+0x2bc>)
 80013a4:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80013a6:	f7ff fddf 	bl	8000f68 <HAL_GetTick>
 80013aa:	4605      	mov	r5, r0

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80013ac:	4b56      	ldr	r3, [pc, #344]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 80013ae:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80013b0:	f013 0f02 	tst.w	r3, #2
 80013b4:	d133      	bne.n	800141e <HAL_RCC_OscConfig+0x1ca>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80013b6:	f7ff fdd7 	bl	8000f68 <HAL_GetTick>
 80013ba:	1b40      	subs	r0, r0, r5
 80013bc:	2802      	cmp	r0, #2
 80013be:	d9f5      	bls.n	80013ac <HAL_RCC_OscConfig+0x158>
        {
          return HAL_TIMEOUT;
 80013c0:	2003      	movs	r0, #3
 80013c2:	e10a      	b.n	80015da <HAL_RCC_OscConfig+0x386>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80013c4:	4a50      	ldr	r2, [pc, #320]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 80013c6:	6813      	ldr	r3, [r2, #0]
 80013c8:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80013cc:	6921      	ldr	r1, [r4, #16]
 80013ce:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80013d2:	6013      	str	r3, [r2, #0]
 80013d4:	e7de      	b.n	8001394 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_HSI_DISABLE();
 80013d6:	2200      	movs	r2, #0
 80013d8:	4b4c      	ldr	r3, [pc, #304]	; (800150c <HAL_RCC_OscConfig+0x2b8>)
 80013da:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80013dc:	f7ff fdc4 	bl	8000f68 <HAL_GetTick>
 80013e0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80013e2:	4b49      	ldr	r3, [pc, #292]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 80013e4:	681b      	ldr	r3, [r3, #0]
 80013e6:	f013 0f02 	tst.w	r3, #2
 80013ea:	d0d3      	beq.n	8001394 <HAL_RCC_OscConfig+0x140>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80013ec:	f7ff fdbc 	bl	8000f68 <HAL_GetTick>
 80013f0:	1b40      	subs	r0, r0, r5
 80013f2:	2802      	cmp	r0, #2
 80013f4:	d9f5      	bls.n	80013e2 <HAL_RCC_OscConfig+0x18e>
            return HAL_TIMEOUT;
 80013f6:	2003      	movs	r0, #3
 80013f8:	e0ef      	b.n	80015da <HAL_RCC_OscConfig+0x386>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80013fa:	2200      	movs	r2, #0
 80013fc:	4b44      	ldr	r3, [pc, #272]	; (8001510 <HAL_RCC_OscConfig+0x2bc>)
 80013fe:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001400:	f7ff fdb2 	bl	8000f68 <HAL_GetTick>
 8001404:	4605      	mov	r5, r0

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001406:	4b40      	ldr	r3, [pc, #256]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 8001408:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800140a:	f013 0f02 	tst.w	r3, #2
 800140e:	d006      	beq.n	800141e <HAL_RCC_OscConfig+0x1ca>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8001410:	f7ff fdaa 	bl	8000f68 <HAL_GetTick>
 8001414:	1b40      	subs	r0, r0, r5
 8001416:	2802      	cmp	r0, #2
 8001418:	d9f5      	bls.n	8001406 <HAL_RCC_OscConfig+0x1b2>
        {
          return HAL_TIMEOUT;
 800141a:	2003      	movs	r0, #3
 800141c:	e0dd      	b.n	80015da <HAL_RCC_OscConfig+0x386>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800141e:	6823      	ldr	r3, [r4, #0]
 8001420:	f013 0f04 	tst.w	r3, #4
 8001424:	d079      	beq.n	800151a <HAL_RCC_OscConfig+0x2c6>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8001426:	4b38      	ldr	r3, [pc, #224]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 8001428:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800142a:	f013 5f80 	tst.w	r3, #268435456	; 0x10000000
 800142e:	d133      	bne.n	8001498 <HAL_RCC_OscConfig+0x244>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8001430:	2300      	movs	r3, #0
 8001432:	9301      	str	r3, [sp, #4]
 8001434:	4b34      	ldr	r3, [pc, #208]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 8001436:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001438:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800143c:	641a      	str	r2, [r3, #64]	; 0x40
 800143e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001440:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001444:	9301      	str	r3, [sp, #4]
 8001446:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8001448:	2501      	movs	r5, #1
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800144a:	4b32      	ldr	r3, [pc, #200]	; (8001514 <HAL_RCC_OscConfig+0x2c0>)
 800144c:	681b      	ldr	r3, [r3, #0]
 800144e:	f413 7f80 	tst.w	r3, #256	; 0x100
 8001452:	d023      	beq.n	800149c <HAL_RCC_OscConfig+0x248>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001454:	68a3      	ldr	r3, [r4, #8]
 8001456:	2b01      	cmp	r3, #1
 8001458:	d034      	beq.n	80014c4 <HAL_RCC_OscConfig+0x270>
 800145a:	2b05      	cmp	r3, #5
 800145c:	d038      	beq.n	80014d0 <HAL_RCC_OscConfig+0x27c>
 800145e:	4b2a      	ldr	r3, [pc, #168]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 8001460:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8001462:	f022 0201 	bic.w	r2, r2, #1
 8001466:	671a      	str	r2, [r3, #112]	; 0x70
 8001468:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800146a:	f022 0204 	bic.w	r2, r2, #4
 800146e:	671a      	str	r2, [r3, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8001470:	68a3      	ldr	r3, [r4, #8]
 8001472:	2b00      	cmp	r3, #0
 8001474:	d036      	beq.n	80014e4 <HAL_RCC_OscConfig+0x290>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8001476:	f7ff fd77 	bl	8000f68 <HAL_GetTick>
 800147a:	4606      	mov	r6, r0

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800147c:	4b22      	ldr	r3, [pc, #136]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 800147e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001480:	f013 0f02 	tst.w	r3, #2
 8001484:	d148      	bne.n	8001518 <HAL_RCC_OscConfig+0x2c4>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8001486:	f7ff fd6f 	bl	8000f68 <HAL_GetTick>
 800148a:	1b80      	subs	r0, r0, r6
 800148c:	f241 3388 	movw	r3, #5000	; 0x1388
 8001490:	4298      	cmp	r0, r3
 8001492:	d9f3      	bls.n	800147c <HAL_RCC_OscConfig+0x228>
        {
          return HAL_TIMEOUT;
 8001494:	2003      	movs	r0, #3
 8001496:	e0a0      	b.n	80015da <HAL_RCC_OscConfig+0x386>
    FlagStatus       pwrclkchanged = RESET;
 8001498:	2500      	movs	r5, #0
 800149a:	e7d6      	b.n	800144a <HAL_RCC_OscConfig+0x1f6>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800149c:	4a1d      	ldr	r2, [pc, #116]	; (8001514 <HAL_RCC_OscConfig+0x2c0>)
 800149e:	6813      	ldr	r3, [r2, #0]
 80014a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80014a4:	6013      	str	r3, [r2, #0]
      tickstart = HAL_GetTick();
 80014a6:	f7ff fd5f 	bl	8000f68 <HAL_GetTick>
 80014aa:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80014ac:	4b19      	ldr	r3, [pc, #100]	; (8001514 <HAL_RCC_OscConfig+0x2c0>)
 80014ae:	681b      	ldr	r3, [r3, #0]
 80014b0:	f413 7f80 	tst.w	r3, #256	; 0x100
 80014b4:	d1ce      	bne.n	8001454 <HAL_RCC_OscConfig+0x200>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80014b6:	f7ff fd57 	bl	8000f68 <HAL_GetTick>
 80014ba:	1b80      	subs	r0, r0, r6
 80014bc:	2802      	cmp	r0, #2
 80014be:	d9f5      	bls.n	80014ac <HAL_RCC_OscConfig+0x258>
          return HAL_TIMEOUT;
 80014c0:	2003      	movs	r0, #3
 80014c2:	e08a      	b.n	80015da <HAL_RCC_OscConfig+0x386>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80014c4:	4a10      	ldr	r2, [pc, #64]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 80014c6:	6f13      	ldr	r3, [r2, #112]	; 0x70
 80014c8:	f043 0301 	orr.w	r3, r3, #1
 80014cc:	6713      	str	r3, [r2, #112]	; 0x70
 80014ce:	e7cf      	b.n	8001470 <HAL_RCC_OscConfig+0x21c>
 80014d0:	4b0d      	ldr	r3, [pc, #52]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 80014d2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80014d4:	f042 0204 	orr.w	r2, r2, #4
 80014d8:	671a      	str	r2, [r3, #112]	; 0x70
 80014da:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80014dc:	f042 0201 	orr.w	r2, r2, #1
 80014e0:	671a      	str	r2, [r3, #112]	; 0x70
 80014e2:	e7c5      	b.n	8001470 <HAL_RCC_OscConfig+0x21c>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80014e4:	f7ff fd40 	bl	8000f68 <HAL_GetTick>
 80014e8:	4606      	mov	r6, r0

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80014ea:	4b07      	ldr	r3, [pc, #28]	; (8001508 <HAL_RCC_OscConfig+0x2b4>)
 80014ec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80014ee:	f013 0f02 	tst.w	r3, #2
 80014f2:	d011      	beq.n	8001518 <HAL_RCC_OscConfig+0x2c4>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80014f4:	f7ff fd38 	bl	8000f68 <HAL_GetTick>
 80014f8:	1b80      	subs	r0, r0, r6
 80014fa:	f241 3388 	movw	r3, #5000	; 0x1388
 80014fe:	4298      	cmp	r0, r3
 8001500:	d9f3      	bls.n	80014ea <HAL_RCC_OscConfig+0x296>
        {
          return HAL_TIMEOUT;
 8001502:	2003      	movs	r0, #3
 8001504:	e069      	b.n	80015da <HAL_RCC_OscConfig+0x386>
 8001506:	bf00      	nop
 8001508:	40023800 	.word	0x40023800
 800150c:	42470000 	.word	0x42470000
 8001510:	42470e80 	.word	0x42470e80
 8001514:	40007000 	.word	0x40007000
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8001518:	b9e5      	cbnz	r5, 8001554 <HAL_RCC_OscConfig+0x300>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800151a:	69a3      	ldr	r3, [r4, #24]
 800151c:	2b00      	cmp	r3, #0
 800151e:	d05b      	beq.n	80015d8 <HAL_RCC_OscConfig+0x384>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8001520:	4a30      	ldr	r2, [pc, #192]	; (80015e4 <HAL_RCC_OscConfig+0x390>)
 8001522:	6892      	ldr	r2, [r2, #8]
 8001524:	f002 020c 	and.w	r2, r2, #12
 8001528:	2a08      	cmp	r2, #8
 800152a:	d058      	beq.n	80015de <HAL_RCC_OscConfig+0x38a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800152c:	2b02      	cmp	r3, #2
 800152e:	d017      	beq.n	8001560 <HAL_RCC_OscConfig+0x30c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001530:	2200      	movs	r2, #0
 8001532:	4b2d      	ldr	r3, [pc, #180]	; (80015e8 <HAL_RCC_OscConfig+0x394>)
 8001534:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001536:	f7ff fd17 	bl	8000f68 <HAL_GetTick>
 800153a:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800153c:	4b29      	ldr	r3, [pc, #164]	; (80015e4 <HAL_RCC_OscConfig+0x390>)
 800153e:	681b      	ldr	r3, [r3, #0]
 8001540:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8001544:	d042      	beq.n	80015cc <HAL_RCC_OscConfig+0x378>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8001546:	f7ff fd0f 	bl	8000f68 <HAL_GetTick>
 800154a:	1b00      	subs	r0, r0, r4
 800154c:	2802      	cmp	r0, #2
 800154e:	d9f5      	bls.n	800153c <HAL_RCC_OscConfig+0x2e8>
          {
            return HAL_TIMEOUT;
 8001550:	2003      	movs	r0, #3
 8001552:	e042      	b.n	80015da <HAL_RCC_OscConfig+0x386>
      __HAL_RCC_PWR_CLK_DISABLE();
 8001554:	4a23      	ldr	r2, [pc, #140]	; (80015e4 <HAL_RCC_OscConfig+0x390>)
 8001556:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001558:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800155c:	6413      	str	r3, [r2, #64]	; 0x40
 800155e:	e7dc      	b.n	800151a <HAL_RCC_OscConfig+0x2c6>
        __HAL_RCC_PLL_DISABLE();
 8001560:	2200      	movs	r2, #0
 8001562:	4b21      	ldr	r3, [pc, #132]	; (80015e8 <HAL_RCC_OscConfig+0x394>)
 8001564:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8001566:	f7ff fcff 	bl	8000f68 <HAL_GetTick>
 800156a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800156c:	4b1d      	ldr	r3, [pc, #116]	; (80015e4 <HAL_RCC_OscConfig+0x390>)
 800156e:	681b      	ldr	r3, [r3, #0]
 8001570:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8001574:	d006      	beq.n	8001584 <HAL_RCC_OscConfig+0x330>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8001576:	f7ff fcf7 	bl	8000f68 <HAL_GetTick>
 800157a:	1b40      	subs	r0, r0, r5
 800157c:	2802      	cmp	r0, #2
 800157e:	d9f5      	bls.n	800156c <HAL_RCC_OscConfig+0x318>
            return HAL_TIMEOUT;
 8001580:	2003      	movs	r0, #3
 8001582:	e02a      	b.n	80015da <HAL_RCC_OscConfig+0x386>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8001584:	69e3      	ldr	r3, [r4, #28]
 8001586:	6a22      	ldr	r2, [r4, #32]
 8001588:	4313      	orrs	r3, r2
 800158a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800158c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8001590:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8001592:	0852      	lsrs	r2, r2, #1
 8001594:	3a01      	subs	r2, #1
 8001596:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800159a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800159c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80015a0:	4a10      	ldr	r2, [pc, #64]	; (80015e4 <HAL_RCC_OscConfig+0x390>)
 80015a2:	6053      	str	r3, [r2, #4]
        __HAL_RCC_PLL_ENABLE();
 80015a4:	2201      	movs	r2, #1
 80015a6:	4b10      	ldr	r3, [pc, #64]	; (80015e8 <HAL_RCC_OscConfig+0x394>)
 80015a8:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80015aa:	f7ff fcdd 	bl	8000f68 <HAL_GetTick>
 80015ae:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80015b0:	4b0c      	ldr	r3, [pc, #48]	; (80015e4 <HAL_RCC_OscConfig+0x390>)
 80015b2:	681b      	ldr	r3, [r3, #0]
 80015b4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80015b8:	d106      	bne.n	80015c8 <HAL_RCC_OscConfig+0x374>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80015ba:	f7ff fcd5 	bl	8000f68 <HAL_GetTick>
 80015be:	1b00      	subs	r0, r0, r4
 80015c0:	2802      	cmp	r0, #2
 80015c2:	d9f5      	bls.n	80015b0 <HAL_RCC_OscConfig+0x35c>
            return HAL_TIMEOUT;
 80015c4:	2003      	movs	r0, #3
 80015c6:	e008      	b.n	80015da <HAL_RCC_OscConfig+0x386>
    else
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
 80015c8:	2000      	movs	r0, #0
 80015ca:	e006      	b.n	80015da <HAL_RCC_OscConfig+0x386>
 80015cc:	2000      	movs	r0, #0
 80015ce:	e004      	b.n	80015da <HAL_RCC_OscConfig+0x386>
    return HAL_ERROR;
 80015d0:	2001      	movs	r0, #1
 80015d2:	4770      	bx	lr
        return HAL_ERROR;
 80015d4:	2001      	movs	r0, #1
 80015d6:	e000      	b.n	80015da <HAL_RCC_OscConfig+0x386>
  return HAL_OK;
 80015d8:	2000      	movs	r0, #0
}
 80015da:	b002      	add	sp, #8
 80015dc:	bd70      	pop	{r4, r5, r6, pc}
      return HAL_ERROR;
 80015de:	2001      	movs	r0, #1
 80015e0:	e7fb      	b.n	80015da <HAL_RCC_OscConfig+0x386>
 80015e2:	bf00      	nop
 80015e4:	40023800 	.word	0x40023800
 80015e8:	42470060 	.word	0x42470060

080015ec <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80015ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80015ee:	4b31      	ldr	r3, [pc, #196]	; (80016b4 <HAL_RCC_GetSysClockFreq+0xc8>)
 80015f0:	689b      	ldr	r3, [r3, #8]
 80015f2:	f003 030c 	and.w	r3, r3, #12
 80015f6:	2b04      	cmp	r3, #4
 80015f8:	d059      	beq.n	80016ae <HAL_RCC_GetSysClockFreq+0xc2>
 80015fa:	2b08      	cmp	r3, #8
 80015fc:	d001      	beq.n	8001602 <HAL_RCC_GetSysClockFreq+0x16>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80015fe:	482e      	ldr	r0, [pc, #184]	; (80016b8 <HAL_RCC_GetSysClockFreq+0xcc>)
 8001600:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001602:	4b2c      	ldr	r3, [pc, #176]	; (80016b4 <HAL_RCC_GetSysClockFreq+0xc8>)
 8001604:	685a      	ldr	r2, [r3, #4]
 8001606:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800160a:	685b      	ldr	r3, [r3, #4]
 800160c:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 8001610:	d02a      	beq.n	8001668 <HAL_RCC_GetSysClockFreq+0x7c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001612:	4b28      	ldr	r3, [pc, #160]	; (80016b4 <HAL_RCC_GetSysClockFreq+0xc8>)
 8001614:	685b      	ldr	r3, [r3, #4]
 8001616:	f3c3 1388 	ubfx	r3, r3, #6, #9
 800161a:	461e      	mov	r6, r3
 800161c:	2700      	movs	r7, #0
 800161e:	015c      	lsls	r4, r3, #5
 8001620:	2500      	movs	r5, #0
 8001622:	1ae4      	subs	r4, r4, r3
 8001624:	eb65 0507 	sbc.w	r5, r5, r7
 8001628:	01a9      	lsls	r1, r5, #6
 800162a:	ea41 6194 	orr.w	r1, r1, r4, lsr #26
 800162e:	01a0      	lsls	r0, r4, #6
 8001630:	1b00      	subs	r0, r0, r4
 8001632:	eb61 0105 	sbc.w	r1, r1, r5
 8001636:	00cb      	lsls	r3, r1, #3
 8001638:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 800163c:	00c4      	lsls	r4, r0, #3
 800163e:	19a0      	adds	r0, r4, r6
 8001640:	eb43 0107 	adc.w	r1, r3, r7
 8001644:	024b      	lsls	r3, r1, #9
 8001646:	ea43 53d0 	orr.w	r3, r3, r0, lsr #23
 800164a:	0244      	lsls	r4, r0, #9
 800164c:	4620      	mov	r0, r4
 800164e:	4619      	mov	r1, r3
 8001650:	2300      	movs	r3, #0
 8001652:	f7ff fab5 	bl	8000bc0 <__aeabi_uldivmod>
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8001656:	4b17      	ldr	r3, [pc, #92]	; (80016b4 <HAL_RCC_GetSysClockFreq+0xc8>)
 8001658:	685b      	ldr	r3, [r3, #4]
 800165a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800165e:	3301      	adds	r3, #1
 8001660:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8001662:	fbb0 f0f3 	udiv	r0, r0, r3
      break;
 8001666:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001668:	4b12      	ldr	r3, [pc, #72]	; (80016b4 <HAL_RCC_GetSysClockFreq+0xc8>)
 800166a:	685b      	ldr	r3, [r3, #4]
 800166c:	f3c3 1388 	ubfx	r3, r3, #6, #9
 8001670:	461e      	mov	r6, r3
 8001672:	2700      	movs	r7, #0
 8001674:	015c      	lsls	r4, r3, #5
 8001676:	2500      	movs	r5, #0
 8001678:	1ae4      	subs	r4, r4, r3
 800167a:	eb65 0507 	sbc.w	r5, r5, r7
 800167e:	01a9      	lsls	r1, r5, #6
 8001680:	ea41 6194 	orr.w	r1, r1, r4, lsr #26
 8001684:	01a0      	lsls	r0, r4, #6
 8001686:	1b00      	subs	r0, r0, r4
 8001688:	eb61 0105 	sbc.w	r1, r1, r5
 800168c:	00cb      	lsls	r3, r1, #3
 800168e:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8001692:	00c4      	lsls	r4, r0, #3
 8001694:	19a0      	adds	r0, r4, r6
 8001696:	eb43 0107 	adc.w	r1, r3, r7
 800169a:	028b      	lsls	r3, r1, #10
 800169c:	ea43 5390 	orr.w	r3, r3, r0, lsr #22
 80016a0:	0284      	lsls	r4, r0, #10
 80016a2:	4620      	mov	r0, r4
 80016a4:	4619      	mov	r1, r3
 80016a6:	2300      	movs	r3, #0
 80016a8:	f7ff fa8a 	bl	8000bc0 <__aeabi_uldivmod>
 80016ac:	e7d3      	b.n	8001656 <HAL_RCC_GetSysClockFreq+0x6a>
      sysclockfreq = HSE_VALUE;
 80016ae:	4803      	ldr	r0, [pc, #12]	; (80016bc <HAL_RCC_GetSysClockFreq+0xd0>)
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80016b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80016b2:	bf00      	nop
 80016b4:	40023800 	.word	0x40023800
 80016b8:	00f42400 	.word	0x00f42400
 80016bc:	007a1200 	.word	0x007a1200

080016c0 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 80016c0:	2800      	cmp	r0, #0
 80016c2:	f000 809d 	beq.w	8001800 <HAL_RCC_ClockConfig+0x140>
{
 80016c6:	b570      	push	{r4, r5, r6, lr}
 80016c8:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80016ca:	4b4f      	ldr	r3, [pc, #316]	; (8001808 <HAL_RCC_ClockConfig+0x148>)
 80016cc:	681b      	ldr	r3, [r3, #0]
 80016ce:	f003 030f 	and.w	r3, r3, #15
 80016d2:	428b      	cmp	r3, r1
 80016d4:	d209      	bcs.n	80016ea <HAL_RCC_ClockConfig+0x2a>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80016d6:	b2cb      	uxtb	r3, r1
 80016d8:	4a4b      	ldr	r2, [pc, #300]	; (8001808 <HAL_RCC_ClockConfig+0x148>)
 80016da:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80016dc:	6813      	ldr	r3, [r2, #0]
 80016de:	f003 030f 	and.w	r3, r3, #15
 80016e2:	4299      	cmp	r1, r3
 80016e4:	d001      	beq.n	80016ea <HAL_RCC_ClockConfig+0x2a>
      return HAL_ERROR;
 80016e6:	2001      	movs	r0, #1
 80016e8:	bd70      	pop	{r4, r5, r6, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80016ea:	6823      	ldr	r3, [r4, #0]
 80016ec:	f013 0f02 	tst.w	r3, #2
 80016f0:	d017      	beq.n	8001722 <HAL_RCC_ClockConfig+0x62>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80016f2:	f013 0f04 	tst.w	r3, #4
 80016f6:	d004      	beq.n	8001702 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80016f8:	4a44      	ldr	r2, [pc, #272]	; (800180c <HAL_RCC_ClockConfig+0x14c>)
 80016fa:	6893      	ldr	r3, [r2, #8]
 80016fc:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8001700:	6093      	str	r3, [r2, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001702:	6823      	ldr	r3, [r4, #0]
 8001704:	f013 0f08 	tst.w	r3, #8
 8001708:	d004      	beq.n	8001714 <HAL_RCC_ClockConfig+0x54>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800170a:	4a40      	ldr	r2, [pc, #256]	; (800180c <HAL_RCC_ClockConfig+0x14c>)
 800170c:	6893      	ldr	r3, [r2, #8]
 800170e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8001712:	6093      	str	r3, [r2, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001714:	4a3d      	ldr	r2, [pc, #244]	; (800180c <HAL_RCC_ClockConfig+0x14c>)
 8001716:	6893      	ldr	r3, [r2, #8]
 8001718:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800171c:	68a0      	ldr	r0, [r4, #8]
 800171e:	4303      	orrs	r3, r0
 8001720:	6093      	str	r3, [r2, #8]
 8001722:	460d      	mov	r5, r1
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001724:	6823      	ldr	r3, [r4, #0]
 8001726:	f013 0f01 	tst.w	r3, #1
 800172a:	d032      	beq.n	8001792 <HAL_RCC_ClockConfig+0xd2>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800172c:	6863      	ldr	r3, [r4, #4]
 800172e:	2b01      	cmp	r3, #1
 8001730:	d021      	beq.n	8001776 <HAL_RCC_ClockConfig+0xb6>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8001732:	1e9a      	subs	r2, r3, #2
 8001734:	2a01      	cmp	r2, #1
 8001736:	d925      	bls.n	8001784 <HAL_RCC_ClockConfig+0xc4>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001738:	4a34      	ldr	r2, [pc, #208]	; (800180c <HAL_RCC_ClockConfig+0x14c>)
 800173a:	6812      	ldr	r2, [r2, #0]
 800173c:	f012 0f02 	tst.w	r2, #2
 8001740:	d060      	beq.n	8001804 <HAL_RCC_ClockConfig+0x144>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001742:	4932      	ldr	r1, [pc, #200]	; (800180c <HAL_RCC_ClockConfig+0x14c>)
 8001744:	688a      	ldr	r2, [r1, #8]
 8001746:	f022 0203 	bic.w	r2, r2, #3
 800174a:	4313      	orrs	r3, r2
 800174c:	608b      	str	r3, [r1, #8]
    tickstart = HAL_GetTick();
 800174e:	f7ff fc0b 	bl	8000f68 <HAL_GetTick>
 8001752:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001754:	4b2d      	ldr	r3, [pc, #180]	; (800180c <HAL_RCC_ClockConfig+0x14c>)
 8001756:	689b      	ldr	r3, [r3, #8]
 8001758:	f003 030c 	and.w	r3, r3, #12
 800175c:	6862      	ldr	r2, [r4, #4]
 800175e:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8001762:	d016      	beq.n	8001792 <HAL_RCC_ClockConfig+0xd2>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001764:	f7ff fc00 	bl	8000f68 <HAL_GetTick>
 8001768:	1b80      	subs	r0, r0, r6
 800176a:	f241 3388 	movw	r3, #5000	; 0x1388
 800176e:	4298      	cmp	r0, r3
 8001770:	d9f0      	bls.n	8001754 <HAL_RCC_ClockConfig+0x94>
        return HAL_TIMEOUT;
 8001772:	2003      	movs	r0, #3
 8001774:	bd70      	pop	{r4, r5, r6, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001776:	4a25      	ldr	r2, [pc, #148]	; (800180c <HAL_RCC_ClockConfig+0x14c>)
 8001778:	6812      	ldr	r2, [r2, #0]
 800177a:	f412 3f00 	tst.w	r2, #131072	; 0x20000
 800177e:	d1e0      	bne.n	8001742 <HAL_RCC_ClockConfig+0x82>
        return HAL_ERROR;
 8001780:	2001      	movs	r0, #1
 8001782:	bd70      	pop	{r4, r5, r6, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001784:	4a21      	ldr	r2, [pc, #132]	; (800180c <HAL_RCC_ClockConfig+0x14c>)
 8001786:	6812      	ldr	r2, [r2, #0]
 8001788:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 800178c:	d1d9      	bne.n	8001742 <HAL_RCC_ClockConfig+0x82>
        return HAL_ERROR;
 800178e:	2001      	movs	r0, #1
 8001790:	bd70      	pop	{r4, r5, r6, pc}
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8001792:	4b1d      	ldr	r3, [pc, #116]	; (8001808 <HAL_RCC_ClockConfig+0x148>)
 8001794:	681b      	ldr	r3, [r3, #0]
 8001796:	f003 030f 	and.w	r3, r3, #15
 800179a:	429d      	cmp	r5, r3
 800179c:	d209      	bcs.n	80017b2 <HAL_RCC_ClockConfig+0xf2>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800179e:	b2ea      	uxtb	r2, r5
 80017a0:	4b19      	ldr	r3, [pc, #100]	; (8001808 <HAL_RCC_ClockConfig+0x148>)
 80017a2:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80017a4:	681b      	ldr	r3, [r3, #0]
 80017a6:	f003 030f 	and.w	r3, r3, #15
 80017aa:	429d      	cmp	r5, r3
 80017ac:	d001      	beq.n	80017b2 <HAL_RCC_ClockConfig+0xf2>
      return HAL_ERROR;
 80017ae:	2001      	movs	r0, #1
}
 80017b0:	bd70      	pop	{r4, r5, r6, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80017b2:	6823      	ldr	r3, [r4, #0]
 80017b4:	f013 0f04 	tst.w	r3, #4
 80017b8:	d006      	beq.n	80017c8 <HAL_RCC_ClockConfig+0x108>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80017ba:	4a14      	ldr	r2, [pc, #80]	; (800180c <HAL_RCC_ClockConfig+0x14c>)
 80017bc:	6893      	ldr	r3, [r2, #8]
 80017be:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80017c2:	68e1      	ldr	r1, [r4, #12]
 80017c4:	430b      	orrs	r3, r1
 80017c6:	6093      	str	r3, [r2, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80017c8:	6823      	ldr	r3, [r4, #0]
 80017ca:	f013 0f08 	tst.w	r3, #8
 80017ce:	d007      	beq.n	80017e0 <HAL_RCC_ClockConfig+0x120>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80017d0:	4a0e      	ldr	r2, [pc, #56]	; (800180c <HAL_RCC_ClockConfig+0x14c>)
 80017d2:	6893      	ldr	r3, [r2, #8]
 80017d4:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80017d8:	6921      	ldr	r1, [r4, #16]
 80017da:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80017de:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80017e0:	f7ff ff04 	bl	80015ec <HAL_RCC_GetSysClockFreq>
 80017e4:	4b09      	ldr	r3, [pc, #36]	; (800180c <HAL_RCC_ClockConfig+0x14c>)
 80017e6:	689b      	ldr	r3, [r3, #8]
 80017e8:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80017ec:	4a08      	ldr	r2, [pc, #32]	; (8001810 <HAL_RCC_ClockConfig+0x150>)
 80017ee:	5cd3      	ldrb	r3, [r2, r3]
 80017f0:	40d8      	lsrs	r0, r3
 80017f2:	4b08      	ldr	r3, [pc, #32]	; (8001814 <HAL_RCC_ClockConfig+0x154>)
 80017f4:	6018      	str	r0, [r3, #0]
  HAL_InitTick (TICK_INT_PRIORITY);
 80017f6:	2000      	movs	r0, #0
 80017f8:	f7ff fb6a 	bl	8000ed0 <HAL_InitTick>
  return HAL_OK;
 80017fc:	2000      	movs	r0, #0
 80017fe:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8001800:	2001      	movs	r0, #1
 8001802:	4770      	bx	lr
        return HAL_ERROR;
 8001804:	2001      	movs	r0, #1
 8001806:	bd70      	pop	{r4, r5, r6, pc}
 8001808:	40023c00 	.word	0x40023c00
 800180c:	40023800 	.word	0x40023800
 8001810:	08004808 	.word	0x08004808
 8001814:	20000008 	.word	0x20000008

08001818 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 8001818:	4b01      	ldr	r3, [pc, #4]	; (8001820 <HAL_RCC_GetHCLKFreq+0x8>)
 800181a:	6818      	ldr	r0, [r3, #0]
 800181c:	4770      	bx	lr
 800181e:	bf00      	nop
 8001820:	20000008 	.word	0x20000008

08001824 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8001824:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8001826:	f7ff fff7 	bl	8001818 <HAL_RCC_GetHCLKFreq>
 800182a:	4b04      	ldr	r3, [pc, #16]	; (800183c <HAL_RCC_GetPCLK1Freq+0x18>)
 800182c:	689b      	ldr	r3, [r3, #8]
 800182e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8001832:	4a03      	ldr	r2, [pc, #12]	; (8001840 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8001834:	5cd3      	ldrb	r3, [r2, r3]
}
 8001836:	40d8      	lsrs	r0, r3
 8001838:	bd08      	pop	{r3, pc}
 800183a:	bf00      	nop
 800183c:	40023800 	.word	0x40023800
 8001840:	08004818 	.word	0x08004818

08001844 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8001844:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8001846:	f7ff ffe7 	bl	8001818 <HAL_RCC_GetHCLKFreq>
 800184a:	4b04      	ldr	r3, [pc, #16]	; (800185c <HAL_RCC_GetPCLK2Freq+0x18>)
 800184c:	689b      	ldr	r3, [r3, #8]
 800184e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8001852:	4a03      	ldr	r2, [pc, #12]	; (8001860 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8001854:	5cd3      	ldrb	r3, [r2, r3]
}
 8001856:	40d8      	lsrs	r0, r3
 8001858:	bd08      	pop	{r3, pc}
 800185a:	bf00      	nop
 800185c:	40023800 	.word	0x40023800
 8001860:	08004818 	.word	0x08004818

08001864 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8001864:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001868:	4604      	mov	r4, r0
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800186a:	6802      	ldr	r2, [r0, #0]
 800186c:	6913      	ldr	r3, [r2, #16]
 800186e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001872:	68c1      	ldr	r1, [r0, #12]
 8001874:	430b      	orrs	r3, r1
 8001876:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8001878:	6883      	ldr	r3, [r0, #8]
 800187a:	6902      	ldr	r2, [r0, #16]
 800187c:	4313      	orrs	r3, r2
 800187e:	6942      	ldr	r2, [r0, #20]
 8001880:	4313      	orrs	r3, r2
 8001882:	69c2      	ldr	r2, [r0, #28]
 8001884:	4313      	orrs	r3, r2
  MODIFY_REG(huart->Instance->CR1,
 8001886:	6801      	ldr	r1, [r0, #0]
 8001888:	68ca      	ldr	r2, [r1, #12]
 800188a:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 800188e:	f022 020c 	bic.w	r2, r2, #12
 8001892:	4313      	orrs	r3, r2
 8001894:	60cb      	str	r3, [r1, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8001896:	6802      	ldr	r2, [r0, #0]
 8001898:	6953      	ldr	r3, [r2, #20]
 800189a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800189e:	6981      	ldr	r1, [r0, #24]
 80018a0:	430b      	orrs	r3, r1
 80018a2:	6153      	str	r3, [r2, #20]

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80018a4:	69c3      	ldr	r3, [r0, #28]
 80018a6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80018aa:	d062      	beq.n	8001972 <UART_SetConfig+0x10e>
  }
  else
  {
    /*-------------------------- USART BRR Configuration ---------------------*/
#if defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 80018ac:	f8d0 8000 	ldr.w	r8, [r0]
 80018b0:	4bbb      	ldr	r3, [pc, #748]	; (8001ba0 <UART_SetConfig+0x33c>)
 80018b2:	4598      	cmp	r8, r3
 80018b4:	f000 811b 	beq.w	8001aee <UART_SetConfig+0x28a>
 80018b8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80018bc:	4598      	cmp	r8, r3
 80018be:	f000 8116 	beq.w	8001aee <UART_SetConfig+0x28a>
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 80018c2:	f7ff ffaf 	bl	8001824 <HAL_RCC_GetPCLK1Freq>
 80018c6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80018ca:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80018ce:	6865      	ldr	r5, [r4, #4]
 80018d0:	00ad      	lsls	r5, r5, #2
 80018d2:	fbb0 f5f5 	udiv	r5, r0, r5
 80018d6:	4fb3      	ldr	r7, [pc, #716]	; (8001ba4 <UART_SetConfig+0x340>)
 80018d8:	fba7 3505 	umull	r3, r5, r7, r5
 80018dc:	096d      	lsrs	r5, r5, #5
 80018de:	012e      	lsls	r6, r5, #4
 80018e0:	f7ff ffa0 	bl	8001824 <HAL_RCC_GetPCLK1Freq>
 80018e4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80018e8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80018ec:	6865      	ldr	r5, [r4, #4]
 80018ee:	00ad      	lsls	r5, r5, #2
 80018f0:	fbb0 faf5 	udiv	sl, r0, r5
 80018f4:	f7ff ff96 	bl	8001824 <HAL_RCC_GetPCLK1Freq>
 80018f8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80018fc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001900:	6865      	ldr	r5, [r4, #4]
 8001902:	00ad      	lsls	r5, r5, #2
 8001904:	fbb0 f5f5 	udiv	r5, r0, r5
 8001908:	fba7 3505 	umull	r3, r5, r7, r5
 800190c:	096d      	lsrs	r5, r5, #5
 800190e:	f04f 0964 	mov.w	r9, #100	; 0x64
 8001912:	fb09 a515 	mls	r5, r9, r5, sl
 8001916:	012d      	lsls	r5, r5, #4
 8001918:	3532      	adds	r5, #50	; 0x32
 800191a:	fba7 3505 	umull	r3, r5, r7, r5
 800191e:	096d      	lsrs	r5, r5, #5
 8001920:	f005 05f0 	and.w	r5, r5, #240	; 0xf0
 8001924:	4435      	add	r5, r6
 8001926:	f7ff ff7d 	bl	8001824 <HAL_RCC_GetPCLK1Freq>
 800192a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800192e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001932:	6866      	ldr	r6, [r4, #4]
 8001934:	00b6      	lsls	r6, r6, #2
 8001936:	fbb0 f6f6 	udiv	r6, r0, r6
 800193a:	f7ff ff73 	bl	8001824 <HAL_RCC_GetPCLK1Freq>
 800193e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001942:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001946:	6863      	ldr	r3, [r4, #4]
 8001948:	009b      	lsls	r3, r3, #2
 800194a:	fbb0 f0f3 	udiv	r0, r0, r3
 800194e:	fba7 3000 	umull	r3, r0, r7, r0
 8001952:	0940      	lsrs	r0, r0, #5
 8001954:	fb09 6910 	mls	r9, r9, r0, r6
 8001958:	ea4f 1909 	mov.w	r9, r9, lsl #4
 800195c:	f109 0932 	add.w	r9, r9, #50	; 0x32
 8001960:	fba7 3709 	umull	r3, r7, r7, r9
 8001964:	f3c7 1743 	ubfx	r7, r7, #5, #4
 8001968:	442f      	add	r7, r5
 800196a:	f8c8 7008 	str.w	r7, [r8, #8]
 800196e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8001972:	f8d0 8000 	ldr.w	r8, [r0]
 8001976:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800197a:	f503 4310 	add.w	r3, r3, #36864	; 0x9000
 800197e:	4598      	cmp	r8, r3
 8001980:	d05c      	beq.n	8001a3c <UART_SetConfig+0x1d8>
 8001982:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001986:	4598      	cmp	r8, r3
 8001988:	d058      	beq.n	8001a3c <UART_SetConfig+0x1d8>
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800198a:	f7ff ff4b 	bl	8001824 <HAL_RCC_GetPCLK1Freq>
 800198e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001992:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001996:	6865      	ldr	r5, [r4, #4]
 8001998:	006d      	lsls	r5, r5, #1
 800199a:	fbb0 f5f5 	udiv	r5, r0, r5
 800199e:	4f81      	ldr	r7, [pc, #516]	; (8001ba4 <UART_SetConfig+0x340>)
 80019a0:	fba7 3505 	umull	r3, r5, r7, r5
 80019a4:	096d      	lsrs	r5, r5, #5
 80019a6:	012e      	lsls	r6, r5, #4
 80019a8:	f7ff ff3c 	bl	8001824 <HAL_RCC_GetPCLK1Freq>
 80019ac:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80019b0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80019b4:	6865      	ldr	r5, [r4, #4]
 80019b6:	006d      	lsls	r5, r5, #1
 80019b8:	fbb0 faf5 	udiv	sl, r0, r5
 80019bc:	f7ff ff32 	bl	8001824 <HAL_RCC_GetPCLK1Freq>
 80019c0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80019c4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80019c8:	6865      	ldr	r5, [r4, #4]
 80019ca:	006d      	lsls	r5, r5, #1
 80019cc:	fbb0 f5f5 	udiv	r5, r0, r5
 80019d0:	fba7 3505 	umull	r3, r5, r7, r5
 80019d4:	096d      	lsrs	r5, r5, #5
 80019d6:	f04f 0964 	mov.w	r9, #100	; 0x64
 80019da:	fb09 a515 	mls	r5, r9, r5, sl
 80019de:	00ed      	lsls	r5, r5, #3
 80019e0:	3532      	adds	r5, #50	; 0x32
 80019e2:	fba7 3505 	umull	r3, r5, r7, r5
 80019e6:	096d      	lsrs	r5, r5, #5
 80019e8:	006d      	lsls	r5, r5, #1
 80019ea:	f405 75f8 	and.w	r5, r5, #496	; 0x1f0
 80019ee:	4435      	add	r5, r6
 80019f0:	f7ff ff18 	bl	8001824 <HAL_RCC_GetPCLK1Freq>
 80019f4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80019f8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80019fc:	6866      	ldr	r6, [r4, #4]
 80019fe:	0076      	lsls	r6, r6, #1
 8001a00:	fbb0 f6f6 	udiv	r6, r0, r6
 8001a04:	f7ff ff0e 	bl	8001824 <HAL_RCC_GetPCLK1Freq>
 8001a08:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001a0c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001a10:	6863      	ldr	r3, [r4, #4]
 8001a12:	005b      	lsls	r3, r3, #1
 8001a14:	fbb0 f3f3 	udiv	r3, r0, r3
 8001a18:	fba7 2303 	umull	r2, r3, r7, r3
 8001a1c:	095b      	lsrs	r3, r3, #5
 8001a1e:	fb09 6913 	mls	r9, r9, r3, r6
 8001a22:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8001a26:	f109 0932 	add.w	r9, r9, #50	; 0x32
 8001a2a:	fba7 3709 	umull	r3, r7, r7, r9
 8001a2e:	f3c7 1742 	ubfx	r7, r7, #5, #3
 8001a32:	442f      	add	r7, r5
 8001a34:	f8c8 7008 	str.w	r7, [r8, #8]
 8001a38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 8001a3c:	f7ff ff02 	bl	8001844 <HAL_RCC_GetPCLK2Freq>
 8001a40:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001a44:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001a48:	6865      	ldr	r5, [r4, #4]
 8001a4a:	006d      	lsls	r5, r5, #1
 8001a4c:	fbb0 f5f5 	udiv	r5, r0, r5
 8001a50:	4f54      	ldr	r7, [pc, #336]	; (8001ba4 <UART_SetConfig+0x340>)
 8001a52:	fba7 3505 	umull	r3, r5, r7, r5
 8001a56:	096d      	lsrs	r5, r5, #5
 8001a58:	012e      	lsls	r6, r5, #4
 8001a5a:	f7ff fef3 	bl	8001844 <HAL_RCC_GetPCLK2Freq>
 8001a5e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001a62:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001a66:	6865      	ldr	r5, [r4, #4]
 8001a68:	006d      	lsls	r5, r5, #1
 8001a6a:	fbb0 faf5 	udiv	sl, r0, r5
 8001a6e:	f7ff fee9 	bl	8001844 <HAL_RCC_GetPCLK2Freq>
 8001a72:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001a76:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001a7a:	6865      	ldr	r5, [r4, #4]
 8001a7c:	006d      	lsls	r5, r5, #1
 8001a7e:	fbb0 f5f5 	udiv	r5, r0, r5
 8001a82:	fba7 3505 	umull	r3, r5, r7, r5
 8001a86:	096d      	lsrs	r5, r5, #5
 8001a88:	f04f 0964 	mov.w	r9, #100	; 0x64
 8001a8c:	fb09 a515 	mls	r5, r9, r5, sl
 8001a90:	00ed      	lsls	r5, r5, #3
 8001a92:	3532      	adds	r5, #50	; 0x32
 8001a94:	fba7 3505 	umull	r3, r5, r7, r5
 8001a98:	096d      	lsrs	r5, r5, #5
 8001a9a:	006d      	lsls	r5, r5, #1
 8001a9c:	f405 75f8 	and.w	r5, r5, #496	; 0x1f0
 8001aa0:	4435      	add	r5, r6
 8001aa2:	f7ff fecf 	bl	8001844 <HAL_RCC_GetPCLK2Freq>
 8001aa6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001aaa:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001aae:	6866      	ldr	r6, [r4, #4]
 8001ab0:	0076      	lsls	r6, r6, #1
 8001ab2:	fbb0 f6f6 	udiv	r6, r0, r6
 8001ab6:	f7ff fec5 	bl	8001844 <HAL_RCC_GetPCLK2Freq>
 8001aba:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001abe:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001ac2:	6863      	ldr	r3, [r4, #4]
 8001ac4:	005b      	lsls	r3, r3, #1
 8001ac6:	fbb0 f3f3 	udiv	r3, r0, r3
 8001aca:	fba7 2303 	umull	r2, r3, r7, r3
 8001ace:	095b      	lsrs	r3, r3, #5
 8001ad0:	fb09 6913 	mls	r9, r9, r3, r6
 8001ad4:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8001ad8:	f109 0932 	add.w	r9, r9, #50	; 0x32
 8001adc:	fba7 3709 	umull	r3, r7, r7, r9
 8001ae0:	f3c7 1742 	ubfx	r7, r7, #5, #3
 8001ae4:	442f      	add	r7, r5
 8001ae6:	f8c8 7008 	str.w	r7, [r8, #8]
 8001aea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 8001aee:	f7ff fea9 	bl	8001844 <HAL_RCC_GetPCLK2Freq>
 8001af2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001af6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001afa:	6865      	ldr	r5, [r4, #4]
 8001afc:	00ad      	lsls	r5, r5, #2
 8001afe:	fbb0 f5f5 	udiv	r5, r0, r5
 8001b02:	4f28      	ldr	r7, [pc, #160]	; (8001ba4 <UART_SetConfig+0x340>)
 8001b04:	fba7 3505 	umull	r3, r5, r7, r5
 8001b08:	096d      	lsrs	r5, r5, #5
 8001b0a:	012e      	lsls	r6, r5, #4
 8001b0c:	f7ff fe9a 	bl	8001844 <HAL_RCC_GetPCLK2Freq>
 8001b10:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001b14:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001b18:	6865      	ldr	r5, [r4, #4]
 8001b1a:	00ad      	lsls	r5, r5, #2
 8001b1c:	fbb0 faf5 	udiv	sl, r0, r5
 8001b20:	f7ff fe90 	bl	8001844 <HAL_RCC_GetPCLK2Freq>
 8001b24:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001b28:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001b2c:	6865      	ldr	r5, [r4, #4]
 8001b2e:	00ad      	lsls	r5, r5, #2
 8001b30:	fbb0 f5f5 	udiv	r5, r0, r5
 8001b34:	fba7 3505 	umull	r3, r5, r7, r5
 8001b38:	096d      	lsrs	r5, r5, #5
 8001b3a:	f04f 0964 	mov.w	r9, #100	; 0x64
 8001b3e:	fb09 a515 	mls	r5, r9, r5, sl
 8001b42:	012d      	lsls	r5, r5, #4
 8001b44:	3532      	adds	r5, #50	; 0x32
 8001b46:	fba7 3505 	umull	r3, r5, r7, r5
 8001b4a:	096d      	lsrs	r5, r5, #5
 8001b4c:	f005 05f0 	and.w	r5, r5, #240	; 0xf0
 8001b50:	4435      	add	r5, r6
 8001b52:	f7ff fe77 	bl	8001844 <HAL_RCC_GetPCLK2Freq>
 8001b56:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001b5a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001b5e:	6866      	ldr	r6, [r4, #4]
 8001b60:	00b6      	lsls	r6, r6, #2
 8001b62:	fbb0 f6f6 	udiv	r6, r0, r6
 8001b66:	f7ff fe6d 	bl	8001844 <HAL_RCC_GetPCLK2Freq>
 8001b6a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001b6e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8001b72:	6863      	ldr	r3, [r4, #4]
 8001b74:	009b      	lsls	r3, r3, #2
 8001b76:	fbb0 f3f3 	udiv	r3, r0, r3
 8001b7a:	fba7 2303 	umull	r2, r3, r7, r3
 8001b7e:	095b      	lsrs	r3, r3, #5
 8001b80:	fb09 6913 	mls	r9, r9, r3, r6
 8001b84:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8001b88:	f109 0932 	add.w	r9, r9, #50	; 0x32
 8001b8c:	fba7 3709 	umull	r3, r7, r7, r9
 8001b90:	f3c7 1743 	ubfx	r7, r7, #5, #4
 8001b94:	442f      	add	r7, r5
 8001b96:	f8c8 7008 	str.w	r7, [r8, #8]
 8001b9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001b9e:	bf00      	nop
 8001ba0:	40011000 	.word	0x40011000
 8001ba4:	51eb851f 	.word	0x51eb851f

08001ba8 <UART_WaitOnFlagUntilTimeout>:
{
 8001ba8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001bac:	4605      	mov	r5, r0
 8001bae:	460f      	mov	r7, r1
 8001bb0:	4616      	mov	r6, r2
 8001bb2:	4698      	mov	r8, r3
 8001bb4:	9c06      	ldr	r4, [sp, #24]
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8001bb6:	682b      	ldr	r3, [r5, #0]
 8001bb8:	681b      	ldr	r3, [r3, #0]
 8001bba:	ea37 0303 	bics.w	r3, r7, r3
 8001bbe:	bf0c      	ite	eq
 8001bc0:	2301      	moveq	r3, #1
 8001bc2:	2300      	movne	r3, #0
 8001bc4:	42b3      	cmp	r3, r6
 8001bc6:	d11e      	bne.n	8001c06 <UART_WaitOnFlagUntilTimeout+0x5e>
    if (Timeout != HAL_MAX_DELAY)
 8001bc8:	f1b4 3fff 	cmp.w	r4, #4294967295
 8001bcc:	d0f3      	beq.n	8001bb6 <UART_WaitOnFlagUntilTimeout+0xe>
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8001bce:	b12c      	cbz	r4, 8001bdc <UART_WaitOnFlagUntilTimeout+0x34>
 8001bd0:	f7ff f9ca 	bl	8000f68 <HAL_GetTick>
 8001bd4:	eba0 0008 	sub.w	r0, r0, r8
 8001bd8:	4284      	cmp	r4, r0
 8001bda:	d2ec      	bcs.n	8001bb6 <UART_WaitOnFlagUntilTimeout+0xe>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8001bdc:	682a      	ldr	r2, [r5, #0]
 8001bde:	68d3      	ldr	r3, [r2, #12]
 8001be0:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8001be4:	60d3      	str	r3, [r2, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8001be6:	682a      	ldr	r2, [r5, #0]
 8001be8:	6953      	ldr	r3, [r2, #20]
 8001bea:	f023 0301 	bic.w	r3, r3, #1
 8001bee:	6153      	str	r3, [r2, #20]
        huart->gState  = HAL_UART_STATE_READY;
 8001bf0:	2320      	movs	r3, #32
 8001bf2:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
        huart->RxState = HAL_UART_STATE_READY;
 8001bf6:	f885 303a 	strb.w	r3, [r5, #58]	; 0x3a
        __HAL_UNLOCK(huart);
 8001bfa:	2300      	movs	r3, #0
 8001bfc:	f885 3038 	strb.w	r3, [r5, #56]	; 0x38
        return HAL_TIMEOUT;
 8001c00:	2003      	movs	r0, #3
 8001c02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  return HAL_OK;
 8001c06:	2000      	movs	r0, #0
}
 8001c08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001c0c <HAL_UART_Init>:
  if (huart == NULL)
 8001c0c:	b358      	cbz	r0, 8001c66 <HAL_UART_Init+0x5a>
{
 8001c0e:	b510      	push	{r4, lr}
 8001c10:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
 8001c12:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8001c16:	b30b      	cbz	r3, 8001c5c <HAL_UART_Init+0x50>
  huart->gState = HAL_UART_STATE_BUSY;
 8001c18:	2324      	movs	r3, #36	; 0x24
 8001c1a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UART_DISABLE(huart);
 8001c1e:	6822      	ldr	r2, [r4, #0]
 8001c20:	68d3      	ldr	r3, [r2, #12]
 8001c22:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8001c26:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8001c28:	4620      	mov	r0, r4
 8001c2a:	f7ff fe1b 	bl	8001864 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8001c2e:	6822      	ldr	r2, [r4, #0]
 8001c30:	6913      	ldr	r3, [r2, #16]
 8001c32:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8001c36:	6113      	str	r3, [r2, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8001c38:	6822      	ldr	r2, [r4, #0]
 8001c3a:	6953      	ldr	r3, [r2, #20]
 8001c3c:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8001c40:	6153      	str	r3, [r2, #20]
  __HAL_UART_ENABLE(huart);
 8001c42:	6822      	ldr	r2, [r4, #0]
 8001c44:	68d3      	ldr	r3, [r2, #12]
 8001c46:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001c4a:	60d3      	str	r3, [r2, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001c4c:	2000      	movs	r0, #0
 8001c4e:	63e0      	str	r0, [r4, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 8001c50:	2320      	movs	r3, #32
 8001c52:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 8001c56:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
  return HAL_OK;
 8001c5a:	bd10      	pop	{r4, pc}
    huart->Lock = HAL_UNLOCKED;
 8001c5c:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
    HAL_UART_MspInit(huart);
 8001c60:	f000 f9da 	bl	8002018 <HAL_UART_MspInit>
 8001c64:	e7d8      	b.n	8001c18 <HAL_UART_Init+0xc>
    return HAL_ERROR;
 8001c66:	2001      	movs	r0, #1
 8001c68:	4770      	bx	lr

08001c6a <HAL_UART_Transmit>:
{
 8001c6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001c6e:	b082      	sub	sp, #8
 8001c70:	461e      	mov	r6, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8001c72:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8001c76:	b2db      	uxtb	r3, r3
 8001c78:	2b20      	cmp	r3, #32
 8001c7a:	d004      	beq.n	8001c86 <HAL_UART_Transmit+0x1c>
    return HAL_BUSY;
 8001c7c:	2302      	movs	r3, #2
}
 8001c7e:	4618      	mov	r0, r3
 8001c80:	b002      	add	sp, #8
 8001c82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001c86:	4604      	mov	r4, r0
 8001c88:	460d      	mov	r5, r1
 8001c8a:	4690      	mov	r8, r2
    if ((pData == NULL) || (Size == 0U))
 8001c8c:	2900      	cmp	r1, #0
 8001c8e:	d055      	beq.n	8001d3c <HAL_UART_Transmit+0xd2>
 8001c90:	2a00      	cmp	r2, #0
 8001c92:	d055      	beq.n	8001d40 <HAL_UART_Transmit+0xd6>
    __HAL_LOCK(huart);
 8001c94:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8001c98:	2b01      	cmp	r3, #1
 8001c9a:	d101      	bne.n	8001ca0 <HAL_UART_Transmit+0x36>
 8001c9c:	2302      	movs	r3, #2
 8001c9e:	e7ee      	b.n	8001c7e <HAL_UART_Transmit+0x14>
 8001ca0:	2301      	movs	r3, #1
 8001ca2:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	63c3      	str	r3, [r0, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8001caa:	2321      	movs	r3, #33	; 0x21
 8001cac:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
    tickstart = HAL_GetTick();
 8001cb0:	f7ff f95a 	bl	8000f68 <HAL_GetTick>
 8001cb4:	4607      	mov	r7, r0
    huart->TxXferSize = Size;
 8001cb6:	f8a4 8024 	strh.w	r8, [r4, #36]	; 0x24
    huart->TxXferCount = Size;
 8001cba:	f8a4 8026 	strh.w	r8, [r4, #38]	; 0x26
    while (huart->TxXferCount > 0U)
 8001cbe:	e010      	b.n	8001ce2 <HAL_UART_Transmit+0x78>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8001cc0:	9600      	str	r6, [sp, #0]
 8001cc2:	463b      	mov	r3, r7
 8001cc4:	2200      	movs	r2, #0
 8001cc6:	2180      	movs	r1, #128	; 0x80
 8001cc8:	4620      	mov	r0, r4
 8001cca:	f7ff ff6d 	bl	8001ba8 <UART_WaitOnFlagUntilTimeout>
 8001cce:	2800      	cmp	r0, #0
 8001cd0:	d138      	bne.n	8001d44 <HAL_UART_Transmit+0xda>
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 8001cd2:	6822      	ldr	r2, [r4, #0]
 8001cd4:	882b      	ldrh	r3, [r5, #0]
 8001cd6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001cda:	6053      	str	r3, [r2, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 8001cdc:	6923      	ldr	r3, [r4, #16]
 8001cde:	b9cb      	cbnz	r3, 8001d14 <HAL_UART_Transmit+0xaa>
          pData += 2U;
 8001ce0:	3502      	adds	r5, #2
    while (huart->TxXferCount > 0U)
 8001ce2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8001ce4:	b29b      	uxth	r3, r3
 8001ce6:	b1bb      	cbz	r3, 8001d18 <HAL_UART_Transmit+0xae>
      huart->TxXferCount--;
 8001ce8:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8001cea:	b29b      	uxth	r3, r3
 8001cec:	3b01      	subs	r3, #1
 8001cee:	b29b      	uxth	r3, r3
 8001cf0:	84e3      	strh	r3, [r4, #38]	; 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8001cf2:	68a3      	ldr	r3, [r4, #8]
 8001cf4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001cf8:	d0e2      	beq.n	8001cc0 <HAL_UART_Transmit+0x56>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8001cfa:	9600      	str	r6, [sp, #0]
 8001cfc:	463b      	mov	r3, r7
 8001cfe:	2200      	movs	r2, #0
 8001d00:	2180      	movs	r1, #128	; 0x80
 8001d02:	4620      	mov	r0, r4
 8001d04:	f7ff ff50 	bl	8001ba8 <UART_WaitOnFlagUntilTimeout>
 8001d08:	b9f0      	cbnz	r0, 8001d48 <HAL_UART_Transmit+0xde>
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 8001d0a:	6823      	ldr	r3, [r4, #0]
 8001d0c:	782a      	ldrb	r2, [r5, #0]
 8001d0e:	605a      	str	r2, [r3, #4]
 8001d10:	3501      	adds	r5, #1
 8001d12:	e7e6      	b.n	8001ce2 <HAL_UART_Transmit+0x78>
          pData += 1U;
 8001d14:	3501      	adds	r5, #1
 8001d16:	e7e4      	b.n	8001ce2 <HAL_UART_Transmit+0x78>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8001d18:	9600      	str	r6, [sp, #0]
 8001d1a:	463b      	mov	r3, r7
 8001d1c:	2200      	movs	r2, #0
 8001d1e:	2140      	movs	r1, #64	; 0x40
 8001d20:	4620      	mov	r0, r4
 8001d22:	f7ff ff41 	bl	8001ba8 <UART_WaitOnFlagUntilTimeout>
 8001d26:	4603      	mov	r3, r0
 8001d28:	b108      	cbz	r0, 8001d2e <HAL_UART_Transmit+0xc4>
      return HAL_TIMEOUT;
 8001d2a:	2303      	movs	r3, #3
 8001d2c:	e7a7      	b.n	8001c7e <HAL_UART_Transmit+0x14>
    huart->gState = HAL_UART_STATE_READY;
 8001d2e:	2220      	movs	r2, #32
 8001d30:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
    __HAL_UNLOCK(huart);
 8001d34:	2200      	movs	r2, #0
 8001d36:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
    return HAL_OK;
 8001d3a:	e7a0      	b.n	8001c7e <HAL_UART_Transmit+0x14>
      return  HAL_ERROR;
 8001d3c:	2301      	movs	r3, #1
 8001d3e:	e79e      	b.n	8001c7e <HAL_UART_Transmit+0x14>
 8001d40:	2301      	movs	r3, #1
 8001d42:	e79c      	b.n	8001c7e <HAL_UART_Transmit+0x14>
          return HAL_TIMEOUT;
 8001d44:	2303      	movs	r3, #3
 8001d46:	e79a      	b.n	8001c7e <HAL_UART_Transmit+0x14>
          return HAL_TIMEOUT;
 8001d48:	2303      	movs	r3, #3
 8001d4a:	e798      	b.n	8001c7e <HAL_UART_Transmit+0x14>

08001d4c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8001d4c:	b530      	push	{r4, r5, lr}
 8001d4e:	b089      	sub	sp, #36	; 0x24

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d50:	2400      	movs	r4, #0
 8001d52:	9403      	str	r4, [sp, #12]
 8001d54:	9404      	str	r4, [sp, #16]
 8001d56:	9405      	str	r4, [sp, #20]
 8001d58:	9406      	str	r4, [sp, #24]
 8001d5a:	9407      	str	r4, [sp, #28]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001d5c:	9400      	str	r4, [sp, #0]
 8001d5e:	4b19      	ldr	r3, [pc, #100]	; (8001dc4 <MX_GPIO_Init+0x78>)
 8001d60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d62:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001d66:	631a      	str	r2, [r3, #48]	; 0x30
 8001d68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d6a:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001d6e:	9200      	str	r2, [sp, #0]
 8001d70:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d72:	9401      	str	r4, [sp, #4]
 8001d74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d76:	f042 0201 	orr.w	r2, r2, #1
 8001d7a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d7e:	f002 0201 	and.w	r2, r2, #1
 8001d82:	9201      	str	r2, [sp, #4]
 8001d84:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d86:	9402      	str	r4, [sp, #8]
 8001d88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d8a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001d8e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d92:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001d96:	9302      	str	r3, [sp, #8]
 8001d98:	9b02      	ldr	r3, [sp, #8]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13|GPIO_PIN_14, GPIO_PIN_RESET);
 8001d9a:	4d0b      	ldr	r5, [pc, #44]	; (8001dc8 <MX_GPIO_Init+0x7c>)
 8001d9c:	4622      	mov	r2, r4
 8001d9e:	f44f 41c0 	mov.w	r1, #24576	; 0x6000
 8001da2:	4628      	mov	r0, r5
 8001da4:	f7ff fa46 	bl	8001234 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PG13 PG14 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14;
 8001da8:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
 8001dac:	9303      	str	r3, [sp, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001dae:	2301      	movs	r3, #1
 8001db0:	9304      	str	r3, [sp, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001db2:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001db4:	9406      	str	r4, [sp, #24]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001db6:	a903      	add	r1, sp, #12
 8001db8:	4628      	mov	r0, r5
 8001dba:	f7ff f949 	bl	8001050 <HAL_GPIO_Init>

}
 8001dbe:	b009      	add	sp, #36	; 0x24
 8001dc0:	bd30      	pop	{r4, r5, pc}
 8001dc2:	bf00      	nop
 8001dc4:	40023800 	.word	0x40023800
 8001dc8:	40021800 	.word	0x40021800

08001dcc <_write>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
int _write(int file, char* p, int len)
{
 8001dcc:	b510      	push	{r4, lr}
 8001dce:	4614      	mov	r4, r2
  HAL_UART_Transmit(&huart1, p, len, 10);
 8001dd0:	230a      	movs	r3, #10
 8001dd2:	b292      	uxth	r2, r2
 8001dd4:	4802      	ldr	r0, [pc, #8]	; (8001de0 <_write+0x14>)
 8001dd6:	f7ff ff48 	bl	8001c6a <HAL_UART_Transmit>
  return len;
}
 8001dda:	4620      	mov	r0, r4
 8001ddc:	bd10      	pop	{r4, pc}
 8001dde:	bf00      	nop
 8001de0:	20000208 	.word	0x20000208

08001de4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001de4:	b530      	push	{r4, r5, lr}
 8001de6:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001de8:	2230      	movs	r2, #48	; 0x30
 8001dea:	2100      	movs	r1, #0
 8001dec:	a808      	add	r0, sp, #32
 8001dee:	f000 f9a3 	bl	8002138 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001df2:	2400      	movs	r4, #0
 8001df4:	9403      	str	r4, [sp, #12]
 8001df6:	9404      	str	r4, [sp, #16]
 8001df8:	9405      	str	r4, [sp, #20]
 8001dfa:	9406      	str	r4, [sp, #24]
 8001dfc:	9407      	str	r4, [sp, #28]

  /** Configure the main internal regulator output voltage 
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001dfe:	9401      	str	r4, [sp, #4]
 8001e00:	4b1b      	ldr	r3, [pc, #108]	; (8001e70 <SystemClock_Config+0x8c>)
 8001e02:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001e04:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001e08:	641a      	str	r2, [r3, #64]	; 0x40
 8001e0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e0c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001e10:	9301      	str	r3, [sp, #4]
 8001e12:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001e14:	9402      	str	r4, [sp, #8]
 8001e16:	4b17      	ldr	r3, [pc, #92]	; (8001e74 <SystemClock_Config+0x90>)
 8001e18:	681a      	ldr	r2, [r3, #0]
 8001e1a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001e1e:	601a      	str	r2, [r3, #0]
 8001e20:	681b      	ldr	r3, [r3, #0]
 8001e22:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001e26:	9302      	str	r3, [sp, #8]
 8001e28:	9b02      	ldr	r3, [sp, #8]
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001e2a:	2301      	movs	r3, #1
 8001e2c:	9308      	str	r3, [sp, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001e2e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001e32:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001e34:	2502      	movs	r5, #2
 8001e36:	950e      	str	r5, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001e38:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001e3c:	930f      	str	r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8001e3e:	2304      	movs	r3, #4
 8001e40:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8001e42:	22a8      	movs	r2, #168	; 0xa8
 8001e44:	9211      	str	r2, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001e46:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001e48:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001e4a:	a808      	add	r0, sp, #32
 8001e4c:	f7ff fa02 	bl	8001254 <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001e50:	230f      	movs	r3, #15
 8001e52:	9303      	str	r3, [sp, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001e54:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001e56:	9405      	str	r4, [sp, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001e58:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8001e5c:	9306      	str	r3, [sp, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001e5e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001e62:	9307      	str	r3, [sp, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001e64:	2105      	movs	r1, #5
 8001e66:	a803      	add	r0, sp, #12
 8001e68:	f7ff fc2a 	bl	80016c0 <HAL_RCC_ClockConfig>
  {
    Error_Handler();
  }
}
 8001e6c:	b015      	add	sp, #84	; 0x54
 8001e6e:	bd30      	pop	{r4, r5, pc}
 8001e70:	40023800 	.word	0x40023800
 8001e74:	40007000 	.word	0x40007000

08001e78 <main>:
{
 8001e78:	b538      	push	{r3, r4, r5, lr}
  HAL_Init();
 8001e7a:	f7ff f84f 	bl	8000f1c <HAL_Init>
  SystemClock_Config();
 8001e7e:	f7ff ffb1 	bl	8001de4 <SystemClock_Config>
  MX_GPIO_Init();
 8001e82:	f7ff ff63 	bl	8001d4c <MX_GPIO_Init>
  MX_USART1_UART_Init();
 8001e86:	f000 f8ad 	bl	8001fe4 <MX_USART1_UART_Init>
  uint8_t count = 0;
 8001e8a:	2500      	movs	r5, #0
    HAL_Delay(1000);
 8001e8c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001e90:	f7ff f870 	bl	8000f74 <HAL_Delay>
    printf("%5d %f Hello STM32\n\r", count++, float_data);
 8001e94:	1c6c      	adds	r4, r5, #1
 8001e96:	b2e4      	uxtb	r4, r4
 8001e98:	a30b      	add	r3, pc, #44	; (adr r3, 8001ec8 <main+0x50>)
 8001e9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e9e:	4629      	mov	r1, r5
 8001ea0:	4807      	ldr	r0, [pc, #28]	; (8001ec0 <main+0x48>)
 8001ea2:	f000 fdbd 	bl	8002a20 <iprintf>
        HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001ea6:	4d07      	ldr	r5, [pc, #28]	; (8001ec4 <main+0x4c>)
 8001ea8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001eac:	4628      	mov	r0, r5
 8001eae:	f7ff f9c7 	bl	8001240 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_14);
 8001eb2:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001eb6:	4628      	mov	r0, r5
 8001eb8:	f7ff f9c2 	bl	8001240 <HAL_GPIO_TogglePin>
    printf("%5d %f Hello STM32\n\r", count++, float_data);
 8001ebc:	4625      	mov	r5, r4
 8001ebe:	e7e5      	b.n	8001e8c <main+0x14>
 8001ec0:	080047f0 	.word	0x080047f0
 8001ec4:	40021800 	.word	0x40021800
 8001ec8:	60000000 	.word	0x60000000
 8001ecc:	3ff3c0c9 	.word	0x3ff3c0c9

08001ed0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001ed0:	4770      	bx	lr
	...

08001ed4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001ed4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001ed6:	2100      	movs	r1, #0
 8001ed8:	9100      	str	r1, [sp, #0]
 8001eda:	4b0b      	ldr	r3, [pc, #44]	; (8001f08 <HAL_MspInit+0x34>)
 8001edc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ede:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001ee2:	645a      	str	r2, [r3, #68]	; 0x44
 8001ee4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ee6:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8001eea:	9200      	str	r2, [sp, #0]
 8001eec:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001eee:	9101      	str	r1, [sp, #4]
 8001ef0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001ef2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001ef6:	641a      	str	r2, [r3, #64]	; 0x40
 8001ef8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001efa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001efe:	9301      	str	r3, [sp, #4]
 8001f00:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001f02:	b002      	add	sp, #8
 8001f04:	4770      	bx	lr
 8001f06:	bf00      	nop
 8001f08:	40023800 	.word	0x40023800

08001f0c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001f0c:	4770      	bx	lr

08001f0e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001f0e:	e7fe      	b.n	8001f0e <HardFault_Handler>

08001f10 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001f10:	e7fe      	b.n	8001f10 <MemManage_Handler>

08001f12 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001f12:	e7fe      	b.n	8001f12 <BusFault_Handler>

08001f14 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001f14:	e7fe      	b.n	8001f14 <UsageFault_Handler>

08001f16 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001f16:	4770      	bx	lr

08001f18 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001f18:	4770      	bx	lr

08001f1a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001f1a:	4770      	bx	lr

08001f1c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001f1c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001f1e:	f7ff f817 	bl	8000f50 <HAL_IncTick>
 8001f22:	bd08      	pop	{r3, pc}

08001f24 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001f26:	460d      	mov	r5, r1
 8001f28:	4617      	mov	r7, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f2a:	2400      	movs	r4, #0
 8001f2c:	e005      	b.n	8001f3a <_read+0x16>
	{
		*ptr++ = __io_getchar();
 8001f2e:	1c6e      	adds	r6, r5, #1
 8001f30:	f3af 8000 	nop.w
 8001f34:	7028      	strb	r0, [r5, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f36:	3401      	adds	r4, #1
		*ptr++ = __io_getchar();
 8001f38:	4635      	mov	r5, r6
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f3a:	42bc      	cmp	r4, r7
 8001f3c:	dbf7      	blt.n	8001f2e <_read+0xa>
	}

return len;
}
 8001f3e:	4638      	mov	r0, r7
 8001f40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001f44 <_sbrk>:
	}
	return len;
}

caddr_t _sbrk(int incr)
{
 8001f44:	b508      	push	{r3, lr}
 8001f46:	4603      	mov	r3, r0
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001f48:	4a0b      	ldr	r2, [pc, #44]	; (8001f78 <_sbrk+0x34>)
 8001f4a:	6812      	ldr	r2, [r2, #0]
 8001f4c:	b142      	cbz	r2, 8001f60 <_sbrk+0x1c>
		heap_end = &end;

	prev_heap_end = heap_end;
 8001f4e:	4a0a      	ldr	r2, [pc, #40]	; (8001f78 <_sbrk+0x34>)
 8001f50:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001f52:	4403      	add	r3, r0
 8001f54:	466a      	mov	r2, sp
 8001f56:	4293      	cmp	r3, r2
 8001f58:	d806      	bhi.n	8001f68 <_sbrk+0x24>
//		abort();
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8001f5a:	4a07      	ldr	r2, [pc, #28]	; (8001f78 <_sbrk+0x34>)
 8001f5c:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8001f5e:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8001f60:	4906      	ldr	r1, [pc, #24]	; (8001f7c <_sbrk+0x38>)
 8001f62:	4a05      	ldr	r2, [pc, #20]	; (8001f78 <_sbrk+0x34>)
 8001f64:	6011      	str	r1, [r2, #0]
 8001f66:	e7f2      	b.n	8001f4e <_sbrk+0xa>
		errno = ENOMEM;
 8001f68:	f000 f8bc 	bl	80020e4 <__errno>
 8001f6c:	230c      	movs	r3, #12
 8001f6e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001f70:	f04f 30ff 	mov.w	r0, #4294967295
 8001f74:	bd08      	pop	{r3, pc}
 8001f76:	bf00      	nop
 8001f78:	200001f8 	.word	0x200001f8
 8001f7c:	2000024c 	.word	0x2000024c

08001f80 <_close>:

int _close(int file)
{
	return -1;
}
 8001f80:	f04f 30ff 	mov.w	r0, #4294967295
 8001f84:	4770      	bx	lr

08001f86 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001f86:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f8a:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001f8c:	2000      	movs	r0, #0
 8001f8e:	4770      	bx	lr

08001f90 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001f90:	2001      	movs	r0, #1
 8001f92:	4770      	bx	lr

08001f94 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001f94:	2000      	movs	r0, #0
 8001f96:	4770      	bx	lr

08001f98 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001f98:	490f      	ldr	r1, [pc, #60]	; (8001fd8 <SystemInit+0x40>)
 8001f9a:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8001f9e:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001fa2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8001fa6:	4b0d      	ldr	r3, [pc, #52]	; (8001fdc <SystemInit+0x44>)
 8001fa8:	681a      	ldr	r2, [r3, #0]
 8001faa:	f042 0201 	orr.w	r2, r2, #1
 8001fae:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8001fb0:	2000      	movs	r0, #0
 8001fb2:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8001fb4:	681a      	ldr	r2, [r3, #0]
 8001fb6:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8001fba:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001fbe:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 8001fc0:	4a07      	ldr	r2, [pc, #28]	; (8001fe0 <SystemInit+0x48>)
 8001fc2:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8001fc4:	681a      	ldr	r2, [r3, #0]
 8001fc6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8001fca:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8001fcc:	60d8      	str	r0, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8001fce:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8001fd2:	608b      	str	r3, [r1, #8]
 8001fd4:	4770      	bx	lr
 8001fd6:	bf00      	nop
 8001fd8:	e000ed00 	.word	0xe000ed00
 8001fdc:	40023800 	.word	0x40023800
 8001fe0:	24003010 	.word	0x24003010

08001fe4 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8001fe4:	b508      	push	{r3, lr}

  huart1.Instance = USART1;
 8001fe6:	480a      	ldr	r0, [pc, #40]	; (8002010 <MX_USART1_UART_Init+0x2c>)
 8001fe8:	4b0a      	ldr	r3, [pc, #40]	; (8002014 <MX_USART1_UART_Init+0x30>)
 8001fea:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 115200;
 8001fec:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8001ff0:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001ff2:	2300      	movs	r3, #0
 8001ff4:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001ff6:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001ff8:	6103      	str	r3, [r0, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001ffa:	220c      	movs	r2, #12
 8001ffc:	6142      	str	r2, [r0, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001ffe:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002000:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8002002:	f7ff fe03 	bl	8001c0c <HAL_UART_Init>
 8002006:	b900      	cbnz	r0, 800200a <MX_USART1_UART_Init+0x26>
 8002008:	bd08      	pop	{r3, pc}
  {
    Error_Handler();
 800200a:	f7ff ff61 	bl	8001ed0 <Error_Handler>
  }

}
 800200e:	e7fb      	b.n	8002008 <MX_USART1_UART_Init+0x24>
 8002010:	20000208 	.word	0x20000208
 8002014:	40011000 	.word	0x40011000

08002018 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8002018:	b500      	push	{lr}
 800201a:	b089      	sub	sp, #36	; 0x24

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800201c:	2300      	movs	r3, #0
 800201e:	9303      	str	r3, [sp, #12]
 8002020:	9304      	str	r3, [sp, #16]
 8002022:	9305      	str	r3, [sp, #20]
 8002024:	9306      	str	r3, [sp, #24]
 8002026:	9307      	str	r3, [sp, #28]
  if(uartHandle->Instance==USART1)
 8002028:	6802      	ldr	r2, [r0, #0]
 800202a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800202e:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8002032:	429a      	cmp	r2, r3
 8002034:	d002      	beq.n	800203c <HAL_UART_MspInit+0x24>

  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8002036:	b009      	add	sp, #36	; 0x24
 8002038:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_USART1_CLK_ENABLE();
 800203c:	2100      	movs	r1, #0
 800203e:	9101      	str	r1, [sp, #4]
 8002040:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 8002044:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002046:	f042 0210 	orr.w	r2, r2, #16
 800204a:	645a      	str	r2, [r3, #68]	; 0x44
 800204c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800204e:	f002 0210 	and.w	r2, r2, #16
 8002052:	9201      	str	r2, [sp, #4]
 8002054:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002056:	9102      	str	r1, [sp, #8]
 8002058:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800205a:	f042 0201 	orr.w	r2, r2, #1
 800205e:	631a      	str	r2, [r3, #48]	; 0x30
 8002060:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002062:	f003 0301 	and.w	r3, r3, #1
 8002066:	9302      	str	r3, [sp, #8]
 8002068:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800206a:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800206e:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002070:	2302      	movs	r3, #2
 8002072:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002074:	2301      	movs	r3, #1
 8002076:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002078:	2303      	movs	r3, #3
 800207a:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800207c:	2307      	movs	r3, #7
 800207e:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002080:	a903      	add	r1, sp, #12
 8002082:	4802      	ldr	r0, [pc, #8]	; (800208c <HAL_UART_MspInit+0x74>)
 8002084:	f7fe ffe4 	bl	8001050 <HAL_GPIO_Init>
}
 8002088:	e7d5      	b.n	8002036 <HAL_UART_MspInit+0x1e>
 800208a:	bf00      	nop
 800208c:	40020000 	.word	0x40020000

08002090 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8002090:	f8df d034 	ldr.w	sp, [pc, #52]	; 80020c8 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8002094:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8002096:	e003      	b.n	80020a0 <LoopCopyDataInit>

08002098 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8002098:	4b0c      	ldr	r3, [pc, #48]	; (80020cc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800209a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800209c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800209e:	3104      	adds	r1, #4

080020a0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80020a0:	480b      	ldr	r0, [pc, #44]	; (80020d0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80020a2:	4b0c      	ldr	r3, [pc, #48]	; (80020d4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80020a4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80020a6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80020a8:	d3f6      	bcc.n	8002098 <CopyDataInit>
  ldr  r2, =_sbss
 80020aa:	4a0b      	ldr	r2, [pc, #44]	; (80020d8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80020ac:	e002      	b.n	80020b4 <LoopFillZerobss>

080020ae <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80020ae:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80020b0:	f842 3b04 	str.w	r3, [r2], #4

080020b4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80020b4:	4b09      	ldr	r3, [pc, #36]	; (80020dc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80020b6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80020b8:	d3f9      	bcc.n	80020ae <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80020ba:	f7ff ff6d 	bl	8001f98 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80020be:	f000 f817 	bl	80020f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80020c2:	f7ff fed9 	bl	8001e78 <main>
  bx  lr    
 80020c6:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80020c8:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80020cc:	08004af0 	.word	0x08004af0
  ldr  r0, =_sdata
 80020d0:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80020d4:	200001dc 	.word	0x200001dc
  ldr  r2, =_sbss
 80020d8:	200001dc 	.word	0x200001dc
  ldr  r3, = _ebss
 80020dc:	2000024c 	.word	0x2000024c

080020e0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80020e0:	e7fe      	b.n	80020e0 <ADC_IRQHandler>
	...

080020e4 <__errno>:
 80020e4:	4b01      	ldr	r3, [pc, #4]	; (80020ec <__errno+0x8>)
 80020e6:	6818      	ldr	r0, [r3, #0]
 80020e8:	4770      	bx	lr
 80020ea:	bf00      	nop
 80020ec:	2000000c 	.word	0x2000000c

080020f0 <__libc_init_array>:
 80020f0:	b570      	push	{r4, r5, r6, lr}
 80020f2:	4e0d      	ldr	r6, [pc, #52]	; (8002128 <__libc_init_array+0x38>)
 80020f4:	4c0d      	ldr	r4, [pc, #52]	; (800212c <__libc_init_array+0x3c>)
 80020f6:	1ba4      	subs	r4, r4, r6
 80020f8:	10a4      	asrs	r4, r4, #2
 80020fa:	2500      	movs	r5, #0
 80020fc:	42a5      	cmp	r5, r4
 80020fe:	d109      	bne.n	8002114 <__libc_init_array+0x24>
 8002100:	4e0b      	ldr	r6, [pc, #44]	; (8002130 <__libc_init_array+0x40>)
 8002102:	4c0c      	ldr	r4, [pc, #48]	; (8002134 <__libc_init_array+0x44>)
 8002104:	f002 fb68 	bl	80047d8 <_init>
 8002108:	1ba4      	subs	r4, r4, r6
 800210a:	10a4      	asrs	r4, r4, #2
 800210c:	2500      	movs	r5, #0
 800210e:	42a5      	cmp	r5, r4
 8002110:	d105      	bne.n	800211e <__libc_init_array+0x2e>
 8002112:	bd70      	pop	{r4, r5, r6, pc}
 8002114:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002118:	4798      	blx	r3
 800211a:	3501      	adds	r5, #1
 800211c:	e7ee      	b.n	80020fc <__libc_init_array+0xc>
 800211e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002122:	4798      	blx	r3
 8002124:	3501      	adds	r5, #1
 8002126:	e7f2      	b.n	800210e <__libc_init_array+0x1e>
 8002128:	08004ae8 	.word	0x08004ae8
 800212c:	08004ae8 	.word	0x08004ae8
 8002130:	08004ae8 	.word	0x08004ae8
 8002134:	08004aec 	.word	0x08004aec

08002138 <memset>:
 8002138:	4402      	add	r2, r0
 800213a:	4603      	mov	r3, r0
 800213c:	4293      	cmp	r3, r2
 800213e:	d100      	bne.n	8002142 <memset+0xa>
 8002140:	4770      	bx	lr
 8002142:	f803 1b01 	strb.w	r1, [r3], #1
 8002146:	e7f9      	b.n	800213c <memset+0x4>

08002148 <__cvt>:
 8002148:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800214c:	ec55 4b10 	vmov	r4, r5, d0
 8002150:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8002152:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8002156:	2d00      	cmp	r5, #0
 8002158:	460e      	mov	r6, r1
 800215a:	4691      	mov	r9, r2
 800215c:	4619      	mov	r1, r3
 800215e:	bfb8      	it	lt
 8002160:	4622      	movlt	r2, r4
 8002162:	462b      	mov	r3, r5
 8002164:	f027 0720 	bic.w	r7, r7, #32
 8002168:	bfbb      	ittet	lt
 800216a:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800216e:	461d      	movlt	r5, r3
 8002170:	2300      	movge	r3, #0
 8002172:	232d      	movlt	r3, #45	; 0x2d
 8002174:	bfb8      	it	lt
 8002176:	4614      	movlt	r4, r2
 8002178:	2f46      	cmp	r7, #70	; 0x46
 800217a:	700b      	strb	r3, [r1, #0]
 800217c:	d004      	beq.n	8002188 <__cvt+0x40>
 800217e:	2f45      	cmp	r7, #69	; 0x45
 8002180:	d100      	bne.n	8002184 <__cvt+0x3c>
 8002182:	3601      	adds	r6, #1
 8002184:	2102      	movs	r1, #2
 8002186:	e000      	b.n	800218a <__cvt+0x42>
 8002188:	2103      	movs	r1, #3
 800218a:	ab03      	add	r3, sp, #12
 800218c:	9301      	str	r3, [sp, #4]
 800218e:	ab02      	add	r3, sp, #8
 8002190:	9300      	str	r3, [sp, #0]
 8002192:	4632      	mov	r2, r6
 8002194:	4653      	mov	r3, sl
 8002196:	ec45 4b10 	vmov	d0, r4, r5
 800219a:	f000 fce5 	bl	8002b68 <_dtoa_r>
 800219e:	2f47      	cmp	r7, #71	; 0x47
 80021a0:	4680      	mov	r8, r0
 80021a2:	d102      	bne.n	80021aa <__cvt+0x62>
 80021a4:	f019 0f01 	tst.w	r9, #1
 80021a8:	d026      	beq.n	80021f8 <__cvt+0xb0>
 80021aa:	2f46      	cmp	r7, #70	; 0x46
 80021ac:	eb08 0906 	add.w	r9, r8, r6
 80021b0:	d111      	bne.n	80021d6 <__cvt+0x8e>
 80021b2:	f898 3000 	ldrb.w	r3, [r8]
 80021b6:	2b30      	cmp	r3, #48	; 0x30
 80021b8:	d10a      	bne.n	80021d0 <__cvt+0x88>
 80021ba:	2200      	movs	r2, #0
 80021bc:	2300      	movs	r3, #0
 80021be:	4620      	mov	r0, r4
 80021c0:	4629      	mov	r1, r5
 80021c2:	f7fe fc8d 	bl	8000ae0 <__aeabi_dcmpeq>
 80021c6:	b918      	cbnz	r0, 80021d0 <__cvt+0x88>
 80021c8:	f1c6 0601 	rsb	r6, r6, #1
 80021cc:	f8ca 6000 	str.w	r6, [sl]
 80021d0:	f8da 3000 	ldr.w	r3, [sl]
 80021d4:	4499      	add	r9, r3
 80021d6:	2200      	movs	r2, #0
 80021d8:	2300      	movs	r3, #0
 80021da:	4620      	mov	r0, r4
 80021dc:	4629      	mov	r1, r5
 80021de:	f7fe fc7f 	bl	8000ae0 <__aeabi_dcmpeq>
 80021e2:	b938      	cbnz	r0, 80021f4 <__cvt+0xac>
 80021e4:	2230      	movs	r2, #48	; 0x30
 80021e6:	9b03      	ldr	r3, [sp, #12]
 80021e8:	4599      	cmp	r9, r3
 80021ea:	d905      	bls.n	80021f8 <__cvt+0xb0>
 80021ec:	1c59      	adds	r1, r3, #1
 80021ee:	9103      	str	r1, [sp, #12]
 80021f0:	701a      	strb	r2, [r3, #0]
 80021f2:	e7f8      	b.n	80021e6 <__cvt+0x9e>
 80021f4:	f8cd 900c 	str.w	r9, [sp, #12]
 80021f8:	9b03      	ldr	r3, [sp, #12]
 80021fa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80021fc:	eba3 0308 	sub.w	r3, r3, r8
 8002200:	4640      	mov	r0, r8
 8002202:	6013      	str	r3, [r2, #0]
 8002204:	b004      	add	sp, #16
 8002206:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800220a <__exponent>:
 800220a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800220c:	4603      	mov	r3, r0
 800220e:	2900      	cmp	r1, #0
 8002210:	bfb8      	it	lt
 8002212:	4249      	neglt	r1, r1
 8002214:	f803 2b02 	strb.w	r2, [r3], #2
 8002218:	bfb4      	ite	lt
 800221a:	222d      	movlt	r2, #45	; 0x2d
 800221c:	222b      	movge	r2, #43	; 0x2b
 800221e:	2909      	cmp	r1, #9
 8002220:	7042      	strb	r2, [r0, #1]
 8002222:	dd20      	ble.n	8002266 <__exponent+0x5c>
 8002224:	f10d 0207 	add.w	r2, sp, #7
 8002228:	4617      	mov	r7, r2
 800222a:	260a      	movs	r6, #10
 800222c:	fb91 f5f6 	sdiv	r5, r1, r6
 8002230:	fb06 1115 	mls	r1, r6, r5, r1
 8002234:	3130      	adds	r1, #48	; 0x30
 8002236:	2d09      	cmp	r5, #9
 8002238:	f802 1c01 	strb.w	r1, [r2, #-1]
 800223c:	f102 34ff 	add.w	r4, r2, #4294967295
 8002240:	4629      	mov	r1, r5
 8002242:	dc09      	bgt.n	8002258 <__exponent+0x4e>
 8002244:	3130      	adds	r1, #48	; 0x30
 8002246:	3a02      	subs	r2, #2
 8002248:	f804 1c01 	strb.w	r1, [r4, #-1]
 800224c:	42ba      	cmp	r2, r7
 800224e:	461c      	mov	r4, r3
 8002250:	d304      	bcc.n	800225c <__exponent+0x52>
 8002252:	1a20      	subs	r0, r4, r0
 8002254:	b003      	add	sp, #12
 8002256:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002258:	4622      	mov	r2, r4
 800225a:	e7e7      	b.n	800222c <__exponent+0x22>
 800225c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8002260:	f803 1b01 	strb.w	r1, [r3], #1
 8002264:	e7f2      	b.n	800224c <__exponent+0x42>
 8002266:	2230      	movs	r2, #48	; 0x30
 8002268:	461c      	mov	r4, r3
 800226a:	4411      	add	r1, r2
 800226c:	f804 2b02 	strb.w	r2, [r4], #2
 8002270:	7059      	strb	r1, [r3, #1]
 8002272:	e7ee      	b.n	8002252 <__exponent+0x48>

08002274 <_printf_float>:
 8002274:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002278:	b08d      	sub	sp, #52	; 0x34
 800227a:	460c      	mov	r4, r1
 800227c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8002280:	4616      	mov	r6, r2
 8002282:	461f      	mov	r7, r3
 8002284:	4605      	mov	r5, r0
 8002286:	f001 fb07 	bl	8003898 <_localeconv_r>
 800228a:	6803      	ldr	r3, [r0, #0]
 800228c:	9304      	str	r3, [sp, #16]
 800228e:	4618      	mov	r0, r3
 8002290:	f7fd ffae 	bl	80001f0 <strlen>
 8002294:	2300      	movs	r3, #0
 8002296:	930a      	str	r3, [sp, #40]	; 0x28
 8002298:	f8d8 3000 	ldr.w	r3, [r8]
 800229c:	9005      	str	r0, [sp, #20]
 800229e:	3307      	adds	r3, #7
 80022a0:	f023 0307 	bic.w	r3, r3, #7
 80022a4:	f103 0208 	add.w	r2, r3, #8
 80022a8:	f894 a018 	ldrb.w	sl, [r4, #24]
 80022ac:	f8d4 b000 	ldr.w	fp, [r4]
 80022b0:	f8c8 2000 	str.w	r2, [r8]
 80022b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022b8:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80022bc:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 80022c0:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80022c4:	9307      	str	r3, [sp, #28]
 80022c6:	f8cd 8018 	str.w	r8, [sp, #24]
 80022ca:	f04f 32ff 	mov.w	r2, #4294967295
 80022ce:	4ba5      	ldr	r3, [pc, #660]	; (8002564 <_printf_float+0x2f0>)
 80022d0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80022d4:	f7fe fc36 	bl	8000b44 <__aeabi_dcmpun>
 80022d8:	2800      	cmp	r0, #0
 80022da:	f040 81fb 	bne.w	80026d4 <_printf_float+0x460>
 80022de:	f04f 32ff 	mov.w	r2, #4294967295
 80022e2:	4ba0      	ldr	r3, [pc, #640]	; (8002564 <_printf_float+0x2f0>)
 80022e4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80022e8:	f7fe fc0e 	bl	8000b08 <__aeabi_dcmple>
 80022ec:	2800      	cmp	r0, #0
 80022ee:	f040 81f1 	bne.w	80026d4 <_printf_float+0x460>
 80022f2:	2200      	movs	r2, #0
 80022f4:	2300      	movs	r3, #0
 80022f6:	4640      	mov	r0, r8
 80022f8:	4649      	mov	r1, r9
 80022fa:	f7fe fbfb 	bl	8000af4 <__aeabi_dcmplt>
 80022fe:	b110      	cbz	r0, 8002306 <_printf_float+0x92>
 8002300:	232d      	movs	r3, #45	; 0x2d
 8002302:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002306:	4b98      	ldr	r3, [pc, #608]	; (8002568 <_printf_float+0x2f4>)
 8002308:	4a98      	ldr	r2, [pc, #608]	; (800256c <_printf_float+0x2f8>)
 800230a:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 800230e:	bf8c      	ite	hi
 8002310:	4690      	movhi	r8, r2
 8002312:	4698      	movls	r8, r3
 8002314:	2303      	movs	r3, #3
 8002316:	f02b 0204 	bic.w	r2, fp, #4
 800231a:	6123      	str	r3, [r4, #16]
 800231c:	6022      	str	r2, [r4, #0]
 800231e:	f04f 0900 	mov.w	r9, #0
 8002322:	9700      	str	r7, [sp, #0]
 8002324:	4633      	mov	r3, r6
 8002326:	aa0b      	add	r2, sp, #44	; 0x2c
 8002328:	4621      	mov	r1, r4
 800232a:	4628      	mov	r0, r5
 800232c:	f000 f9e2 	bl	80026f4 <_printf_common>
 8002330:	3001      	adds	r0, #1
 8002332:	f040 8093 	bne.w	800245c <_printf_float+0x1e8>
 8002336:	f04f 30ff 	mov.w	r0, #4294967295
 800233a:	b00d      	add	sp, #52	; 0x34
 800233c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002340:	6861      	ldr	r1, [r4, #4]
 8002342:	1c4b      	adds	r3, r1, #1
 8002344:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
 8002348:	d13f      	bne.n	80023ca <_printf_float+0x156>
 800234a:	2306      	movs	r3, #6
 800234c:	6063      	str	r3, [r4, #4]
 800234e:	2300      	movs	r3, #0
 8002350:	9303      	str	r3, [sp, #12]
 8002352:	ab0a      	add	r3, sp, #40	; 0x28
 8002354:	9302      	str	r3, [sp, #8]
 8002356:	ab09      	add	r3, sp, #36	; 0x24
 8002358:	9300      	str	r3, [sp, #0]
 800235a:	ec49 8b10 	vmov	d0, r8, r9
 800235e:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8002362:	6022      	str	r2, [r4, #0]
 8002364:	f8cd a004 	str.w	sl, [sp, #4]
 8002368:	6861      	ldr	r1, [r4, #4]
 800236a:	4628      	mov	r0, r5
 800236c:	f7ff feec 	bl	8002148 <__cvt>
 8002370:	f00a 03df 	and.w	r3, sl, #223	; 0xdf
 8002374:	2b47      	cmp	r3, #71	; 0x47
 8002376:	4680      	mov	r8, r0
 8002378:	d109      	bne.n	800238e <_printf_float+0x11a>
 800237a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800237c:	1cd8      	adds	r0, r3, #3
 800237e:	db02      	blt.n	8002386 <_printf_float+0x112>
 8002380:	6862      	ldr	r2, [r4, #4]
 8002382:	4293      	cmp	r3, r2
 8002384:	dd57      	ble.n	8002436 <_printf_float+0x1c2>
 8002386:	f1aa 0a02 	sub.w	sl, sl, #2
 800238a:	fa5f fa8a 	uxtb.w	sl, sl
 800238e:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 8002392:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002394:	d834      	bhi.n	8002400 <_printf_float+0x18c>
 8002396:	3901      	subs	r1, #1
 8002398:	4652      	mov	r2, sl
 800239a:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800239e:	9109      	str	r1, [sp, #36]	; 0x24
 80023a0:	f7ff ff33 	bl	800220a <__exponent>
 80023a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80023a6:	1883      	adds	r3, r0, r2
 80023a8:	2a01      	cmp	r2, #1
 80023aa:	4681      	mov	r9, r0
 80023ac:	6123      	str	r3, [r4, #16]
 80023ae:	dc02      	bgt.n	80023b6 <_printf_float+0x142>
 80023b0:	6822      	ldr	r2, [r4, #0]
 80023b2:	07d1      	lsls	r1, r2, #31
 80023b4:	d501      	bpl.n	80023ba <_printf_float+0x146>
 80023b6:	3301      	adds	r3, #1
 80023b8:	6123      	str	r3, [r4, #16]
 80023ba:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80023be:	2b00      	cmp	r3, #0
 80023c0:	d0af      	beq.n	8002322 <_printf_float+0xae>
 80023c2:	232d      	movs	r3, #45	; 0x2d
 80023c4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80023c8:	e7ab      	b.n	8002322 <_printf_float+0xae>
 80023ca:	f1ba 0f67 	cmp.w	sl, #103	; 0x67
 80023ce:	d002      	beq.n	80023d6 <_printf_float+0x162>
 80023d0:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 80023d4:	d1bb      	bne.n	800234e <_printf_float+0xda>
 80023d6:	b189      	cbz	r1, 80023fc <_printf_float+0x188>
 80023d8:	2300      	movs	r3, #0
 80023da:	9303      	str	r3, [sp, #12]
 80023dc:	ab0a      	add	r3, sp, #40	; 0x28
 80023de:	9302      	str	r3, [sp, #8]
 80023e0:	ab09      	add	r3, sp, #36	; 0x24
 80023e2:	9300      	str	r3, [sp, #0]
 80023e4:	ec49 8b10 	vmov	d0, r8, r9
 80023e8:	6022      	str	r2, [r4, #0]
 80023ea:	f8cd a004 	str.w	sl, [sp, #4]
 80023ee:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80023f2:	4628      	mov	r0, r5
 80023f4:	f7ff fea8 	bl	8002148 <__cvt>
 80023f8:	4680      	mov	r8, r0
 80023fa:	e7be      	b.n	800237a <_printf_float+0x106>
 80023fc:	2301      	movs	r3, #1
 80023fe:	e7a5      	b.n	800234c <_printf_float+0xd8>
 8002400:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
 8002404:	d119      	bne.n	800243a <_printf_float+0x1c6>
 8002406:	2900      	cmp	r1, #0
 8002408:	6863      	ldr	r3, [r4, #4]
 800240a:	dd0c      	ble.n	8002426 <_printf_float+0x1b2>
 800240c:	6121      	str	r1, [r4, #16]
 800240e:	b913      	cbnz	r3, 8002416 <_printf_float+0x1a2>
 8002410:	6822      	ldr	r2, [r4, #0]
 8002412:	07d2      	lsls	r2, r2, #31
 8002414:	d502      	bpl.n	800241c <_printf_float+0x1a8>
 8002416:	3301      	adds	r3, #1
 8002418:	440b      	add	r3, r1
 800241a:	6123      	str	r3, [r4, #16]
 800241c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800241e:	65a3      	str	r3, [r4, #88]	; 0x58
 8002420:	f04f 0900 	mov.w	r9, #0
 8002424:	e7c9      	b.n	80023ba <_printf_float+0x146>
 8002426:	b913      	cbnz	r3, 800242e <_printf_float+0x1ba>
 8002428:	6822      	ldr	r2, [r4, #0]
 800242a:	07d0      	lsls	r0, r2, #31
 800242c:	d501      	bpl.n	8002432 <_printf_float+0x1be>
 800242e:	3302      	adds	r3, #2
 8002430:	e7f3      	b.n	800241a <_printf_float+0x1a6>
 8002432:	2301      	movs	r3, #1
 8002434:	e7f1      	b.n	800241a <_printf_float+0x1a6>
 8002436:	f04f 0a67 	mov.w	sl, #103	; 0x67
 800243a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800243c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800243e:	4293      	cmp	r3, r2
 8002440:	db05      	blt.n	800244e <_printf_float+0x1da>
 8002442:	6822      	ldr	r2, [r4, #0]
 8002444:	6123      	str	r3, [r4, #16]
 8002446:	07d1      	lsls	r1, r2, #31
 8002448:	d5e8      	bpl.n	800241c <_printf_float+0x1a8>
 800244a:	3301      	adds	r3, #1
 800244c:	e7e5      	b.n	800241a <_printf_float+0x1a6>
 800244e:	2b00      	cmp	r3, #0
 8002450:	bfd4      	ite	le
 8002452:	f1c3 0302 	rsble	r3, r3, #2
 8002456:	2301      	movgt	r3, #1
 8002458:	4413      	add	r3, r2
 800245a:	e7de      	b.n	800241a <_printf_float+0x1a6>
 800245c:	6823      	ldr	r3, [r4, #0]
 800245e:	055a      	lsls	r2, r3, #21
 8002460:	d407      	bmi.n	8002472 <_printf_float+0x1fe>
 8002462:	6923      	ldr	r3, [r4, #16]
 8002464:	4642      	mov	r2, r8
 8002466:	4631      	mov	r1, r6
 8002468:	4628      	mov	r0, r5
 800246a:	47b8      	blx	r7
 800246c:	3001      	adds	r0, #1
 800246e:	d12b      	bne.n	80024c8 <_printf_float+0x254>
 8002470:	e761      	b.n	8002336 <_printf_float+0xc2>
 8002472:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 8002476:	f240 80e2 	bls.w	800263e <_printf_float+0x3ca>
 800247a:	2200      	movs	r2, #0
 800247c:	2300      	movs	r3, #0
 800247e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002482:	f7fe fb2d 	bl	8000ae0 <__aeabi_dcmpeq>
 8002486:	2800      	cmp	r0, #0
 8002488:	d03c      	beq.n	8002504 <_printf_float+0x290>
 800248a:	2301      	movs	r3, #1
 800248c:	4a38      	ldr	r2, [pc, #224]	; (8002570 <_printf_float+0x2fc>)
 800248e:	4631      	mov	r1, r6
 8002490:	4628      	mov	r0, r5
 8002492:	47b8      	blx	r7
 8002494:	3001      	adds	r0, #1
 8002496:	f43f af4e 	beq.w	8002336 <_printf_float+0xc2>
 800249a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800249c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800249e:	429a      	cmp	r2, r3
 80024a0:	db02      	blt.n	80024a8 <_printf_float+0x234>
 80024a2:	6823      	ldr	r3, [r4, #0]
 80024a4:	07d8      	lsls	r0, r3, #31
 80024a6:	d50f      	bpl.n	80024c8 <_printf_float+0x254>
 80024a8:	9b05      	ldr	r3, [sp, #20]
 80024aa:	9a04      	ldr	r2, [sp, #16]
 80024ac:	4631      	mov	r1, r6
 80024ae:	4628      	mov	r0, r5
 80024b0:	47b8      	blx	r7
 80024b2:	3001      	adds	r0, #1
 80024b4:	f43f af3f 	beq.w	8002336 <_printf_float+0xc2>
 80024b8:	f04f 0800 	mov.w	r8, #0
 80024bc:	f104 091a 	add.w	r9, r4, #26
 80024c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80024c2:	3b01      	subs	r3, #1
 80024c4:	4598      	cmp	r8, r3
 80024c6:	db12      	blt.n	80024ee <_printf_float+0x27a>
 80024c8:	6823      	ldr	r3, [r4, #0]
 80024ca:	079b      	lsls	r3, r3, #30
 80024cc:	d509      	bpl.n	80024e2 <_printf_float+0x26e>
 80024ce:	f04f 0800 	mov.w	r8, #0
 80024d2:	f104 0919 	add.w	r9, r4, #25
 80024d6:	68e3      	ldr	r3, [r4, #12]
 80024d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80024da:	1a9b      	subs	r3, r3, r2
 80024dc:	4598      	cmp	r8, r3
 80024de:	f2c0 80ee 	blt.w	80026be <_printf_float+0x44a>
 80024e2:	68e0      	ldr	r0, [r4, #12]
 80024e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80024e6:	4298      	cmp	r0, r3
 80024e8:	bfb8      	it	lt
 80024ea:	4618      	movlt	r0, r3
 80024ec:	e725      	b.n	800233a <_printf_float+0xc6>
 80024ee:	2301      	movs	r3, #1
 80024f0:	464a      	mov	r2, r9
 80024f2:	4631      	mov	r1, r6
 80024f4:	4628      	mov	r0, r5
 80024f6:	47b8      	blx	r7
 80024f8:	3001      	adds	r0, #1
 80024fa:	f43f af1c 	beq.w	8002336 <_printf_float+0xc2>
 80024fe:	f108 0801 	add.w	r8, r8, #1
 8002502:	e7dd      	b.n	80024c0 <_printf_float+0x24c>
 8002504:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002506:	2b00      	cmp	r3, #0
 8002508:	dc34      	bgt.n	8002574 <_printf_float+0x300>
 800250a:	2301      	movs	r3, #1
 800250c:	4a18      	ldr	r2, [pc, #96]	; (8002570 <_printf_float+0x2fc>)
 800250e:	4631      	mov	r1, r6
 8002510:	4628      	mov	r0, r5
 8002512:	47b8      	blx	r7
 8002514:	3001      	adds	r0, #1
 8002516:	f43f af0e 	beq.w	8002336 <_printf_float+0xc2>
 800251a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800251c:	b923      	cbnz	r3, 8002528 <_printf_float+0x2b4>
 800251e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002520:	b913      	cbnz	r3, 8002528 <_printf_float+0x2b4>
 8002522:	6823      	ldr	r3, [r4, #0]
 8002524:	07d9      	lsls	r1, r3, #31
 8002526:	d5cf      	bpl.n	80024c8 <_printf_float+0x254>
 8002528:	9b05      	ldr	r3, [sp, #20]
 800252a:	9a04      	ldr	r2, [sp, #16]
 800252c:	4631      	mov	r1, r6
 800252e:	4628      	mov	r0, r5
 8002530:	47b8      	blx	r7
 8002532:	3001      	adds	r0, #1
 8002534:	f43f aeff 	beq.w	8002336 <_printf_float+0xc2>
 8002538:	f04f 0900 	mov.w	r9, #0
 800253c:	f104 0a1a 	add.w	sl, r4, #26
 8002540:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002542:	425b      	negs	r3, r3
 8002544:	4599      	cmp	r9, r3
 8002546:	db01      	blt.n	800254c <_printf_float+0x2d8>
 8002548:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800254a:	e78b      	b.n	8002464 <_printf_float+0x1f0>
 800254c:	2301      	movs	r3, #1
 800254e:	4652      	mov	r2, sl
 8002550:	4631      	mov	r1, r6
 8002552:	4628      	mov	r0, r5
 8002554:	47b8      	blx	r7
 8002556:	3001      	adds	r0, #1
 8002558:	f43f aeed 	beq.w	8002336 <_printf_float+0xc2>
 800255c:	f109 0901 	add.w	r9, r9, #1
 8002560:	e7ee      	b.n	8002540 <_printf_float+0x2cc>
 8002562:	bf00      	nop
 8002564:	7fefffff 	.word	0x7fefffff
 8002568:	08004824 	.word	0x08004824
 800256c:	08004828 	.word	0x08004828
 8002570:	08004834 	.word	0x08004834
 8002574:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002576:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8002578:	429a      	cmp	r2, r3
 800257a:	bfa8      	it	ge
 800257c:	461a      	movge	r2, r3
 800257e:	2a00      	cmp	r2, #0
 8002580:	4691      	mov	r9, r2
 8002582:	dc38      	bgt.n	80025f6 <_printf_float+0x382>
 8002584:	f104 031a 	add.w	r3, r4, #26
 8002588:	f04f 0b00 	mov.w	fp, #0
 800258c:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002590:	9306      	str	r3, [sp, #24]
 8002592:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8002596:	ebaa 0309 	sub.w	r3, sl, r9
 800259a:	459b      	cmp	fp, r3
 800259c:	db33      	blt.n	8002606 <_printf_float+0x392>
 800259e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80025a0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80025a2:	429a      	cmp	r2, r3
 80025a4:	db3a      	blt.n	800261c <_printf_float+0x3a8>
 80025a6:	6823      	ldr	r3, [r4, #0]
 80025a8:	07da      	lsls	r2, r3, #31
 80025aa:	d437      	bmi.n	800261c <_printf_float+0x3a8>
 80025ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80025ae:	9909      	ldr	r1, [sp, #36]	; 0x24
 80025b0:	eba3 020a 	sub.w	r2, r3, sl
 80025b4:	eba3 0901 	sub.w	r9, r3, r1
 80025b8:	4591      	cmp	r9, r2
 80025ba:	bfa8      	it	ge
 80025bc:	4691      	movge	r9, r2
 80025be:	f1b9 0f00 	cmp.w	r9, #0
 80025c2:	dc33      	bgt.n	800262c <_printf_float+0x3b8>
 80025c4:	f04f 0800 	mov.w	r8, #0
 80025c8:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80025cc:	f104 0a1a 	add.w	sl, r4, #26
 80025d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80025d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80025d4:	1a9b      	subs	r3, r3, r2
 80025d6:	eba3 0309 	sub.w	r3, r3, r9
 80025da:	4598      	cmp	r8, r3
 80025dc:	f6bf af74 	bge.w	80024c8 <_printf_float+0x254>
 80025e0:	2301      	movs	r3, #1
 80025e2:	4652      	mov	r2, sl
 80025e4:	4631      	mov	r1, r6
 80025e6:	4628      	mov	r0, r5
 80025e8:	47b8      	blx	r7
 80025ea:	3001      	adds	r0, #1
 80025ec:	f43f aea3 	beq.w	8002336 <_printf_float+0xc2>
 80025f0:	f108 0801 	add.w	r8, r8, #1
 80025f4:	e7ec      	b.n	80025d0 <_printf_float+0x35c>
 80025f6:	4613      	mov	r3, r2
 80025f8:	4631      	mov	r1, r6
 80025fa:	4642      	mov	r2, r8
 80025fc:	4628      	mov	r0, r5
 80025fe:	47b8      	blx	r7
 8002600:	3001      	adds	r0, #1
 8002602:	d1bf      	bne.n	8002584 <_printf_float+0x310>
 8002604:	e697      	b.n	8002336 <_printf_float+0xc2>
 8002606:	2301      	movs	r3, #1
 8002608:	9a06      	ldr	r2, [sp, #24]
 800260a:	4631      	mov	r1, r6
 800260c:	4628      	mov	r0, r5
 800260e:	47b8      	blx	r7
 8002610:	3001      	adds	r0, #1
 8002612:	f43f ae90 	beq.w	8002336 <_printf_float+0xc2>
 8002616:	f10b 0b01 	add.w	fp, fp, #1
 800261a:	e7ba      	b.n	8002592 <_printf_float+0x31e>
 800261c:	9b05      	ldr	r3, [sp, #20]
 800261e:	9a04      	ldr	r2, [sp, #16]
 8002620:	4631      	mov	r1, r6
 8002622:	4628      	mov	r0, r5
 8002624:	47b8      	blx	r7
 8002626:	3001      	adds	r0, #1
 8002628:	d1c0      	bne.n	80025ac <_printf_float+0x338>
 800262a:	e684      	b.n	8002336 <_printf_float+0xc2>
 800262c:	464b      	mov	r3, r9
 800262e:	eb08 020a 	add.w	r2, r8, sl
 8002632:	4631      	mov	r1, r6
 8002634:	4628      	mov	r0, r5
 8002636:	47b8      	blx	r7
 8002638:	3001      	adds	r0, #1
 800263a:	d1c3      	bne.n	80025c4 <_printf_float+0x350>
 800263c:	e67b      	b.n	8002336 <_printf_float+0xc2>
 800263e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002640:	2a01      	cmp	r2, #1
 8002642:	dc01      	bgt.n	8002648 <_printf_float+0x3d4>
 8002644:	07db      	lsls	r3, r3, #31
 8002646:	d537      	bpl.n	80026b8 <_printf_float+0x444>
 8002648:	2301      	movs	r3, #1
 800264a:	4642      	mov	r2, r8
 800264c:	4631      	mov	r1, r6
 800264e:	4628      	mov	r0, r5
 8002650:	47b8      	blx	r7
 8002652:	3001      	adds	r0, #1
 8002654:	f43f ae6f 	beq.w	8002336 <_printf_float+0xc2>
 8002658:	9b05      	ldr	r3, [sp, #20]
 800265a:	9a04      	ldr	r2, [sp, #16]
 800265c:	4631      	mov	r1, r6
 800265e:	4628      	mov	r0, r5
 8002660:	47b8      	blx	r7
 8002662:	3001      	adds	r0, #1
 8002664:	f43f ae67 	beq.w	8002336 <_printf_float+0xc2>
 8002668:	2200      	movs	r2, #0
 800266a:	2300      	movs	r3, #0
 800266c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002670:	f7fe fa36 	bl	8000ae0 <__aeabi_dcmpeq>
 8002674:	b158      	cbz	r0, 800268e <_printf_float+0x41a>
 8002676:	f04f 0800 	mov.w	r8, #0
 800267a:	f104 0a1a 	add.w	sl, r4, #26
 800267e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002680:	3b01      	subs	r3, #1
 8002682:	4598      	cmp	r8, r3
 8002684:	db0d      	blt.n	80026a2 <_printf_float+0x42e>
 8002686:	464b      	mov	r3, r9
 8002688:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800268c:	e6eb      	b.n	8002466 <_printf_float+0x1f2>
 800268e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002690:	f108 0201 	add.w	r2, r8, #1
 8002694:	3b01      	subs	r3, #1
 8002696:	4631      	mov	r1, r6
 8002698:	4628      	mov	r0, r5
 800269a:	47b8      	blx	r7
 800269c:	3001      	adds	r0, #1
 800269e:	d1f2      	bne.n	8002686 <_printf_float+0x412>
 80026a0:	e649      	b.n	8002336 <_printf_float+0xc2>
 80026a2:	2301      	movs	r3, #1
 80026a4:	4652      	mov	r2, sl
 80026a6:	4631      	mov	r1, r6
 80026a8:	4628      	mov	r0, r5
 80026aa:	47b8      	blx	r7
 80026ac:	3001      	adds	r0, #1
 80026ae:	f43f ae42 	beq.w	8002336 <_printf_float+0xc2>
 80026b2:	f108 0801 	add.w	r8, r8, #1
 80026b6:	e7e2      	b.n	800267e <_printf_float+0x40a>
 80026b8:	2301      	movs	r3, #1
 80026ba:	4642      	mov	r2, r8
 80026bc:	e7eb      	b.n	8002696 <_printf_float+0x422>
 80026be:	2301      	movs	r3, #1
 80026c0:	464a      	mov	r2, r9
 80026c2:	4631      	mov	r1, r6
 80026c4:	4628      	mov	r0, r5
 80026c6:	47b8      	blx	r7
 80026c8:	3001      	adds	r0, #1
 80026ca:	f43f ae34 	beq.w	8002336 <_printf_float+0xc2>
 80026ce:	f108 0801 	add.w	r8, r8, #1
 80026d2:	e700      	b.n	80024d6 <_printf_float+0x262>
 80026d4:	4642      	mov	r2, r8
 80026d6:	464b      	mov	r3, r9
 80026d8:	4640      	mov	r0, r8
 80026da:	4649      	mov	r1, r9
 80026dc:	f7fe fa32 	bl	8000b44 <__aeabi_dcmpun>
 80026e0:	2800      	cmp	r0, #0
 80026e2:	f43f ae2d 	beq.w	8002340 <_printf_float+0xcc>
 80026e6:	4b01      	ldr	r3, [pc, #4]	; (80026ec <_printf_float+0x478>)
 80026e8:	4a01      	ldr	r2, [pc, #4]	; (80026f0 <_printf_float+0x47c>)
 80026ea:	e60e      	b.n	800230a <_printf_float+0x96>
 80026ec:	0800482c 	.word	0x0800482c
 80026f0:	08004830 	.word	0x08004830

080026f4 <_printf_common>:
 80026f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80026f8:	4691      	mov	r9, r2
 80026fa:	461f      	mov	r7, r3
 80026fc:	688a      	ldr	r2, [r1, #8]
 80026fe:	690b      	ldr	r3, [r1, #16]
 8002700:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002704:	4293      	cmp	r3, r2
 8002706:	bfb8      	it	lt
 8002708:	4613      	movlt	r3, r2
 800270a:	f8c9 3000 	str.w	r3, [r9]
 800270e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002712:	4606      	mov	r6, r0
 8002714:	460c      	mov	r4, r1
 8002716:	b112      	cbz	r2, 800271e <_printf_common+0x2a>
 8002718:	3301      	adds	r3, #1
 800271a:	f8c9 3000 	str.w	r3, [r9]
 800271e:	6823      	ldr	r3, [r4, #0]
 8002720:	0699      	lsls	r1, r3, #26
 8002722:	bf42      	ittt	mi
 8002724:	f8d9 3000 	ldrmi.w	r3, [r9]
 8002728:	3302      	addmi	r3, #2
 800272a:	f8c9 3000 	strmi.w	r3, [r9]
 800272e:	6825      	ldr	r5, [r4, #0]
 8002730:	f015 0506 	ands.w	r5, r5, #6
 8002734:	d107      	bne.n	8002746 <_printf_common+0x52>
 8002736:	f104 0a19 	add.w	sl, r4, #25
 800273a:	68e3      	ldr	r3, [r4, #12]
 800273c:	f8d9 2000 	ldr.w	r2, [r9]
 8002740:	1a9b      	subs	r3, r3, r2
 8002742:	429d      	cmp	r5, r3
 8002744:	db29      	blt.n	800279a <_printf_common+0xa6>
 8002746:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800274a:	6822      	ldr	r2, [r4, #0]
 800274c:	3300      	adds	r3, #0
 800274e:	bf18      	it	ne
 8002750:	2301      	movne	r3, #1
 8002752:	0692      	lsls	r2, r2, #26
 8002754:	d42e      	bmi.n	80027b4 <_printf_common+0xc0>
 8002756:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800275a:	4639      	mov	r1, r7
 800275c:	4630      	mov	r0, r6
 800275e:	47c0      	blx	r8
 8002760:	3001      	adds	r0, #1
 8002762:	d021      	beq.n	80027a8 <_printf_common+0xb4>
 8002764:	6823      	ldr	r3, [r4, #0]
 8002766:	68e5      	ldr	r5, [r4, #12]
 8002768:	f8d9 2000 	ldr.w	r2, [r9]
 800276c:	f003 0306 	and.w	r3, r3, #6
 8002770:	2b04      	cmp	r3, #4
 8002772:	bf08      	it	eq
 8002774:	1aad      	subeq	r5, r5, r2
 8002776:	68a3      	ldr	r3, [r4, #8]
 8002778:	6922      	ldr	r2, [r4, #16]
 800277a:	bf0c      	ite	eq
 800277c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002780:	2500      	movne	r5, #0
 8002782:	4293      	cmp	r3, r2
 8002784:	bfc4      	itt	gt
 8002786:	1a9b      	subgt	r3, r3, r2
 8002788:	18ed      	addgt	r5, r5, r3
 800278a:	f04f 0900 	mov.w	r9, #0
 800278e:	341a      	adds	r4, #26
 8002790:	454d      	cmp	r5, r9
 8002792:	d11b      	bne.n	80027cc <_printf_common+0xd8>
 8002794:	2000      	movs	r0, #0
 8002796:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800279a:	2301      	movs	r3, #1
 800279c:	4652      	mov	r2, sl
 800279e:	4639      	mov	r1, r7
 80027a0:	4630      	mov	r0, r6
 80027a2:	47c0      	blx	r8
 80027a4:	3001      	adds	r0, #1
 80027a6:	d103      	bne.n	80027b0 <_printf_common+0xbc>
 80027a8:	f04f 30ff 	mov.w	r0, #4294967295
 80027ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80027b0:	3501      	adds	r5, #1
 80027b2:	e7c2      	b.n	800273a <_printf_common+0x46>
 80027b4:	18e1      	adds	r1, r4, r3
 80027b6:	1c5a      	adds	r2, r3, #1
 80027b8:	2030      	movs	r0, #48	; 0x30
 80027ba:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80027be:	4422      	add	r2, r4
 80027c0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80027c4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80027c8:	3302      	adds	r3, #2
 80027ca:	e7c4      	b.n	8002756 <_printf_common+0x62>
 80027cc:	2301      	movs	r3, #1
 80027ce:	4622      	mov	r2, r4
 80027d0:	4639      	mov	r1, r7
 80027d2:	4630      	mov	r0, r6
 80027d4:	47c0      	blx	r8
 80027d6:	3001      	adds	r0, #1
 80027d8:	d0e6      	beq.n	80027a8 <_printf_common+0xb4>
 80027da:	f109 0901 	add.w	r9, r9, #1
 80027de:	e7d7      	b.n	8002790 <_printf_common+0x9c>

080027e0 <_printf_i>:
 80027e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80027e4:	4617      	mov	r7, r2
 80027e6:	7e0a      	ldrb	r2, [r1, #24]
 80027e8:	b085      	sub	sp, #20
 80027ea:	2a6e      	cmp	r2, #110	; 0x6e
 80027ec:	4698      	mov	r8, r3
 80027ee:	4606      	mov	r6, r0
 80027f0:	460c      	mov	r4, r1
 80027f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80027f4:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 80027f8:	f000 80bc 	beq.w	8002974 <_printf_i+0x194>
 80027fc:	d81a      	bhi.n	8002834 <_printf_i+0x54>
 80027fe:	2a63      	cmp	r2, #99	; 0x63
 8002800:	d02e      	beq.n	8002860 <_printf_i+0x80>
 8002802:	d80a      	bhi.n	800281a <_printf_i+0x3a>
 8002804:	2a00      	cmp	r2, #0
 8002806:	f000 80c8 	beq.w	800299a <_printf_i+0x1ba>
 800280a:	2a58      	cmp	r2, #88	; 0x58
 800280c:	f000 808a 	beq.w	8002924 <_printf_i+0x144>
 8002810:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002814:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8002818:	e02a      	b.n	8002870 <_printf_i+0x90>
 800281a:	2a64      	cmp	r2, #100	; 0x64
 800281c:	d001      	beq.n	8002822 <_printf_i+0x42>
 800281e:	2a69      	cmp	r2, #105	; 0x69
 8002820:	d1f6      	bne.n	8002810 <_printf_i+0x30>
 8002822:	6821      	ldr	r1, [r4, #0]
 8002824:	681a      	ldr	r2, [r3, #0]
 8002826:	f011 0f80 	tst.w	r1, #128	; 0x80
 800282a:	d023      	beq.n	8002874 <_printf_i+0x94>
 800282c:	1d11      	adds	r1, r2, #4
 800282e:	6019      	str	r1, [r3, #0]
 8002830:	6813      	ldr	r3, [r2, #0]
 8002832:	e027      	b.n	8002884 <_printf_i+0xa4>
 8002834:	2a73      	cmp	r2, #115	; 0x73
 8002836:	f000 80b4 	beq.w	80029a2 <_printf_i+0x1c2>
 800283a:	d808      	bhi.n	800284e <_printf_i+0x6e>
 800283c:	2a6f      	cmp	r2, #111	; 0x6f
 800283e:	d02a      	beq.n	8002896 <_printf_i+0xb6>
 8002840:	2a70      	cmp	r2, #112	; 0x70
 8002842:	d1e5      	bne.n	8002810 <_printf_i+0x30>
 8002844:	680a      	ldr	r2, [r1, #0]
 8002846:	f042 0220 	orr.w	r2, r2, #32
 800284a:	600a      	str	r2, [r1, #0]
 800284c:	e003      	b.n	8002856 <_printf_i+0x76>
 800284e:	2a75      	cmp	r2, #117	; 0x75
 8002850:	d021      	beq.n	8002896 <_printf_i+0xb6>
 8002852:	2a78      	cmp	r2, #120	; 0x78
 8002854:	d1dc      	bne.n	8002810 <_printf_i+0x30>
 8002856:	2278      	movs	r2, #120	; 0x78
 8002858:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 800285c:	496e      	ldr	r1, [pc, #440]	; (8002a18 <_printf_i+0x238>)
 800285e:	e064      	b.n	800292a <_printf_i+0x14a>
 8002860:	681a      	ldr	r2, [r3, #0]
 8002862:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8002866:	1d11      	adds	r1, r2, #4
 8002868:	6019      	str	r1, [r3, #0]
 800286a:	6813      	ldr	r3, [r2, #0]
 800286c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002870:	2301      	movs	r3, #1
 8002872:	e0a3      	b.n	80029bc <_printf_i+0x1dc>
 8002874:	f011 0f40 	tst.w	r1, #64	; 0x40
 8002878:	f102 0104 	add.w	r1, r2, #4
 800287c:	6019      	str	r1, [r3, #0]
 800287e:	d0d7      	beq.n	8002830 <_printf_i+0x50>
 8002880:	f9b2 3000 	ldrsh.w	r3, [r2]
 8002884:	2b00      	cmp	r3, #0
 8002886:	da03      	bge.n	8002890 <_printf_i+0xb0>
 8002888:	222d      	movs	r2, #45	; 0x2d
 800288a:	425b      	negs	r3, r3
 800288c:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8002890:	4962      	ldr	r1, [pc, #392]	; (8002a1c <_printf_i+0x23c>)
 8002892:	220a      	movs	r2, #10
 8002894:	e017      	b.n	80028c6 <_printf_i+0xe6>
 8002896:	6820      	ldr	r0, [r4, #0]
 8002898:	6819      	ldr	r1, [r3, #0]
 800289a:	f010 0f80 	tst.w	r0, #128	; 0x80
 800289e:	d003      	beq.n	80028a8 <_printf_i+0xc8>
 80028a0:	1d08      	adds	r0, r1, #4
 80028a2:	6018      	str	r0, [r3, #0]
 80028a4:	680b      	ldr	r3, [r1, #0]
 80028a6:	e006      	b.n	80028b6 <_printf_i+0xd6>
 80028a8:	f010 0f40 	tst.w	r0, #64	; 0x40
 80028ac:	f101 0004 	add.w	r0, r1, #4
 80028b0:	6018      	str	r0, [r3, #0]
 80028b2:	d0f7      	beq.n	80028a4 <_printf_i+0xc4>
 80028b4:	880b      	ldrh	r3, [r1, #0]
 80028b6:	4959      	ldr	r1, [pc, #356]	; (8002a1c <_printf_i+0x23c>)
 80028b8:	2a6f      	cmp	r2, #111	; 0x6f
 80028ba:	bf14      	ite	ne
 80028bc:	220a      	movne	r2, #10
 80028be:	2208      	moveq	r2, #8
 80028c0:	2000      	movs	r0, #0
 80028c2:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 80028c6:	6865      	ldr	r5, [r4, #4]
 80028c8:	60a5      	str	r5, [r4, #8]
 80028ca:	2d00      	cmp	r5, #0
 80028cc:	f2c0 809c 	blt.w	8002a08 <_printf_i+0x228>
 80028d0:	6820      	ldr	r0, [r4, #0]
 80028d2:	f020 0004 	bic.w	r0, r0, #4
 80028d6:	6020      	str	r0, [r4, #0]
 80028d8:	2b00      	cmp	r3, #0
 80028da:	d13f      	bne.n	800295c <_printf_i+0x17c>
 80028dc:	2d00      	cmp	r5, #0
 80028de:	f040 8095 	bne.w	8002a0c <_printf_i+0x22c>
 80028e2:	4675      	mov	r5, lr
 80028e4:	2a08      	cmp	r2, #8
 80028e6:	d10b      	bne.n	8002900 <_printf_i+0x120>
 80028e8:	6823      	ldr	r3, [r4, #0]
 80028ea:	07da      	lsls	r2, r3, #31
 80028ec:	d508      	bpl.n	8002900 <_printf_i+0x120>
 80028ee:	6923      	ldr	r3, [r4, #16]
 80028f0:	6862      	ldr	r2, [r4, #4]
 80028f2:	429a      	cmp	r2, r3
 80028f4:	bfde      	ittt	le
 80028f6:	2330      	movle	r3, #48	; 0x30
 80028f8:	f805 3c01 	strble.w	r3, [r5, #-1]
 80028fc:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002900:	ebae 0305 	sub.w	r3, lr, r5
 8002904:	6123      	str	r3, [r4, #16]
 8002906:	f8cd 8000 	str.w	r8, [sp]
 800290a:	463b      	mov	r3, r7
 800290c:	aa03      	add	r2, sp, #12
 800290e:	4621      	mov	r1, r4
 8002910:	4630      	mov	r0, r6
 8002912:	f7ff feef 	bl	80026f4 <_printf_common>
 8002916:	3001      	adds	r0, #1
 8002918:	d155      	bne.n	80029c6 <_printf_i+0x1e6>
 800291a:	f04f 30ff 	mov.w	r0, #4294967295
 800291e:	b005      	add	sp, #20
 8002920:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002924:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8002928:	493c      	ldr	r1, [pc, #240]	; (8002a1c <_printf_i+0x23c>)
 800292a:	6822      	ldr	r2, [r4, #0]
 800292c:	6818      	ldr	r0, [r3, #0]
 800292e:	f012 0f80 	tst.w	r2, #128	; 0x80
 8002932:	f100 0504 	add.w	r5, r0, #4
 8002936:	601d      	str	r5, [r3, #0]
 8002938:	d001      	beq.n	800293e <_printf_i+0x15e>
 800293a:	6803      	ldr	r3, [r0, #0]
 800293c:	e002      	b.n	8002944 <_printf_i+0x164>
 800293e:	0655      	lsls	r5, r2, #25
 8002940:	d5fb      	bpl.n	800293a <_printf_i+0x15a>
 8002942:	8803      	ldrh	r3, [r0, #0]
 8002944:	07d0      	lsls	r0, r2, #31
 8002946:	bf44      	itt	mi
 8002948:	f042 0220 	orrmi.w	r2, r2, #32
 800294c:	6022      	strmi	r2, [r4, #0]
 800294e:	b91b      	cbnz	r3, 8002958 <_printf_i+0x178>
 8002950:	6822      	ldr	r2, [r4, #0]
 8002952:	f022 0220 	bic.w	r2, r2, #32
 8002956:	6022      	str	r2, [r4, #0]
 8002958:	2210      	movs	r2, #16
 800295a:	e7b1      	b.n	80028c0 <_printf_i+0xe0>
 800295c:	4675      	mov	r5, lr
 800295e:	fbb3 f0f2 	udiv	r0, r3, r2
 8002962:	fb02 3310 	mls	r3, r2, r0, r3
 8002966:	5ccb      	ldrb	r3, [r1, r3]
 8002968:	f805 3d01 	strb.w	r3, [r5, #-1]!
 800296c:	4603      	mov	r3, r0
 800296e:	2800      	cmp	r0, #0
 8002970:	d1f5      	bne.n	800295e <_printf_i+0x17e>
 8002972:	e7b7      	b.n	80028e4 <_printf_i+0x104>
 8002974:	6808      	ldr	r0, [r1, #0]
 8002976:	681a      	ldr	r2, [r3, #0]
 8002978:	6949      	ldr	r1, [r1, #20]
 800297a:	f010 0f80 	tst.w	r0, #128	; 0x80
 800297e:	d004      	beq.n	800298a <_printf_i+0x1aa>
 8002980:	1d10      	adds	r0, r2, #4
 8002982:	6018      	str	r0, [r3, #0]
 8002984:	6813      	ldr	r3, [r2, #0]
 8002986:	6019      	str	r1, [r3, #0]
 8002988:	e007      	b.n	800299a <_printf_i+0x1ba>
 800298a:	f010 0f40 	tst.w	r0, #64	; 0x40
 800298e:	f102 0004 	add.w	r0, r2, #4
 8002992:	6018      	str	r0, [r3, #0]
 8002994:	6813      	ldr	r3, [r2, #0]
 8002996:	d0f6      	beq.n	8002986 <_printf_i+0x1a6>
 8002998:	8019      	strh	r1, [r3, #0]
 800299a:	2300      	movs	r3, #0
 800299c:	6123      	str	r3, [r4, #16]
 800299e:	4675      	mov	r5, lr
 80029a0:	e7b1      	b.n	8002906 <_printf_i+0x126>
 80029a2:	681a      	ldr	r2, [r3, #0]
 80029a4:	1d11      	adds	r1, r2, #4
 80029a6:	6019      	str	r1, [r3, #0]
 80029a8:	6815      	ldr	r5, [r2, #0]
 80029aa:	6862      	ldr	r2, [r4, #4]
 80029ac:	2100      	movs	r1, #0
 80029ae:	4628      	mov	r0, r5
 80029b0:	f7fd fc26 	bl	8000200 <memchr>
 80029b4:	b108      	cbz	r0, 80029ba <_printf_i+0x1da>
 80029b6:	1b40      	subs	r0, r0, r5
 80029b8:	6060      	str	r0, [r4, #4]
 80029ba:	6863      	ldr	r3, [r4, #4]
 80029bc:	6123      	str	r3, [r4, #16]
 80029be:	2300      	movs	r3, #0
 80029c0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80029c4:	e79f      	b.n	8002906 <_printf_i+0x126>
 80029c6:	6923      	ldr	r3, [r4, #16]
 80029c8:	462a      	mov	r2, r5
 80029ca:	4639      	mov	r1, r7
 80029cc:	4630      	mov	r0, r6
 80029ce:	47c0      	blx	r8
 80029d0:	3001      	adds	r0, #1
 80029d2:	d0a2      	beq.n	800291a <_printf_i+0x13a>
 80029d4:	6823      	ldr	r3, [r4, #0]
 80029d6:	079b      	lsls	r3, r3, #30
 80029d8:	d507      	bpl.n	80029ea <_printf_i+0x20a>
 80029da:	2500      	movs	r5, #0
 80029dc:	f104 0919 	add.w	r9, r4, #25
 80029e0:	68e3      	ldr	r3, [r4, #12]
 80029e2:	9a03      	ldr	r2, [sp, #12]
 80029e4:	1a9b      	subs	r3, r3, r2
 80029e6:	429d      	cmp	r5, r3
 80029e8:	db05      	blt.n	80029f6 <_printf_i+0x216>
 80029ea:	68e0      	ldr	r0, [r4, #12]
 80029ec:	9b03      	ldr	r3, [sp, #12]
 80029ee:	4298      	cmp	r0, r3
 80029f0:	bfb8      	it	lt
 80029f2:	4618      	movlt	r0, r3
 80029f4:	e793      	b.n	800291e <_printf_i+0x13e>
 80029f6:	2301      	movs	r3, #1
 80029f8:	464a      	mov	r2, r9
 80029fa:	4639      	mov	r1, r7
 80029fc:	4630      	mov	r0, r6
 80029fe:	47c0      	blx	r8
 8002a00:	3001      	adds	r0, #1
 8002a02:	d08a      	beq.n	800291a <_printf_i+0x13a>
 8002a04:	3501      	adds	r5, #1
 8002a06:	e7eb      	b.n	80029e0 <_printf_i+0x200>
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	d1a7      	bne.n	800295c <_printf_i+0x17c>
 8002a0c:	780b      	ldrb	r3, [r1, #0]
 8002a0e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002a12:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002a16:	e765      	b.n	80028e4 <_printf_i+0x104>
 8002a18:	08004847 	.word	0x08004847
 8002a1c:	08004836 	.word	0x08004836

08002a20 <iprintf>:
 8002a20:	b40f      	push	{r0, r1, r2, r3}
 8002a22:	4b0a      	ldr	r3, [pc, #40]	; (8002a4c <iprintf+0x2c>)
 8002a24:	b513      	push	{r0, r1, r4, lr}
 8002a26:	681c      	ldr	r4, [r3, #0]
 8002a28:	b124      	cbz	r4, 8002a34 <iprintf+0x14>
 8002a2a:	69a3      	ldr	r3, [r4, #24]
 8002a2c:	b913      	cbnz	r3, 8002a34 <iprintf+0x14>
 8002a2e:	4620      	mov	r0, r4
 8002a30:	f000 fea8 	bl	8003784 <__sinit>
 8002a34:	ab05      	add	r3, sp, #20
 8002a36:	9a04      	ldr	r2, [sp, #16]
 8002a38:	68a1      	ldr	r1, [r4, #8]
 8002a3a:	9301      	str	r3, [sp, #4]
 8002a3c:	4620      	mov	r0, r4
 8002a3e:	f001 fb01 	bl	8004044 <_vfiprintf_r>
 8002a42:	b002      	add	sp, #8
 8002a44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002a48:	b004      	add	sp, #16
 8002a4a:	4770      	bx	lr
 8002a4c:	2000000c 	.word	0x2000000c

08002a50 <quorem>:
 8002a50:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a54:	6903      	ldr	r3, [r0, #16]
 8002a56:	690c      	ldr	r4, [r1, #16]
 8002a58:	429c      	cmp	r4, r3
 8002a5a:	4680      	mov	r8, r0
 8002a5c:	f300 8082 	bgt.w	8002b64 <quorem+0x114>
 8002a60:	3c01      	subs	r4, #1
 8002a62:	f101 0714 	add.w	r7, r1, #20
 8002a66:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 8002a6a:	f100 0614 	add.w	r6, r0, #20
 8002a6e:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8002a72:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8002a76:	eb06 030e 	add.w	r3, r6, lr
 8002a7a:	3501      	adds	r5, #1
 8002a7c:	eb07 090e 	add.w	r9, r7, lr
 8002a80:	9301      	str	r3, [sp, #4]
 8002a82:	fbb0 f5f5 	udiv	r5, r0, r5
 8002a86:	b395      	cbz	r5, 8002aee <quorem+0x9e>
 8002a88:	f04f 0a00 	mov.w	sl, #0
 8002a8c:	4638      	mov	r0, r7
 8002a8e:	46b4      	mov	ip, r6
 8002a90:	46d3      	mov	fp, sl
 8002a92:	f850 2b04 	ldr.w	r2, [r0], #4
 8002a96:	b293      	uxth	r3, r2
 8002a98:	fb05 a303 	mla	r3, r5, r3, sl
 8002a9c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002aa0:	b29b      	uxth	r3, r3
 8002aa2:	ebab 0303 	sub.w	r3, fp, r3
 8002aa6:	0c12      	lsrs	r2, r2, #16
 8002aa8:	f8bc b000 	ldrh.w	fp, [ip]
 8002aac:	fb05 a202 	mla	r2, r5, r2, sl
 8002ab0:	fa13 f38b 	uxtah	r3, r3, fp
 8002ab4:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8002ab8:	fa1f fb82 	uxth.w	fp, r2
 8002abc:	f8dc 2000 	ldr.w	r2, [ip]
 8002ac0:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 8002ac4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002ac8:	b29b      	uxth	r3, r3
 8002aca:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002ace:	4581      	cmp	r9, r0
 8002ad0:	ea4f 4b22 	mov.w	fp, r2, asr #16
 8002ad4:	f84c 3b04 	str.w	r3, [ip], #4
 8002ad8:	d2db      	bcs.n	8002a92 <quorem+0x42>
 8002ada:	f856 300e 	ldr.w	r3, [r6, lr]
 8002ade:	b933      	cbnz	r3, 8002aee <quorem+0x9e>
 8002ae0:	9b01      	ldr	r3, [sp, #4]
 8002ae2:	3b04      	subs	r3, #4
 8002ae4:	429e      	cmp	r6, r3
 8002ae6:	461a      	mov	r2, r3
 8002ae8:	d330      	bcc.n	8002b4c <quorem+0xfc>
 8002aea:	f8c8 4010 	str.w	r4, [r8, #16]
 8002aee:	4640      	mov	r0, r8
 8002af0:	f001 f8fd 	bl	8003cee <__mcmp>
 8002af4:	2800      	cmp	r0, #0
 8002af6:	db25      	blt.n	8002b44 <quorem+0xf4>
 8002af8:	3501      	adds	r5, #1
 8002afa:	4630      	mov	r0, r6
 8002afc:	f04f 0e00 	mov.w	lr, #0
 8002b00:	f857 2b04 	ldr.w	r2, [r7], #4
 8002b04:	f8d0 c000 	ldr.w	ip, [r0]
 8002b08:	b293      	uxth	r3, r2
 8002b0a:	ebae 0303 	sub.w	r3, lr, r3
 8002b0e:	0c12      	lsrs	r2, r2, #16
 8002b10:	fa13 f38c 	uxtah	r3, r3, ip
 8002b14:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8002b18:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002b1c:	b29b      	uxth	r3, r3
 8002b1e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002b22:	45b9      	cmp	r9, r7
 8002b24:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8002b28:	f840 3b04 	str.w	r3, [r0], #4
 8002b2c:	d2e8      	bcs.n	8002b00 <quorem+0xb0>
 8002b2e:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8002b32:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8002b36:	b92a      	cbnz	r2, 8002b44 <quorem+0xf4>
 8002b38:	3b04      	subs	r3, #4
 8002b3a:	429e      	cmp	r6, r3
 8002b3c:	461a      	mov	r2, r3
 8002b3e:	d30b      	bcc.n	8002b58 <quorem+0x108>
 8002b40:	f8c8 4010 	str.w	r4, [r8, #16]
 8002b44:	4628      	mov	r0, r5
 8002b46:	b003      	add	sp, #12
 8002b48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002b4c:	6812      	ldr	r2, [r2, #0]
 8002b4e:	3b04      	subs	r3, #4
 8002b50:	2a00      	cmp	r2, #0
 8002b52:	d1ca      	bne.n	8002aea <quorem+0x9a>
 8002b54:	3c01      	subs	r4, #1
 8002b56:	e7c5      	b.n	8002ae4 <quorem+0x94>
 8002b58:	6812      	ldr	r2, [r2, #0]
 8002b5a:	3b04      	subs	r3, #4
 8002b5c:	2a00      	cmp	r2, #0
 8002b5e:	d1ef      	bne.n	8002b40 <quorem+0xf0>
 8002b60:	3c01      	subs	r4, #1
 8002b62:	e7ea      	b.n	8002b3a <quorem+0xea>
 8002b64:	2000      	movs	r0, #0
 8002b66:	e7ee      	b.n	8002b46 <quorem+0xf6>

08002b68 <_dtoa_r>:
 8002b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b6c:	ec57 6b10 	vmov	r6, r7, d0
 8002b70:	b097      	sub	sp, #92	; 0x5c
 8002b72:	e9cd 6700 	strd	r6, r7, [sp]
 8002b76:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8002b78:	9107      	str	r1, [sp, #28]
 8002b7a:	4604      	mov	r4, r0
 8002b7c:	920a      	str	r2, [sp, #40]	; 0x28
 8002b7e:	930f      	str	r3, [sp, #60]	; 0x3c
 8002b80:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8002b82:	b93e      	cbnz	r6, 8002b94 <_dtoa_r+0x2c>
 8002b84:	2010      	movs	r0, #16
 8002b86:	f000 fe95 	bl	80038b4 <malloc>
 8002b8a:	6260      	str	r0, [r4, #36]	; 0x24
 8002b8c:	6046      	str	r6, [r0, #4]
 8002b8e:	6086      	str	r6, [r0, #8]
 8002b90:	6006      	str	r6, [r0, #0]
 8002b92:	60c6      	str	r6, [r0, #12]
 8002b94:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002b96:	6819      	ldr	r1, [r3, #0]
 8002b98:	b151      	cbz	r1, 8002bb0 <_dtoa_r+0x48>
 8002b9a:	685a      	ldr	r2, [r3, #4]
 8002b9c:	604a      	str	r2, [r1, #4]
 8002b9e:	2301      	movs	r3, #1
 8002ba0:	4093      	lsls	r3, r2
 8002ba2:	608b      	str	r3, [r1, #8]
 8002ba4:	4620      	mov	r0, r4
 8002ba6:	f000 fecc 	bl	8003942 <_Bfree>
 8002baa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002bac:	2200      	movs	r2, #0
 8002bae:	601a      	str	r2, [r3, #0]
 8002bb0:	9b01      	ldr	r3, [sp, #4]
 8002bb2:	2b00      	cmp	r3, #0
 8002bb4:	bfbf      	itttt	lt
 8002bb6:	2301      	movlt	r3, #1
 8002bb8:	602b      	strlt	r3, [r5, #0]
 8002bba:	9b01      	ldrlt	r3, [sp, #4]
 8002bbc:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002bc0:	bfb2      	itee	lt
 8002bc2:	9301      	strlt	r3, [sp, #4]
 8002bc4:	2300      	movge	r3, #0
 8002bc6:	602b      	strge	r3, [r5, #0]
 8002bc8:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8002bcc:	4ba8      	ldr	r3, [pc, #672]	; (8002e70 <_dtoa_r+0x308>)
 8002bce:	ea33 0308 	bics.w	r3, r3, r8
 8002bd2:	d11b      	bne.n	8002c0c <_dtoa_r+0xa4>
 8002bd4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8002bd6:	f242 730f 	movw	r3, #9999	; 0x270f
 8002bda:	6013      	str	r3, [r2, #0]
 8002bdc:	9b00      	ldr	r3, [sp, #0]
 8002bde:	b923      	cbnz	r3, 8002bea <_dtoa_r+0x82>
 8002be0:	f3c8 0013 	ubfx	r0, r8, #0, #20
 8002be4:	2800      	cmp	r0, #0
 8002be6:	f000 8578 	beq.w	80036da <_dtoa_r+0xb72>
 8002bea:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002bec:	b953      	cbnz	r3, 8002c04 <_dtoa_r+0x9c>
 8002bee:	4ba1      	ldr	r3, [pc, #644]	; (8002e74 <_dtoa_r+0x30c>)
 8002bf0:	e021      	b.n	8002c36 <_dtoa_r+0xce>
 8002bf2:	4ba1      	ldr	r3, [pc, #644]	; (8002e78 <_dtoa_r+0x310>)
 8002bf4:	9302      	str	r3, [sp, #8]
 8002bf6:	3308      	adds	r3, #8
 8002bf8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002bfa:	6013      	str	r3, [r2, #0]
 8002bfc:	9802      	ldr	r0, [sp, #8]
 8002bfe:	b017      	add	sp, #92	; 0x5c
 8002c00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c04:	4b9b      	ldr	r3, [pc, #620]	; (8002e74 <_dtoa_r+0x30c>)
 8002c06:	9302      	str	r3, [sp, #8]
 8002c08:	3303      	adds	r3, #3
 8002c0a:	e7f5      	b.n	8002bf8 <_dtoa_r+0x90>
 8002c0c:	e9dd 6700 	ldrd	r6, r7, [sp]
 8002c10:	2200      	movs	r2, #0
 8002c12:	2300      	movs	r3, #0
 8002c14:	4630      	mov	r0, r6
 8002c16:	4639      	mov	r1, r7
 8002c18:	f7fd ff62 	bl	8000ae0 <__aeabi_dcmpeq>
 8002c1c:	4681      	mov	r9, r0
 8002c1e:	b160      	cbz	r0, 8002c3a <_dtoa_r+0xd2>
 8002c20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8002c22:	2301      	movs	r3, #1
 8002c24:	6013      	str	r3, [r2, #0]
 8002c26:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002c28:	2b00      	cmp	r3, #0
 8002c2a:	f000 8553 	beq.w	80036d4 <_dtoa_r+0xb6c>
 8002c2e:	4b93      	ldr	r3, [pc, #588]	; (8002e7c <_dtoa_r+0x314>)
 8002c30:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002c32:	6013      	str	r3, [r2, #0]
 8002c34:	3b01      	subs	r3, #1
 8002c36:	9302      	str	r3, [sp, #8]
 8002c38:	e7e0      	b.n	8002bfc <_dtoa_r+0x94>
 8002c3a:	aa14      	add	r2, sp, #80	; 0x50
 8002c3c:	a915      	add	r1, sp, #84	; 0x54
 8002c3e:	ec47 6b10 	vmov	d0, r6, r7
 8002c42:	4620      	mov	r0, r4
 8002c44:	f001 f8cb 	bl	8003dde <__d2b>
 8002c48:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8002c4c:	4682      	mov	sl, r0
 8002c4e:	2d00      	cmp	r5, #0
 8002c50:	d07e      	beq.n	8002d50 <_dtoa_r+0x1e8>
 8002c52:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8002c56:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8002c5a:	4630      	mov	r0, r6
 8002c5c:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8002c60:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8002c64:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
 8002c68:	2200      	movs	r2, #0
 8002c6a:	4b85      	ldr	r3, [pc, #532]	; (8002e80 <_dtoa_r+0x318>)
 8002c6c:	f7fd fb1c 	bl	80002a8 <__aeabi_dsub>
 8002c70:	a379      	add	r3, pc, #484	; (adr r3, 8002e58 <_dtoa_r+0x2f0>)
 8002c72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c76:	f7fd fccb 	bl	8000610 <__aeabi_dmul>
 8002c7a:	a379      	add	r3, pc, #484	; (adr r3, 8002e60 <_dtoa_r+0x2f8>)
 8002c7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c80:	f7fd fb14 	bl	80002ac <__adddf3>
 8002c84:	4606      	mov	r6, r0
 8002c86:	4628      	mov	r0, r5
 8002c88:	460f      	mov	r7, r1
 8002c8a:	f7fd fc5b 	bl	8000544 <__aeabi_i2d>
 8002c8e:	a376      	add	r3, pc, #472	; (adr r3, 8002e68 <_dtoa_r+0x300>)
 8002c90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c94:	f7fd fcbc 	bl	8000610 <__aeabi_dmul>
 8002c98:	4602      	mov	r2, r0
 8002c9a:	460b      	mov	r3, r1
 8002c9c:	4630      	mov	r0, r6
 8002c9e:	4639      	mov	r1, r7
 8002ca0:	f7fd fb04 	bl	80002ac <__adddf3>
 8002ca4:	4606      	mov	r6, r0
 8002ca6:	460f      	mov	r7, r1
 8002ca8:	f7fd ff62 	bl	8000b70 <__aeabi_d2iz>
 8002cac:	2200      	movs	r2, #0
 8002cae:	4683      	mov	fp, r0
 8002cb0:	2300      	movs	r3, #0
 8002cb2:	4630      	mov	r0, r6
 8002cb4:	4639      	mov	r1, r7
 8002cb6:	f7fd ff1d 	bl	8000af4 <__aeabi_dcmplt>
 8002cba:	b158      	cbz	r0, 8002cd4 <_dtoa_r+0x16c>
 8002cbc:	4658      	mov	r0, fp
 8002cbe:	f7fd fc41 	bl	8000544 <__aeabi_i2d>
 8002cc2:	4602      	mov	r2, r0
 8002cc4:	460b      	mov	r3, r1
 8002cc6:	4630      	mov	r0, r6
 8002cc8:	4639      	mov	r1, r7
 8002cca:	f7fd ff09 	bl	8000ae0 <__aeabi_dcmpeq>
 8002cce:	b908      	cbnz	r0, 8002cd4 <_dtoa_r+0x16c>
 8002cd0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002cd4:	f1bb 0f16 	cmp.w	fp, #22
 8002cd8:	d859      	bhi.n	8002d8e <_dtoa_r+0x226>
 8002cda:	496a      	ldr	r1, [pc, #424]	; (8002e84 <_dtoa_r+0x31c>)
 8002cdc:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 8002ce0:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002ce4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002ce8:	f7fd ff22 	bl	8000b30 <__aeabi_dcmpgt>
 8002cec:	2800      	cmp	r0, #0
 8002cee:	d050      	beq.n	8002d92 <_dtoa_r+0x22a>
 8002cf0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002cf4:	2300      	movs	r3, #0
 8002cf6:	930e      	str	r3, [sp, #56]	; 0x38
 8002cf8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8002cfa:	1b5d      	subs	r5, r3, r5
 8002cfc:	1e6b      	subs	r3, r5, #1
 8002cfe:	9306      	str	r3, [sp, #24]
 8002d00:	bf45      	ittet	mi
 8002d02:	f1c5 0301 	rsbmi	r3, r5, #1
 8002d06:	9305      	strmi	r3, [sp, #20]
 8002d08:	2300      	movpl	r3, #0
 8002d0a:	2300      	movmi	r3, #0
 8002d0c:	bf4c      	ite	mi
 8002d0e:	9306      	strmi	r3, [sp, #24]
 8002d10:	9305      	strpl	r3, [sp, #20]
 8002d12:	f1bb 0f00 	cmp.w	fp, #0
 8002d16:	db3e      	blt.n	8002d96 <_dtoa_r+0x22e>
 8002d18:	9b06      	ldr	r3, [sp, #24]
 8002d1a:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 8002d1e:	445b      	add	r3, fp
 8002d20:	9306      	str	r3, [sp, #24]
 8002d22:	2300      	movs	r3, #0
 8002d24:	9308      	str	r3, [sp, #32]
 8002d26:	9b07      	ldr	r3, [sp, #28]
 8002d28:	2b09      	cmp	r3, #9
 8002d2a:	f200 80af 	bhi.w	8002e8c <_dtoa_r+0x324>
 8002d2e:	2b05      	cmp	r3, #5
 8002d30:	bfc4      	itt	gt
 8002d32:	3b04      	subgt	r3, #4
 8002d34:	9307      	strgt	r3, [sp, #28]
 8002d36:	9b07      	ldr	r3, [sp, #28]
 8002d38:	f1a3 0302 	sub.w	r3, r3, #2
 8002d3c:	bfcc      	ite	gt
 8002d3e:	2600      	movgt	r6, #0
 8002d40:	2601      	movle	r6, #1
 8002d42:	2b03      	cmp	r3, #3
 8002d44:	f200 80ae 	bhi.w	8002ea4 <_dtoa_r+0x33c>
 8002d48:	e8df f003 	tbb	[pc, r3]
 8002d4c:	772f8482 	.word	0x772f8482
 8002d50:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002d52:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8002d54:	441d      	add	r5, r3
 8002d56:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8002d5a:	2b20      	cmp	r3, #32
 8002d5c:	dd11      	ble.n	8002d82 <_dtoa_r+0x21a>
 8002d5e:	9a00      	ldr	r2, [sp, #0]
 8002d60:	f205 4012 	addw	r0, r5, #1042	; 0x412
 8002d64:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8002d68:	fa22 f000 	lsr.w	r0, r2, r0
 8002d6c:	fa08 f303 	lsl.w	r3, r8, r3
 8002d70:	4318      	orrs	r0, r3
 8002d72:	f7fd fbd7 	bl	8000524 <__aeabi_ui2d>
 8002d76:	2301      	movs	r3, #1
 8002d78:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8002d7c:	3d01      	subs	r5, #1
 8002d7e:	9312      	str	r3, [sp, #72]	; 0x48
 8002d80:	e772      	b.n	8002c68 <_dtoa_r+0x100>
 8002d82:	f1c3 0020 	rsb	r0, r3, #32
 8002d86:	9b00      	ldr	r3, [sp, #0]
 8002d88:	fa03 f000 	lsl.w	r0, r3, r0
 8002d8c:	e7f1      	b.n	8002d72 <_dtoa_r+0x20a>
 8002d8e:	2301      	movs	r3, #1
 8002d90:	e7b1      	b.n	8002cf6 <_dtoa_r+0x18e>
 8002d92:	900e      	str	r0, [sp, #56]	; 0x38
 8002d94:	e7b0      	b.n	8002cf8 <_dtoa_r+0x190>
 8002d96:	9b05      	ldr	r3, [sp, #20]
 8002d98:	eba3 030b 	sub.w	r3, r3, fp
 8002d9c:	9305      	str	r3, [sp, #20]
 8002d9e:	f1cb 0300 	rsb	r3, fp, #0
 8002da2:	9308      	str	r3, [sp, #32]
 8002da4:	2300      	movs	r3, #0
 8002da6:	930b      	str	r3, [sp, #44]	; 0x2c
 8002da8:	e7bd      	b.n	8002d26 <_dtoa_r+0x1be>
 8002daa:	2301      	movs	r3, #1
 8002dac:	9309      	str	r3, [sp, #36]	; 0x24
 8002dae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002db0:	2b00      	cmp	r3, #0
 8002db2:	dd7a      	ble.n	8002eaa <_dtoa_r+0x342>
 8002db4:	9304      	str	r3, [sp, #16]
 8002db6:	9303      	str	r3, [sp, #12]
 8002db8:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8002dba:	2200      	movs	r2, #0
 8002dbc:	606a      	str	r2, [r5, #4]
 8002dbe:	2104      	movs	r1, #4
 8002dc0:	f101 0214 	add.w	r2, r1, #20
 8002dc4:	429a      	cmp	r2, r3
 8002dc6:	d975      	bls.n	8002eb4 <_dtoa_r+0x34c>
 8002dc8:	6869      	ldr	r1, [r5, #4]
 8002dca:	4620      	mov	r0, r4
 8002dcc:	f000 fd85 	bl	80038da <_Balloc>
 8002dd0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002dd2:	6028      	str	r0, [r5, #0]
 8002dd4:	681b      	ldr	r3, [r3, #0]
 8002dd6:	9302      	str	r3, [sp, #8]
 8002dd8:	9b03      	ldr	r3, [sp, #12]
 8002dda:	2b0e      	cmp	r3, #14
 8002ddc:	f200 80e5 	bhi.w	8002faa <_dtoa_r+0x442>
 8002de0:	2e00      	cmp	r6, #0
 8002de2:	f000 80e2 	beq.w	8002faa <_dtoa_r+0x442>
 8002de6:	ed9d 7b00 	vldr	d7, [sp]
 8002dea:	f1bb 0f00 	cmp.w	fp, #0
 8002dee:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 8002df2:	dd74      	ble.n	8002ede <_dtoa_r+0x376>
 8002df4:	4a23      	ldr	r2, [pc, #140]	; (8002e84 <_dtoa_r+0x31c>)
 8002df6:	f00b 030f 	and.w	r3, fp, #15
 8002dfa:	ea4f 162b 	mov.w	r6, fp, asr #4
 8002dfe:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002e02:	06f0      	lsls	r0, r6, #27
 8002e04:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002e08:	d559      	bpl.n	8002ebe <_dtoa_r+0x356>
 8002e0a:	4b1f      	ldr	r3, [pc, #124]	; (8002e88 <_dtoa_r+0x320>)
 8002e0c:	ec51 0b17 	vmov	r0, r1, d7
 8002e10:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002e14:	f7fd fd26 	bl	8000864 <__aeabi_ddiv>
 8002e18:	e9cd 0100 	strd	r0, r1, [sp]
 8002e1c:	f006 060f 	and.w	r6, r6, #15
 8002e20:	2503      	movs	r5, #3
 8002e22:	4f19      	ldr	r7, [pc, #100]	; (8002e88 <_dtoa_r+0x320>)
 8002e24:	2e00      	cmp	r6, #0
 8002e26:	d14c      	bne.n	8002ec2 <_dtoa_r+0x35a>
 8002e28:	4642      	mov	r2, r8
 8002e2a:	464b      	mov	r3, r9
 8002e2c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002e30:	f7fd fd18 	bl	8000864 <__aeabi_ddiv>
 8002e34:	e9cd 0100 	strd	r0, r1, [sp]
 8002e38:	e06a      	b.n	8002f10 <_dtoa_r+0x3a8>
 8002e3a:	2301      	movs	r3, #1
 8002e3c:	9309      	str	r3, [sp, #36]	; 0x24
 8002e3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002e40:	445b      	add	r3, fp
 8002e42:	9304      	str	r3, [sp, #16]
 8002e44:	3301      	adds	r3, #1
 8002e46:	2b01      	cmp	r3, #1
 8002e48:	9303      	str	r3, [sp, #12]
 8002e4a:	bfb8      	it	lt
 8002e4c:	2301      	movlt	r3, #1
 8002e4e:	e7b3      	b.n	8002db8 <_dtoa_r+0x250>
 8002e50:	2300      	movs	r3, #0
 8002e52:	e7ab      	b.n	8002dac <_dtoa_r+0x244>
 8002e54:	2300      	movs	r3, #0
 8002e56:	e7f1      	b.n	8002e3c <_dtoa_r+0x2d4>
 8002e58:	636f4361 	.word	0x636f4361
 8002e5c:	3fd287a7 	.word	0x3fd287a7
 8002e60:	8b60c8b3 	.word	0x8b60c8b3
 8002e64:	3fc68a28 	.word	0x3fc68a28
 8002e68:	509f79fb 	.word	0x509f79fb
 8002e6c:	3fd34413 	.word	0x3fd34413
 8002e70:	7ff00000 	.word	0x7ff00000
 8002e74:	08004861 	.word	0x08004861
 8002e78:	08004858 	.word	0x08004858
 8002e7c:	08004835 	.word	0x08004835
 8002e80:	3ff80000 	.word	0x3ff80000
 8002e84:	080048f0 	.word	0x080048f0
 8002e88:	080048c8 	.word	0x080048c8
 8002e8c:	2601      	movs	r6, #1
 8002e8e:	2300      	movs	r3, #0
 8002e90:	9307      	str	r3, [sp, #28]
 8002e92:	9609      	str	r6, [sp, #36]	; 0x24
 8002e94:	f04f 33ff 	mov.w	r3, #4294967295
 8002e98:	9304      	str	r3, [sp, #16]
 8002e9a:	9303      	str	r3, [sp, #12]
 8002e9c:	2200      	movs	r2, #0
 8002e9e:	2312      	movs	r3, #18
 8002ea0:	920a      	str	r2, [sp, #40]	; 0x28
 8002ea2:	e789      	b.n	8002db8 <_dtoa_r+0x250>
 8002ea4:	2301      	movs	r3, #1
 8002ea6:	9309      	str	r3, [sp, #36]	; 0x24
 8002ea8:	e7f4      	b.n	8002e94 <_dtoa_r+0x32c>
 8002eaa:	2301      	movs	r3, #1
 8002eac:	9304      	str	r3, [sp, #16]
 8002eae:	9303      	str	r3, [sp, #12]
 8002eb0:	461a      	mov	r2, r3
 8002eb2:	e7f5      	b.n	8002ea0 <_dtoa_r+0x338>
 8002eb4:	686a      	ldr	r2, [r5, #4]
 8002eb6:	3201      	adds	r2, #1
 8002eb8:	606a      	str	r2, [r5, #4]
 8002eba:	0049      	lsls	r1, r1, #1
 8002ebc:	e780      	b.n	8002dc0 <_dtoa_r+0x258>
 8002ebe:	2502      	movs	r5, #2
 8002ec0:	e7af      	b.n	8002e22 <_dtoa_r+0x2ba>
 8002ec2:	07f1      	lsls	r1, r6, #31
 8002ec4:	d508      	bpl.n	8002ed8 <_dtoa_r+0x370>
 8002ec6:	4640      	mov	r0, r8
 8002ec8:	4649      	mov	r1, r9
 8002eca:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002ece:	f7fd fb9f 	bl	8000610 <__aeabi_dmul>
 8002ed2:	3501      	adds	r5, #1
 8002ed4:	4680      	mov	r8, r0
 8002ed6:	4689      	mov	r9, r1
 8002ed8:	1076      	asrs	r6, r6, #1
 8002eda:	3708      	adds	r7, #8
 8002edc:	e7a2      	b.n	8002e24 <_dtoa_r+0x2bc>
 8002ede:	f000 809d 	beq.w	800301c <_dtoa_r+0x4b4>
 8002ee2:	f1cb 0600 	rsb	r6, fp, #0
 8002ee6:	4b9f      	ldr	r3, [pc, #636]	; (8003164 <_dtoa_r+0x5fc>)
 8002ee8:	4f9f      	ldr	r7, [pc, #636]	; (8003168 <_dtoa_r+0x600>)
 8002eea:	f006 020f 	and.w	r2, r6, #15
 8002eee:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002ef2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ef6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002efa:	f7fd fb89 	bl	8000610 <__aeabi_dmul>
 8002efe:	e9cd 0100 	strd	r0, r1, [sp]
 8002f02:	1136      	asrs	r6, r6, #4
 8002f04:	2300      	movs	r3, #0
 8002f06:	2502      	movs	r5, #2
 8002f08:	2e00      	cmp	r6, #0
 8002f0a:	d17c      	bne.n	8003006 <_dtoa_r+0x49e>
 8002f0c:	2b00      	cmp	r3, #0
 8002f0e:	d191      	bne.n	8002e34 <_dtoa_r+0x2cc>
 8002f10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002f12:	2b00      	cmp	r3, #0
 8002f14:	f000 8084 	beq.w	8003020 <_dtoa_r+0x4b8>
 8002f18:	e9dd 8900 	ldrd	r8, r9, [sp]
 8002f1c:	2200      	movs	r2, #0
 8002f1e:	4b93      	ldr	r3, [pc, #588]	; (800316c <_dtoa_r+0x604>)
 8002f20:	4640      	mov	r0, r8
 8002f22:	4649      	mov	r1, r9
 8002f24:	f7fd fde6 	bl	8000af4 <__aeabi_dcmplt>
 8002f28:	2800      	cmp	r0, #0
 8002f2a:	d079      	beq.n	8003020 <_dtoa_r+0x4b8>
 8002f2c:	9b03      	ldr	r3, [sp, #12]
 8002f2e:	2b00      	cmp	r3, #0
 8002f30:	d076      	beq.n	8003020 <_dtoa_r+0x4b8>
 8002f32:	9b04      	ldr	r3, [sp, #16]
 8002f34:	2b00      	cmp	r3, #0
 8002f36:	dd34      	ble.n	8002fa2 <_dtoa_r+0x43a>
 8002f38:	2200      	movs	r2, #0
 8002f3a:	4b8d      	ldr	r3, [pc, #564]	; (8003170 <_dtoa_r+0x608>)
 8002f3c:	4640      	mov	r0, r8
 8002f3e:	4649      	mov	r1, r9
 8002f40:	f7fd fb66 	bl	8000610 <__aeabi_dmul>
 8002f44:	e9cd 0100 	strd	r0, r1, [sp]
 8002f48:	9e04      	ldr	r6, [sp, #16]
 8002f4a:	f10b 37ff 	add.w	r7, fp, #4294967295
 8002f4e:	3501      	adds	r5, #1
 8002f50:	4628      	mov	r0, r5
 8002f52:	f7fd faf7 	bl	8000544 <__aeabi_i2d>
 8002f56:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002f5a:	f7fd fb59 	bl	8000610 <__aeabi_dmul>
 8002f5e:	2200      	movs	r2, #0
 8002f60:	4b84      	ldr	r3, [pc, #528]	; (8003174 <_dtoa_r+0x60c>)
 8002f62:	f7fd f9a3 	bl	80002ac <__adddf3>
 8002f66:	4680      	mov	r8, r0
 8002f68:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 8002f6c:	2e00      	cmp	r6, #0
 8002f6e:	d15a      	bne.n	8003026 <_dtoa_r+0x4be>
 8002f70:	2200      	movs	r2, #0
 8002f72:	4b81      	ldr	r3, [pc, #516]	; (8003178 <_dtoa_r+0x610>)
 8002f74:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002f78:	f7fd f996 	bl	80002a8 <__aeabi_dsub>
 8002f7c:	4642      	mov	r2, r8
 8002f7e:	464b      	mov	r3, r9
 8002f80:	e9cd 0100 	strd	r0, r1, [sp]
 8002f84:	f7fd fdd4 	bl	8000b30 <__aeabi_dcmpgt>
 8002f88:	2800      	cmp	r0, #0
 8002f8a:	f040 829b 	bne.w	80034c4 <_dtoa_r+0x95c>
 8002f8e:	4642      	mov	r2, r8
 8002f90:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8002f94:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002f98:	f7fd fdac 	bl	8000af4 <__aeabi_dcmplt>
 8002f9c:	2800      	cmp	r0, #0
 8002f9e:	f040 828f 	bne.w	80034c0 <_dtoa_r+0x958>
 8002fa2:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8002fa6:	e9cd 2300 	strd	r2, r3, [sp]
 8002faa:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002fac:	2b00      	cmp	r3, #0
 8002fae:	f2c0 8150 	blt.w	8003252 <_dtoa_r+0x6ea>
 8002fb2:	f1bb 0f0e 	cmp.w	fp, #14
 8002fb6:	f300 814c 	bgt.w	8003252 <_dtoa_r+0x6ea>
 8002fba:	4b6a      	ldr	r3, [pc, #424]	; (8003164 <_dtoa_r+0x5fc>)
 8002fbc:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002fc0:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002fc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002fc6:	2b00      	cmp	r3, #0
 8002fc8:	f280 80da 	bge.w	8003180 <_dtoa_r+0x618>
 8002fcc:	9b03      	ldr	r3, [sp, #12]
 8002fce:	2b00      	cmp	r3, #0
 8002fd0:	f300 80d6 	bgt.w	8003180 <_dtoa_r+0x618>
 8002fd4:	f040 8273 	bne.w	80034be <_dtoa_r+0x956>
 8002fd8:	2200      	movs	r2, #0
 8002fda:	4b67      	ldr	r3, [pc, #412]	; (8003178 <_dtoa_r+0x610>)
 8002fdc:	4640      	mov	r0, r8
 8002fde:	4649      	mov	r1, r9
 8002fe0:	f7fd fb16 	bl	8000610 <__aeabi_dmul>
 8002fe4:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002fe8:	f7fd fd98 	bl	8000b1c <__aeabi_dcmpge>
 8002fec:	9e03      	ldr	r6, [sp, #12]
 8002fee:	4637      	mov	r7, r6
 8002ff0:	2800      	cmp	r0, #0
 8002ff2:	f040 824a 	bne.w	800348a <_dtoa_r+0x922>
 8002ff6:	9b02      	ldr	r3, [sp, #8]
 8002ff8:	9a02      	ldr	r2, [sp, #8]
 8002ffa:	1c5d      	adds	r5, r3, #1
 8002ffc:	2331      	movs	r3, #49	; 0x31
 8002ffe:	7013      	strb	r3, [r2, #0]
 8003000:	f10b 0b01 	add.w	fp, fp, #1
 8003004:	e245      	b.n	8003492 <_dtoa_r+0x92a>
 8003006:	07f2      	lsls	r2, r6, #31
 8003008:	d505      	bpl.n	8003016 <_dtoa_r+0x4ae>
 800300a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800300e:	f7fd faff 	bl	8000610 <__aeabi_dmul>
 8003012:	3501      	adds	r5, #1
 8003014:	2301      	movs	r3, #1
 8003016:	1076      	asrs	r6, r6, #1
 8003018:	3708      	adds	r7, #8
 800301a:	e775      	b.n	8002f08 <_dtoa_r+0x3a0>
 800301c:	2502      	movs	r5, #2
 800301e:	e777      	b.n	8002f10 <_dtoa_r+0x3a8>
 8003020:	465f      	mov	r7, fp
 8003022:	9e03      	ldr	r6, [sp, #12]
 8003024:	e794      	b.n	8002f50 <_dtoa_r+0x3e8>
 8003026:	9a02      	ldr	r2, [sp, #8]
 8003028:	4b4e      	ldr	r3, [pc, #312]	; (8003164 <_dtoa_r+0x5fc>)
 800302a:	4432      	add	r2, r6
 800302c:	9213      	str	r2, [sp, #76]	; 0x4c
 800302e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003030:	1e71      	subs	r1, r6, #1
 8003032:	2a00      	cmp	r2, #0
 8003034:	d048      	beq.n	80030c8 <_dtoa_r+0x560>
 8003036:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800303a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800303e:	2000      	movs	r0, #0
 8003040:	494e      	ldr	r1, [pc, #312]	; (800317c <_dtoa_r+0x614>)
 8003042:	f7fd fc0f 	bl	8000864 <__aeabi_ddiv>
 8003046:	4642      	mov	r2, r8
 8003048:	464b      	mov	r3, r9
 800304a:	f7fd f92d 	bl	80002a8 <__aeabi_dsub>
 800304e:	9d02      	ldr	r5, [sp, #8]
 8003050:	4680      	mov	r8, r0
 8003052:	4689      	mov	r9, r1
 8003054:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003058:	f7fd fd8a 	bl	8000b70 <__aeabi_d2iz>
 800305c:	4606      	mov	r6, r0
 800305e:	f7fd fa71 	bl	8000544 <__aeabi_i2d>
 8003062:	4602      	mov	r2, r0
 8003064:	460b      	mov	r3, r1
 8003066:	e9dd 0100 	ldrd	r0, r1, [sp]
 800306a:	f7fd f91d 	bl	80002a8 <__aeabi_dsub>
 800306e:	3630      	adds	r6, #48	; 0x30
 8003070:	f805 6b01 	strb.w	r6, [r5], #1
 8003074:	4642      	mov	r2, r8
 8003076:	464b      	mov	r3, r9
 8003078:	e9cd 0100 	strd	r0, r1, [sp]
 800307c:	f7fd fd3a 	bl	8000af4 <__aeabi_dcmplt>
 8003080:	2800      	cmp	r0, #0
 8003082:	d165      	bne.n	8003150 <_dtoa_r+0x5e8>
 8003084:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003088:	2000      	movs	r0, #0
 800308a:	4938      	ldr	r1, [pc, #224]	; (800316c <_dtoa_r+0x604>)
 800308c:	f7fd f90c 	bl	80002a8 <__aeabi_dsub>
 8003090:	4642      	mov	r2, r8
 8003092:	464b      	mov	r3, r9
 8003094:	f7fd fd2e 	bl	8000af4 <__aeabi_dcmplt>
 8003098:	2800      	cmp	r0, #0
 800309a:	f040 80ba 	bne.w	8003212 <_dtoa_r+0x6aa>
 800309e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80030a0:	429d      	cmp	r5, r3
 80030a2:	f43f af7e 	beq.w	8002fa2 <_dtoa_r+0x43a>
 80030a6:	2200      	movs	r2, #0
 80030a8:	4b31      	ldr	r3, [pc, #196]	; (8003170 <_dtoa_r+0x608>)
 80030aa:	4640      	mov	r0, r8
 80030ac:	4649      	mov	r1, r9
 80030ae:	f7fd faaf 	bl	8000610 <__aeabi_dmul>
 80030b2:	2200      	movs	r2, #0
 80030b4:	4680      	mov	r8, r0
 80030b6:	4689      	mov	r9, r1
 80030b8:	4b2d      	ldr	r3, [pc, #180]	; (8003170 <_dtoa_r+0x608>)
 80030ba:	e9dd 0100 	ldrd	r0, r1, [sp]
 80030be:	f7fd faa7 	bl	8000610 <__aeabi_dmul>
 80030c2:	e9cd 0100 	strd	r0, r1, [sp]
 80030c6:	e7c5      	b.n	8003054 <_dtoa_r+0x4ec>
 80030c8:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 80030cc:	4642      	mov	r2, r8
 80030ce:	464b      	mov	r3, r9
 80030d0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80030d4:	f7fd fa9c 	bl	8000610 <__aeabi_dmul>
 80030d8:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80030dc:	9d02      	ldr	r5, [sp, #8]
 80030de:	e9dd 0100 	ldrd	r0, r1, [sp]
 80030e2:	f7fd fd45 	bl	8000b70 <__aeabi_d2iz>
 80030e6:	4606      	mov	r6, r0
 80030e8:	f7fd fa2c 	bl	8000544 <__aeabi_i2d>
 80030ec:	3630      	adds	r6, #48	; 0x30
 80030ee:	4602      	mov	r2, r0
 80030f0:	460b      	mov	r3, r1
 80030f2:	e9dd 0100 	ldrd	r0, r1, [sp]
 80030f6:	f7fd f8d7 	bl	80002a8 <__aeabi_dsub>
 80030fa:	f805 6b01 	strb.w	r6, [r5], #1
 80030fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003100:	42ab      	cmp	r3, r5
 8003102:	4680      	mov	r8, r0
 8003104:	4689      	mov	r9, r1
 8003106:	f04f 0200 	mov.w	r2, #0
 800310a:	d125      	bne.n	8003158 <_dtoa_r+0x5f0>
 800310c:	4b1b      	ldr	r3, [pc, #108]	; (800317c <_dtoa_r+0x614>)
 800310e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003112:	f7fd f8cb 	bl	80002ac <__adddf3>
 8003116:	4602      	mov	r2, r0
 8003118:	460b      	mov	r3, r1
 800311a:	4640      	mov	r0, r8
 800311c:	4649      	mov	r1, r9
 800311e:	f7fd fd07 	bl	8000b30 <__aeabi_dcmpgt>
 8003122:	2800      	cmp	r0, #0
 8003124:	d175      	bne.n	8003212 <_dtoa_r+0x6aa>
 8003126:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800312a:	2000      	movs	r0, #0
 800312c:	4913      	ldr	r1, [pc, #76]	; (800317c <_dtoa_r+0x614>)
 800312e:	f7fd f8bb 	bl	80002a8 <__aeabi_dsub>
 8003132:	4602      	mov	r2, r0
 8003134:	460b      	mov	r3, r1
 8003136:	4640      	mov	r0, r8
 8003138:	4649      	mov	r1, r9
 800313a:	f7fd fcdb 	bl	8000af4 <__aeabi_dcmplt>
 800313e:	2800      	cmp	r0, #0
 8003140:	f43f af2f 	beq.w	8002fa2 <_dtoa_r+0x43a>
 8003144:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8003148:	2b30      	cmp	r3, #48	; 0x30
 800314a:	f105 32ff 	add.w	r2, r5, #4294967295
 800314e:	d001      	beq.n	8003154 <_dtoa_r+0x5ec>
 8003150:	46bb      	mov	fp, r7
 8003152:	e04d      	b.n	80031f0 <_dtoa_r+0x688>
 8003154:	4615      	mov	r5, r2
 8003156:	e7f5      	b.n	8003144 <_dtoa_r+0x5dc>
 8003158:	4b05      	ldr	r3, [pc, #20]	; (8003170 <_dtoa_r+0x608>)
 800315a:	f7fd fa59 	bl	8000610 <__aeabi_dmul>
 800315e:	e9cd 0100 	strd	r0, r1, [sp]
 8003162:	e7bc      	b.n	80030de <_dtoa_r+0x576>
 8003164:	080048f0 	.word	0x080048f0
 8003168:	080048c8 	.word	0x080048c8
 800316c:	3ff00000 	.word	0x3ff00000
 8003170:	40240000 	.word	0x40240000
 8003174:	401c0000 	.word	0x401c0000
 8003178:	40140000 	.word	0x40140000
 800317c:	3fe00000 	.word	0x3fe00000
 8003180:	e9dd 6700 	ldrd	r6, r7, [sp]
 8003184:	9d02      	ldr	r5, [sp, #8]
 8003186:	4642      	mov	r2, r8
 8003188:	464b      	mov	r3, r9
 800318a:	4630      	mov	r0, r6
 800318c:	4639      	mov	r1, r7
 800318e:	f7fd fb69 	bl	8000864 <__aeabi_ddiv>
 8003192:	f7fd fced 	bl	8000b70 <__aeabi_d2iz>
 8003196:	9000      	str	r0, [sp, #0]
 8003198:	f7fd f9d4 	bl	8000544 <__aeabi_i2d>
 800319c:	4642      	mov	r2, r8
 800319e:	464b      	mov	r3, r9
 80031a0:	f7fd fa36 	bl	8000610 <__aeabi_dmul>
 80031a4:	4602      	mov	r2, r0
 80031a6:	460b      	mov	r3, r1
 80031a8:	4630      	mov	r0, r6
 80031aa:	4639      	mov	r1, r7
 80031ac:	f7fd f87c 	bl	80002a8 <__aeabi_dsub>
 80031b0:	9e00      	ldr	r6, [sp, #0]
 80031b2:	9f03      	ldr	r7, [sp, #12]
 80031b4:	3630      	adds	r6, #48	; 0x30
 80031b6:	f805 6b01 	strb.w	r6, [r5], #1
 80031ba:	9e02      	ldr	r6, [sp, #8]
 80031bc:	1bae      	subs	r6, r5, r6
 80031be:	42b7      	cmp	r7, r6
 80031c0:	4602      	mov	r2, r0
 80031c2:	460b      	mov	r3, r1
 80031c4:	d138      	bne.n	8003238 <_dtoa_r+0x6d0>
 80031c6:	f7fd f871 	bl	80002ac <__adddf3>
 80031ca:	4606      	mov	r6, r0
 80031cc:	460f      	mov	r7, r1
 80031ce:	4602      	mov	r2, r0
 80031d0:	460b      	mov	r3, r1
 80031d2:	4640      	mov	r0, r8
 80031d4:	4649      	mov	r1, r9
 80031d6:	f7fd fc8d 	bl	8000af4 <__aeabi_dcmplt>
 80031da:	b9c8      	cbnz	r0, 8003210 <_dtoa_r+0x6a8>
 80031dc:	4632      	mov	r2, r6
 80031de:	463b      	mov	r3, r7
 80031e0:	4640      	mov	r0, r8
 80031e2:	4649      	mov	r1, r9
 80031e4:	f7fd fc7c 	bl	8000ae0 <__aeabi_dcmpeq>
 80031e8:	b110      	cbz	r0, 80031f0 <_dtoa_r+0x688>
 80031ea:	9b00      	ldr	r3, [sp, #0]
 80031ec:	07db      	lsls	r3, r3, #31
 80031ee:	d40f      	bmi.n	8003210 <_dtoa_r+0x6a8>
 80031f0:	4651      	mov	r1, sl
 80031f2:	4620      	mov	r0, r4
 80031f4:	f000 fba5 	bl	8003942 <_Bfree>
 80031f8:	2300      	movs	r3, #0
 80031fa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80031fc:	702b      	strb	r3, [r5, #0]
 80031fe:	f10b 0301 	add.w	r3, fp, #1
 8003202:	6013      	str	r3, [r2, #0]
 8003204:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003206:	2b00      	cmp	r3, #0
 8003208:	f43f acf8 	beq.w	8002bfc <_dtoa_r+0x94>
 800320c:	601d      	str	r5, [r3, #0]
 800320e:	e4f5      	b.n	8002bfc <_dtoa_r+0x94>
 8003210:	465f      	mov	r7, fp
 8003212:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8003216:	2a39      	cmp	r2, #57	; 0x39
 8003218:	f105 33ff 	add.w	r3, r5, #4294967295
 800321c:	d106      	bne.n	800322c <_dtoa_r+0x6c4>
 800321e:	9a02      	ldr	r2, [sp, #8]
 8003220:	429a      	cmp	r2, r3
 8003222:	d107      	bne.n	8003234 <_dtoa_r+0x6cc>
 8003224:	2330      	movs	r3, #48	; 0x30
 8003226:	7013      	strb	r3, [r2, #0]
 8003228:	3701      	adds	r7, #1
 800322a:	4613      	mov	r3, r2
 800322c:	781a      	ldrb	r2, [r3, #0]
 800322e:	3201      	adds	r2, #1
 8003230:	701a      	strb	r2, [r3, #0]
 8003232:	e78d      	b.n	8003150 <_dtoa_r+0x5e8>
 8003234:	461d      	mov	r5, r3
 8003236:	e7ec      	b.n	8003212 <_dtoa_r+0x6aa>
 8003238:	2200      	movs	r2, #0
 800323a:	4ba4      	ldr	r3, [pc, #656]	; (80034cc <_dtoa_r+0x964>)
 800323c:	f7fd f9e8 	bl	8000610 <__aeabi_dmul>
 8003240:	2200      	movs	r2, #0
 8003242:	2300      	movs	r3, #0
 8003244:	4606      	mov	r6, r0
 8003246:	460f      	mov	r7, r1
 8003248:	f7fd fc4a 	bl	8000ae0 <__aeabi_dcmpeq>
 800324c:	2800      	cmp	r0, #0
 800324e:	d09a      	beq.n	8003186 <_dtoa_r+0x61e>
 8003250:	e7ce      	b.n	80031f0 <_dtoa_r+0x688>
 8003252:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003254:	2a00      	cmp	r2, #0
 8003256:	f000 80cd 	beq.w	80033f4 <_dtoa_r+0x88c>
 800325a:	9a07      	ldr	r2, [sp, #28]
 800325c:	2a01      	cmp	r2, #1
 800325e:	f300 80af 	bgt.w	80033c0 <_dtoa_r+0x858>
 8003262:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003264:	2a00      	cmp	r2, #0
 8003266:	f000 80a7 	beq.w	80033b8 <_dtoa_r+0x850>
 800326a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800326e:	9e08      	ldr	r6, [sp, #32]
 8003270:	9d05      	ldr	r5, [sp, #20]
 8003272:	9a05      	ldr	r2, [sp, #20]
 8003274:	441a      	add	r2, r3
 8003276:	9205      	str	r2, [sp, #20]
 8003278:	9a06      	ldr	r2, [sp, #24]
 800327a:	2101      	movs	r1, #1
 800327c:	441a      	add	r2, r3
 800327e:	4620      	mov	r0, r4
 8003280:	9206      	str	r2, [sp, #24]
 8003282:	f000 fbfe 	bl	8003a82 <__i2b>
 8003286:	4607      	mov	r7, r0
 8003288:	2d00      	cmp	r5, #0
 800328a:	dd0c      	ble.n	80032a6 <_dtoa_r+0x73e>
 800328c:	9b06      	ldr	r3, [sp, #24]
 800328e:	2b00      	cmp	r3, #0
 8003290:	dd09      	ble.n	80032a6 <_dtoa_r+0x73e>
 8003292:	42ab      	cmp	r3, r5
 8003294:	9a05      	ldr	r2, [sp, #20]
 8003296:	bfa8      	it	ge
 8003298:	462b      	movge	r3, r5
 800329a:	1ad2      	subs	r2, r2, r3
 800329c:	9205      	str	r2, [sp, #20]
 800329e:	9a06      	ldr	r2, [sp, #24]
 80032a0:	1aed      	subs	r5, r5, r3
 80032a2:	1ad3      	subs	r3, r2, r3
 80032a4:	9306      	str	r3, [sp, #24]
 80032a6:	9b08      	ldr	r3, [sp, #32]
 80032a8:	b1f3      	cbz	r3, 80032e8 <_dtoa_r+0x780>
 80032aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80032ac:	2b00      	cmp	r3, #0
 80032ae:	f000 80a5 	beq.w	80033fc <_dtoa_r+0x894>
 80032b2:	2e00      	cmp	r6, #0
 80032b4:	dd10      	ble.n	80032d8 <_dtoa_r+0x770>
 80032b6:	4639      	mov	r1, r7
 80032b8:	4632      	mov	r2, r6
 80032ba:	4620      	mov	r0, r4
 80032bc:	f000 fc78 	bl	8003bb0 <__pow5mult>
 80032c0:	4652      	mov	r2, sl
 80032c2:	4601      	mov	r1, r0
 80032c4:	4607      	mov	r7, r0
 80032c6:	4620      	mov	r0, r4
 80032c8:	f000 fbe4 	bl	8003a94 <__multiply>
 80032cc:	4651      	mov	r1, sl
 80032ce:	4680      	mov	r8, r0
 80032d0:	4620      	mov	r0, r4
 80032d2:	f000 fb36 	bl	8003942 <_Bfree>
 80032d6:	46c2      	mov	sl, r8
 80032d8:	9b08      	ldr	r3, [sp, #32]
 80032da:	1b9a      	subs	r2, r3, r6
 80032dc:	d004      	beq.n	80032e8 <_dtoa_r+0x780>
 80032de:	4651      	mov	r1, sl
 80032e0:	4620      	mov	r0, r4
 80032e2:	f000 fc65 	bl	8003bb0 <__pow5mult>
 80032e6:	4682      	mov	sl, r0
 80032e8:	2101      	movs	r1, #1
 80032ea:	4620      	mov	r0, r4
 80032ec:	f000 fbc9 	bl	8003a82 <__i2b>
 80032f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80032f2:	2b00      	cmp	r3, #0
 80032f4:	4606      	mov	r6, r0
 80032f6:	f340 8083 	ble.w	8003400 <_dtoa_r+0x898>
 80032fa:	461a      	mov	r2, r3
 80032fc:	4601      	mov	r1, r0
 80032fe:	4620      	mov	r0, r4
 8003300:	f000 fc56 	bl	8003bb0 <__pow5mult>
 8003304:	9b07      	ldr	r3, [sp, #28]
 8003306:	2b01      	cmp	r3, #1
 8003308:	4606      	mov	r6, r0
 800330a:	dd7c      	ble.n	8003406 <_dtoa_r+0x89e>
 800330c:	f04f 0800 	mov.w	r8, #0
 8003310:	6933      	ldr	r3, [r6, #16]
 8003312:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8003316:	6918      	ldr	r0, [r3, #16]
 8003318:	f000 fb65 	bl	80039e6 <__hi0bits>
 800331c:	f1c0 0020 	rsb	r0, r0, #32
 8003320:	9b06      	ldr	r3, [sp, #24]
 8003322:	4418      	add	r0, r3
 8003324:	f010 001f 	ands.w	r0, r0, #31
 8003328:	f000 8096 	beq.w	8003458 <_dtoa_r+0x8f0>
 800332c:	f1c0 0320 	rsb	r3, r0, #32
 8003330:	2b04      	cmp	r3, #4
 8003332:	f340 8087 	ble.w	8003444 <_dtoa_r+0x8dc>
 8003336:	9b05      	ldr	r3, [sp, #20]
 8003338:	f1c0 001c 	rsb	r0, r0, #28
 800333c:	4403      	add	r3, r0
 800333e:	9305      	str	r3, [sp, #20]
 8003340:	9b06      	ldr	r3, [sp, #24]
 8003342:	4405      	add	r5, r0
 8003344:	4403      	add	r3, r0
 8003346:	9306      	str	r3, [sp, #24]
 8003348:	9b05      	ldr	r3, [sp, #20]
 800334a:	2b00      	cmp	r3, #0
 800334c:	dd05      	ble.n	800335a <_dtoa_r+0x7f2>
 800334e:	4651      	mov	r1, sl
 8003350:	461a      	mov	r2, r3
 8003352:	4620      	mov	r0, r4
 8003354:	f000 fc7a 	bl	8003c4c <__lshift>
 8003358:	4682      	mov	sl, r0
 800335a:	9b06      	ldr	r3, [sp, #24]
 800335c:	2b00      	cmp	r3, #0
 800335e:	dd05      	ble.n	800336c <_dtoa_r+0x804>
 8003360:	4631      	mov	r1, r6
 8003362:	461a      	mov	r2, r3
 8003364:	4620      	mov	r0, r4
 8003366:	f000 fc71 	bl	8003c4c <__lshift>
 800336a:	4606      	mov	r6, r0
 800336c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800336e:	2b00      	cmp	r3, #0
 8003370:	d074      	beq.n	800345c <_dtoa_r+0x8f4>
 8003372:	4631      	mov	r1, r6
 8003374:	4650      	mov	r0, sl
 8003376:	f000 fcba 	bl	8003cee <__mcmp>
 800337a:	2800      	cmp	r0, #0
 800337c:	da6e      	bge.n	800345c <_dtoa_r+0x8f4>
 800337e:	2300      	movs	r3, #0
 8003380:	4651      	mov	r1, sl
 8003382:	220a      	movs	r2, #10
 8003384:	4620      	mov	r0, r4
 8003386:	f000 faf3 	bl	8003970 <__multadd>
 800338a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800338c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8003390:	4682      	mov	sl, r0
 8003392:	2b00      	cmp	r3, #0
 8003394:	f000 81a8 	beq.w	80036e8 <_dtoa_r+0xb80>
 8003398:	2300      	movs	r3, #0
 800339a:	4639      	mov	r1, r7
 800339c:	220a      	movs	r2, #10
 800339e:	4620      	mov	r0, r4
 80033a0:	f000 fae6 	bl	8003970 <__multadd>
 80033a4:	9b04      	ldr	r3, [sp, #16]
 80033a6:	2b00      	cmp	r3, #0
 80033a8:	4607      	mov	r7, r0
 80033aa:	f300 80c8 	bgt.w	800353e <_dtoa_r+0x9d6>
 80033ae:	9b07      	ldr	r3, [sp, #28]
 80033b0:	2b02      	cmp	r3, #2
 80033b2:	f340 80c4 	ble.w	800353e <_dtoa_r+0x9d6>
 80033b6:	e059      	b.n	800346c <_dtoa_r+0x904>
 80033b8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80033ba:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80033be:	e756      	b.n	800326e <_dtoa_r+0x706>
 80033c0:	9b03      	ldr	r3, [sp, #12]
 80033c2:	1e5e      	subs	r6, r3, #1
 80033c4:	9b08      	ldr	r3, [sp, #32]
 80033c6:	42b3      	cmp	r3, r6
 80033c8:	bfbf      	itttt	lt
 80033ca:	9b08      	ldrlt	r3, [sp, #32]
 80033cc:	9608      	strlt	r6, [sp, #32]
 80033ce:	1af2      	sublt	r2, r6, r3
 80033d0:	9b0b      	ldrlt	r3, [sp, #44]	; 0x2c
 80033d2:	bfb6      	itet	lt
 80033d4:	189b      	addlt	r3, r3, r2
 80033d6:	1b9e      	subge	r6, r3, r6
 80033d8:	930b      	strlt	r3, [sp, #44]	; 0x2c
 80033da:	9b03      	ldr	r3, [sp, #12]
 80033dc:	bfb8      	it	lt
 80033de:	2600      	movlt	r6, #0
 80033e0:	2b00      	cmp	r3, #0
 80033e2:	bfb9      	ittee	lt
 80033e4:	9b05      	ldrlt	r3, [sp, #20]
 80033e6:	9a03      	ldrlt	r2, [sp, #12]
 80033e8:	9d05      	ldrge	r5, [sp, #20]
 80033ea:	9b03      	ldrge	r3, [sp, #12]
 80033ec:	bfbc      	itt	lt
 80033ee:	1a9d      	sublt	r5, r3, r2
 80033f0:	2300      	movlt	r3, #0
 80033f2:	e73e      	b.n	8003272 <_dtoa_r+0x70a>
 80033f4:	9e08      	ldr	r6, [sp, #32]
 80033f6:	9d05      	ldr	r5, [sp, #20]
 80033f8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80033fa:	e745      	b.n	8003288 <_dtoa_r+0x720>
 80033fc:	9a08      	ldr	r2, [sp, #32]
 80033fe:	e76e      	b.n	80032de <_dtoa_r+0x776>
 8003400:	9b07      	ldr	r3, [sp, #28]
 8003402:	2b01      	cmp	r3, #1
 8003404:	dc19      	bgt.n	800343a <_dtoa_r+0x8d2>
 8003406:	9b00      	ldr	r3, [sp, #0]
 8003408:	b9bb      	cbnz	r3, 800343a <_dtoa_r+0x8d2>
 800340a:	9b01      	ldr	r3, [sp, #4]
 800340c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003410:	b99b      	cbnz	r3, 800343a <_dtoa_r+0x8d2>
 8003412:	9b01      	ldr	r3, [sp, #4]
 8003414:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003418:	0d1b      	lsrs	r3, r3, #20
 800341a:	051b      	lsls	r3, r3, #20
 800341c:	b183      	cbz	r3, 8003440 <_dtoa_r+0x8d8>
 800341e:	9b05      	ldr	r3, [sp, #20]
 8003420:	3301      	adds	r3, #1
 8003422:	9305      	str	r3, [sp, #20]
 8003424:	9b06      	ldr	r3, [sp, #24]
 8003426:	3301      	adds	r3, #1
 8003428:	9306      	str	r3, [sp, #24]
 800342a:	f04f 0801 	mov.w	r8, #1
 800342e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003430:	2b00      	cmp	r3, #0
 8003432:	f47f af6d 	bne.w	8003310 <_dtoa_r+0x7a8>
 8003436:	2001      	movs	r0, #1
 8003438:	e772      	b.n	8003320 <_dtoa_r+0x7b8>
 800343a:	f04f 0800 	mov.w	r8, #0
 800343e:	e7f6      	b.n	800342e <_dtoa_r+0x8c6>
 8003440:	4698      	mov	r8, r3
 8003442:	e7f4      	b.n	800342e <_dtoa_r+0x8c6>
 8003444:	d080      	beq.n	8003348 <_dtoa_r+0x7e0>
 8003446:	9a05      	ldr	r2, [sp, #20]
 8003448:	331c      	adds	r3, #28
 800344a:	441a      	add	r2, r3
 800344c:	9205      	str	r2, [sp, #20]
 800344e:	9a06      	ldr	r2, [sp, #24]
 8003450:	441a      	add	r2, r3
 8003452:	441d      	add	r5, r3
 8003454:	4613      	mov	r3, r2
 8003456:	e776      	b.n	8003346 <_dtoa_r+0x7de>
 8003458:	4603      	mov	r3, r0
 800345a:	e7f4      	b.n	8003446 <_dtoa_r+0x8de>
 800345c:	9b03      	ldr	r3, [sp, #12]
 800345e:	2b00      	cmp	r3, #0
 8003460:	dc36      	bgt.n	80034d0 <_dtoa_r+0x968>
 8003462:	9b07      	ldr	r3, [sp, #28]
 8003464:	2b02      	cmp	r3, #2
 8003466:	dd33      	ble.n	80034d0 <_dtoa_r+0x968>
 8003468:	9b03      	ldr	r3, [sp, #12]
 800346a:	9304      	str	r3, [sp, #16]
 800346c:	9b04      	ldr	r3, [sp, #16]
 800346e:	b963      	cbnz	r3, 800348a <_dtoa_r+0x922>
 8003470:	4631      	mov	r1, r6
 8003472:	2205      	movs	r2, #5
 8003474:	4620      	mov	r0, r4
 8003476:	f000 fa7b 	bl	8003970 <__multadd>
 800347a:	4601      	mov	r1, r0
 800347c:	4606      	mov	r6, r0
 800347e:	4650      	mov	r0, sl
 8003480:	f000 fc35 	bl	8003cee <__mcmp>
 8003484:	2800      	cmp	r0, #0
 8003486:	f73f adb6 	bgt.w	8002ff6 <_dtoa_r+0x48e>
 800348a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800348c:	9d02      	ldr	r5, [sp, #8]
 800348e:	ea6f 0b03 	mvn.w	fp, r3
 8003492:	2300      	movs	r3, #0
 8003494:	9303      	str	r3, [sp, #12]
 8003496:	4631      	mov	r1, r6
 8003498:	4620      	mov	r0, r4
 800349a:	f000 fa52 	bl	8003942 <_Bfree>
 800349e:	2f00      	cmp	r7, #0
 80034a0:	f43f aea6 	beq.w	80031f0 <_dtoa_r+0x688>
 80034a4:	9b03      	ldr	r3, [sp, #12]
 80034a6:	b12b      	cbz	r3, 80034b4 <_dtoa_r+0x94c>
 80034a8:	42bb      	cmp	r3, r7
 80034aa:	d003      	beq.n	80034b4 <_dtoa_r+0x94c>
 80034ac:	4619      	mov	r1, r3
 80034ae:	4620      	mov	r0, r4
 80034b0:	f000 fa47 	bl	8003942 <_Bfree>
 80034b4:	4639      	mov	r1, r7
 80034b6:	4620      	mov	r0, r4
 80034b8:	f000 fa43 	bl	8003942 <_Bfree>
 80034bc:	e698      	b.n	80031f0 <_dtoa_r+0x688>
 80034be:	2600      	movs	r6, #0
 80034c0:	4637      	mov	r7, r6
 80034c2:	e7e2      	b.n	800348a <_dtoa_r+0x922>
 80034c4:	46bb      	mov	fp, r7
 80034c6:	4637      	mov	r7, r6
 80034c8:	e595      	b.n	8002ff6 <_dtoa_r+0x48e>
 80034ca:	bf00      	nop
 80034cc:	40240000 	.word	0x40240000
 80034d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80034d2:	bb93      	cbnz	r3, 800353a <_dtoa_r+0x9d2>
 80034d4:	9b03      	ldr	r3, [sp, #12]
 80034d6:	9304      	str	r3, [sp, #16]
 80034d8:	9d02      	ldr	r5, [sp, #8]
 80034da:	4631      	mov	r1, r6
 80034dc:	4650      	mov	r0, sl
 80034de:	f7ff fab7 	bl	8002a50 <quorem>
 80034e2:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80034e6:	f805 9b01 	strb.w	r9, [r5], #1
 80034ea:	9b02      	ldr	r3, [sp, #8]
 80034ec:	9a04      	ldr	r2, [sp, #16]
 80034ee:	1aeb      	subs	r3, r5, r3
 80034f0:	429a      	cmp	r2, r3
 80034f2:	f300 80dc 	bgt.w	80036ae <_dtoa_r+0xb46>
 80034f6:	9b02      	ldr	r3, [sp, #8]
 80034f8:	2a01      	cmp	r2, #1
 80034fa:	bfac      	ite	ge
 80034fc:	189b      	addge	r3, r3, r2
 80034fe:	3301      	addlt	r3, #1
 8003500:	4698      	mov	r8, r3
 8003502:	2300      	movs	r3, #0
 8003504:	9303      	str	r3, [sp, #12]
 8003506:	4651      	mov	r1, sl
 8003508:	2201      	movs	r2, #1
 800350a:	4620      	mov	r0, r4
 800350c:	f000 fb9e 	bl	8003c4c <__lshift>
 8003510:	4631      	mov	r1, r6
 8003512:	4682      	mov	sl, r0
 8003514:	f000 fbeb 	bl	8003cee <__mcmp>
 8003518:	2800      	cmp	r0, #0
 800351a:	f300 808d 	bgt.w	8003638 <_dtoa_r+0xad0>
 800351e:	d103      	bne.n	8003528 <_dtoa_r+0x9c0>
 8003520:	f019 0f01 	tst.w	r9, #1
 8003524:	f040 8088 	bne.w	8003638 <_dtoa_r+0xad0>
 8003528:	4645      	mov	r5, r8
 800352a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800352e:	2b30      	cmp	r3, #48	; 0x30
 8003530:	f105 32ff 	add.w	r2, r5, #4294967295
 8003534:	d1af      	bne.n	8003496 <_dtoa_r+0x92e>
 8003536:	4615      	mov	r5, r2
 8003538:	e7f7      	b.n	800352a <_dtoa_r+0x9c2>
 800353a:	9b03      	ldr	r3, [sp, #12]
 800353c:	9304      	str	r3, [sp, #16]
 800353e:	2d00      	cmp	r5, #0
 8003540:	dd05      	ble.n	800354e <_dtoa_r+0x9e6>
 8003542:	4639      	mov	r1, r7
 8003544:	462a      	mov	r2, r5
 8003546:	4620      	mov	r0, r4
 8003548:	f000 fb80 	bl	8003c4c <__lshift>
 800354c:	4607      	mov	r7, r0
 800354e:	f1b8 0f00 	cmp.w	r8, #0
 8003552:	d04c      	beq.n	80035ee <_dtoa_r+0xa86>
 8003554:	6879      	ldr	r1, [r7, #4]
 8003556:	4620      	mov	r0, r4
 8003558:	f000 f9bf 	bl	80038da <_Balloc>
 800355c:	693a      	ldr	r2, [r7, #16]
 800355e:	3202      	adds	r2, #2
 8003560:	4605      	mov	r5, r0
 8003562:	0092      	lsls	r2, r2, #2
 8003564:	f107 010c 	add.w	r1, r7, #12
 8003568:	300c      	adds	r0, #12
 800356a:	f000 f9ab 	bl	80038c4 <memcpy>
 800356e:	2201      	movs	r2, #1
 8003570:	4629      	mov	r1, r5
 8003572:	4620      	mov	r0, r4
 8003574:	f000 fb6a 	bl	8003c4c <__lshift>
 8003578:	9b00      	ldr	r3, [sp, #0]
 800357a:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800357e:	9703      	str	r7, [sp, #12]
 8003580:	f003 0301 	and.w	r3, r3, #1
 8003584:	4607      	mov	r7, r0
 8003586:	9305      	str	r3, [sp, #20]
 8003588:	4631      	mov	r1, r6
 800358a:	4650      	mov	r0, sl
 800358c:	f7ff fa60 	bl	8002a50 <quorem>
 8003590:	9903      	ldr	r1, [sp, #12]
 8003592:	4605      	mov	r5, r0
 8003594:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003598:	4650      	mov	r0, sl
 800359a:	f000 fba8 	bl	8003cee <__mcmp>
 800359e:	463a      	mov	r2, r7
 80035a0:	9000      	str	r0, [sp, #0]
 80035a2:	4631      	mov	r1, r6
 80035a4:	4620      	mov	r0, r4
 80035a6:	f000 fbbc 	bl	8003d22 <__mdiff>
 80035aa:	68c3      	ldr	r3, [r0, #12]
 80035ac:	4602      	mov	r2, r0
 80035ae:	bb03      	cbnz	r3, 80035f2 <_dtoa_r+0xa8a>
 80035b0:	4601      	mov	r1, r0
 80035b2:	9006      	str	r0, [sp, #24]
 80035b4:	4650      	mov	r0, sl
 80035b6:	f000 fb9a 	bl	8003cee <__mcmp>
 80035ba:	9a06      	ldr	r2, [sp, #24]
 80035bc:	4603      	mov	r3, r0
 80035be:	4611      	mov	r1, r2
 80035c0:	4620      	mov	r0, r4
 80035c2:	9306      	str	r3, [sp, #24]
 80035c4:	f000 f9bd 	bl	8003942 <_Bfree>
 80035c8:	9b06      	ldr	r3, [sp, #24]
 80035ca:	b9a3      	cbnz	r3, 80035f6 <_dtoa_r+0xa8e>
 80035cc:	9a07      	ldr	r2, [sp, #28]
 80035ce:	b992      	cbnz	r2, 80035f6 <_dtoa_r+0xa8e>
 80035d0:	9a05      	ldr	r2, [sp, #20]
 80035d2:	b982      	cbnz	r2, 80035f6 <_dtoa_r+0xa8e>
 80035d4:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80035d8:	d029      	beq.n	800362e <_dtoa_r+0xac6>
 80035da:	9b00      	ldr	r3, [sp, #0]
 80035dc:	2b00      	cmp	r3, #0
 80035de:	dd01      	ble.n	80035e4 <_dtoa_r+0xa7c>
 80035e0:	f105 0931 	add.w	r9, r5, #49	; 0x31
 80035e4:	f108 0501 	add.w	r5, r8, #1
 80035e8:	f888 9000 	strb.w	r9, [r8]
 80035ec:	e753      	b.n	8003496 <_dtoa_r+0x92e>
 80035ee:	4638      	mov	r0, r7
 80035f0:	e7c2      	b.n	8003578 <_dtoa_r+0xa10>
 80035f2:	2301      	movs	r3, #1
 80035f4:	e7e3      	b.n	80035be <_dtoa_r+0xa56>
 80035f6:	9a00      	ldr	r2, [sp, #0]
 80035f8:	2a00      	cmp	r2, #0
 80035fa:	db04      	blt.n	8003606 <_dtoa_r+0xa9e>
 80035fc:	d125      	bne.n	800364a <_dtoa_r+0xae2>
 80035fe:	9a07      	ldr	r2, [sp, #28]
 8003600:	bb1a      	cbnz	r2, 800364a <_dtoa_r+0xae2>
 8003602:	9a05      	ldr	r2, [sp, #20]
 8003604:	bb0a      	cbnz	r2, 800364a <_dtoa_r+0xae2>
 8003606:	2b00      	cmp	r3, #0
 8003608:	ddec      	ble.n	80035e4 <_dtoa_r+0xa7c>
 800360a:	4651      	mov	r1, sl
 800360c:	2201      	movs	r2, #1
 800360e:	4620      	mov	r0, r4
 8003610:	f000 fb1c 	bl	8003c4c <__lshift>
 8003614:	4631      	mov	r1, r6
 8003616:	4682      	mov	sl, r0
 8003618:	f000 fb69 	bl	8003cee <__mcmp>
 800361c:	2800      	cmp	r0, #0
 800361e:	dc03      	bgt.n	8003628 <_dtoa_r+0xac0>
 8003620:	d1e0      	bne.n	80035e4 <_dtoa_r+0xa7c>
 8003622:	f019 0f01 	tst.w	r9, #1
 8003626:	d0dd      	beq.n	80035e4 <_dtoa_r+0xa7c>
 8003628:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800362c:	d1d8      	bne.n	80035e0 <_dtoa_r+0xa78>
 800362e:	2339      	movs	r3, #57	; 0x39
 8003630:	f888 3000 	strb.w	r3, [r8]
 8003634:	f108 0801 	add.w	r8, r8, #1
 8003638:	4645      	mov	r5, r8
 800363a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800363e:	2b39      	cmp	r3, #57	; 0x39
 8003640:	f105 32ff 	add.w	r2, r5, #4294967295
 8003644:	d03b      	beq.n	80036be <_dtoa_r+0xb56>
 8003646:	3301      	adds	r3, #1
 8003648:	e040      	b.n	80036cc <_dtoa_r+0xb64>
 800364a:	2b00      	cmp	r3, #0
 800364c:	f108 0501 	add.w	r5, r8, #1
 8003650:	dd05      	ble.n	800365e <_dtoa_r+0xaf6>
 8003652:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003656:	d0ea      	beq.n	800362e <_dtoa_r+0xac6>
 8003658:	f109 0901 	add.w	r9, r9, #1
 800365c:	e7c4      	b.n	80035e8 <_dtoa_r+0xa80>
 800365e:	9b02      	ldr	r3, [sp, #8]
 8003660:	9a04      	ldr	r2, [sp, #16]
 8003662:	f805 9c01 	strb.w	r9, [r5, #-1]
 8003666:	1aeb      	subs	r3, r5, r3
 8003668:	4293      	cmp	r3, r2
 800366a:	46a8      	mov	r8, r5
 800366c:	f43f af4b 	beq.w	8003506 <_dtoa_r+0x99e>
 8003670:	4651      	mov	r1, sl
 8003672:	2300      	movs	r3, #0
 8003674:	220a      	movs	r2, #10
 8003676:	4620      	mov	r0, r4
 8003678:	f000 f97a 	bl	8003970 <__multadd>
 800367c:	9b03      	ldr	r3, [sp, #12]
 800367e:	9903      	ldr	r1, [sp, #12]
 8003680:	42bb      	cmp	r3, r7
 8003682:	4682      	mov	sl, r0
 8003684:	f04f 0300 	mov.w	r3, #0
 8003688:	f04f 020a 	mov.w	r2, #10
 800368c:	4620      	mov	r0, r4
 800368e:	d104      	bne.n	800369a <_dtoa_r+0xb32>
 8003690:	f000 f96e 	bl	8003970 <__multadd>
 8003694:	9003      	str	r0, [sp, #12]
 8003696:	4607      	mov	r7, r0
 8003698:	e776      	b.n	8003588 <_dtoa_r+0xa20>
 800369a:	f000 f969 	bl	8003970 <__multadd>
 800369e:	2300      	movs	r3, #0
 80036a0:	9003      	str	r0, [sp, #12]
 80036a2:	220a      	movs	r2, #10
 80036a4:	4639      	mov	r1, r7
 80036a6:	4620      	mov	r0, r4
 80036a8:	f000 f962 	bl	8003970 <__multadd>
 80036ac:	e7f3      	b.n	8003696 <_dtoa_r+0xb2e>
 80036ae:	4651      	mov	r1, sl
 80036b0:	2300      	movs	r3, #0
 80036b2:	220a      	movs	r2, #10
 80036b4:	4620      	mov	r0, r4
 80036b6:	f000 f95b 	bl	8003970 <__multadd>
 80036ba:	4682      	mov	sl, r0
 80036bc:	e70d      	b.n	80034da <_dtoa_r+0x972>
 80036be:	9b02      	ldr	r3, [sp, #8]
 80036c0:	4293      	cmp	r3, r2
 80036c2:	d105      	bne.n	80036d0 <_dtoa_r+0xb68>
 80036c4:	9a02      	ldr	r2, [sp, #8]
 80036c6:	f10b 0b01 	add.w	fp, fp, #1
 80036ca:	2331      	movs	r3, #49	; 0x31
 80036cc:	7013      	strb	r3, [r2, #0]
 80036ce:	e6e2      	b.n	8003496 <_dtoa_r+0x92e>
 80036d0:	4615      	mov	r5, r2
 80036d2:	e7b2      	b.n	800363a <_dtoa_r+0xad2>
 80036d4:	4b09      	ldr	r3, [pc, #36]	; (80036fc <_dtoa_r+0xb94>)
 80036d6:	f7ff baae 	b.w	8002c36 <_dtoa_r+0xce>
 80036da:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80036dc:	2b00      	cmp	r3, #0
 80036de:	f47f aa88 	bne.w	8002bf2 <_dtoa_r+0x8a>
 80036e2:	4b07      	ldr	r3, [pc, #28]	; (8003700 <_dtoa_r+0xb98>)
 80036e4:	f7ff baa7 	b.w	8002c36 <_dtoa_r+0xce>
 80036e8:	9b04      	ldr	r3, [sp, #16]
 80036ea:	2b00      	cmp	r3, #0
 80036ec:	f73f aef4 	bgt.w	80034d8 <_dtoa_r+0x970>
 80036f0:	9b07      	ldr	r3, [sp, #28]
 80036f2:	2b02      	cmp	r3, #2
 80036f4:	f77f aef0 	ble.w	80034d8 <_dtoa_r+0x970>
 80036f8:	e6b8      	b.n	800346c <_dtoa_r+0x904>
 80036fa:	bf00      	nop
 80036fc:	08004834 	.word	0x08004834
 8003700:	08004858 	.word	0x08004858

08003704 <_cleanup_r>:
 8003704:	4901      	ldr	r1, [pc, #4]	; (800370c <_cleanup_r+0x8>)
 8003706:	f000 b8a9 	b.w	800385c <_fwalk_reent>
 800370a:	bf00      	nop
 800370c:	080045ed 	.word	0x080045ed

08003710 <std.isra.0>:
 8003710:	2300      	movs	r3, #0
 8003712:	b510      	push	{r4, lr}
 8003714:	4604      	mov	r4, r0
 8003716:	6003      	str	r3, [r0, #0]
 8003718:	6043      	str	r3, [r0, #4]
 800371a:	6083      	str	r3, [r0, #8]
 800371c:	8181      	strh	r1, [r0, #12]
 800371e:	6643      	str	r3, [r0, #100]	; 0x64
 8003720:	81c2      	strh	r2, [r0, #14]
 8003722:	6103      	str	r3, [r0, #16]
 8003724:	6143      	str	r3, [r0, #20]
 8003726:	6183      	str	r3, [r0, #24]
 8003728:	4619      	mov	r1, r3
 800372a:	2208      	movs	r2, #8
 800372c:	305c      	adds	r0, #92	; 0x5c
 800372e:	f7fe fd03 	bl	8002138 <memset>
 8003732:	4b05      	ldr	r3, [pc, #20]	; (8003748 <std.isra.0+0x38>)
 8003734:	6263      	str	r3, [r4, #36]	; 0x24
 8003736:	4b05      	ldr	r3, [pc, #20]	; (800374c <std.isra.0+0x3c>)
 8003738:	62a3      	str	r3, [r4, #40]	; 0x28
 800373a:	4b05      	ldr	r3, [pc, #20]	; (8003750 <std.isra.0+0x40>)
 800373c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800373e:	4b05      	ldr	r3, [pc, #20]	; (8003754 <std.isra.0+0x44>)
 8003740:	6224      	str	r4, [r4, #32]
 8003742:	6323      	str	r3, [r4, #48]	; 0x30
 8003744:	bd10      	pop	{r4, pc}
 8003746:	bf00      	nop
 8003748:	08004291 	.word	0x08004291
 800374c:	080042b3 	.word	0x080042b3
 8003750:	080042eb 	.word	0x080042eb
 8003754:	0800430f 	.word	0x0800430f

08003758 <__sfmoreglue>:
 8003758:	b570      	push	{r4, r5, r6, lr}
 800375a:	1e4a      	subs	r2, r1, #1
 800375c:	2568      	movs	r5, #104	; 0x68
 800375e:	4355      	muls	r5, r2
 8003760:	460e      	mov	r6, r1
 8003762:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8003766:	f000 fbe5 	bl	8003f34 <_malloc_r>
 800376a:	4604      	mov	r4, r0
 800376c:	b140      	cbz	r0, 8003780 <__sfmoreglue+0x28>
 800376e:	2100      	movs	r1, #0
 8003770:	e880 0042 	stmia.w	r0, {r1, r6}
 8003774:	300c      	adds	r0, #12
 8003776:	60a0      	str	r0, [r4, #8]
 8003778:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800377c:	f7fe fcdc 	bl	8002138 <memset>
 8003780:	4620      	mov	r0, r4
 8003782:	bd70      	pop	{r4, r5, r6, pc}

08003784 <__sinit>:
 8003784:	6983      	ldr	r3, [r0, #24]
 8003786:	b510      	push	{r4, lr}
 8003788:	4604      	mov	r4, r0
 800378a:	bb33      	cbnz	r3, 80037da <__sinit+0x56>
 800378c:	6483      	str	r3, [r0, #72]	; 0x48
 800378e:	64c3      	str	r3, [r0, #76]	; 0x4c
 8003790:	6503      	str	r3, [r0, #80]	; 0x50
 8003792:	4b12      	ldr	r3, [pc, #72]	; (80037dc <__sinit+0x58>)
 8003794:	4a12      	ldr	r2, [pc, #72]	; (80037e0 <__sinit+0x5c>)
 8003796:	681b      	ldr	r3, [r3, #0]
 8003798:	6282      	str	r2, [r0, #40]	; 0x28
 800379a:	4298      	cmp	r0, r3
 800379c:	bf04      	itt	eq
 800379e:	2301      	moveq	r3, #1
 80037a0:	6183      	streq	r3, [r0, #24]
 80037a2:	f000 f81f 	bl	80037e4 <__sfp>
 80037a6:	6060      	str	r0, [r4, #4]
 80037a8:	4620      	mov	r0, r4
 80037aa:	f000 f81b 	bl	80037e4 <__sfp>
 80037ae:	60a0      	str	r0, [r4, #8]
 80037b0:	4620      	mov	r0, r4
 80037b2:	f000 f817 	bl	80037e4 <__sfp>
 80037b6:	2200      	movs	r2, #0
 80037b8:	60e0      	str	r0, [r4, #12]
 80037ba:	2104      	movs	r1, #4
 80037bc:	6860      	ldr	r0, [r4, #4]
 80037be:	f7ff ffa7 	bl	8003710 <std.isra.0>
 80037c2:	2201      	movs	r2, #1
 80037c4:	2109      	movs	r1, #9
 80037c6:	68a0      	ldr	r0, [r4, #8]
 80037c8:	f7ff ffa2 	bl	8003710 <std.isra.0>
 80037cc:	2202      	movs	r2, #2
 80037ce:	2112      	movs	r1, #18
 80037d0:	68e0      	ldr	r0, [r4, #12]
 80037d2:	f7ff ff9d 	bl	8003710 <std.isra.0>
 80037d6:	2301      	movs	r3, #1
 80037d8:	61a3      	str	r3, [r4, #24]
 80037da:	bd10      	pop	{r4, pc}
 80037dc:	08004820 	.word	0x08004820
 80037e0:	08003705 	.word	0x08003705

080037e4 <__sfp>:
 80037e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037e6:	4b1c      	ldr	r3, [pc, #112]	; (8003858 <__sfp+0x74>)
 80037e8:	681e      	ldr	r6, [r3, #0]
 80037ea:	69b3      	ldr	r3, [r6, #24]
 80037ec:	4607      	mov	r7, r0
 80037ee:	b913      	cbnz	r3, 80037f6 <__sfp+0x12>
 80037f0:	4630      	mov	r0, r6
 80037f2:	f7ff ffc7 	bl	8003784 <__sinit>
 80037f6:	3648      	adds	r6, #72	; 0x48
 80037f8:	68b4      	ldr	r4, [r6, #8]
 80037fa:	6873      	ldr	r3, [r6, #4]
 80037fc:	3b01      	subs	r3, #1
 80037fe:	d503      	bpl.n	8003808 <__sfp+0x24>
 8003800:	6833      	ldr	r3, [r6, #0]
 8003802:	b133      	cbz	r3, 8003812 <__sfp+0x2e>
 8003804:	6836      	ldr	r6, [r6, #0]
 8003806:	e7f7      	b.n	80037f8 <__sfp+0x14>
 8003808:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800380c:	b16d      	cbz	r5, 800382a <__sfp+0x46>
 800380e:	3468      	adds	r4, #104	; 0x68
 8003810:	e7f4      	b.n	80037fc <__sfp+0x18>
 8003812:	2104      	movs	r1, #4
 8003814:	4638      	mov	r0, r7
 8003816:	f7ff ff9f 	bl	8003758 <__sfmoreglue>
 800381a:	6030      	str	r0, [r6, #0]
 800381c:	2800      	cmp	r0, #0
 800381e:	d1f1      	bne.n	8003804 <__sfp+0x20>
 8003820:	230c      	movs	r3, #12
 8003822:	603b      	str	r3, [r7, #0]
 8003824:	4604      	mov	r4, r0
 8003826:	4620      	mov	r0, r4
 8003828:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800382a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800382e:	81e3      	strh	r3, [r4, #14]
 8003830:	2301      	movs	r3, #1
 8003832:	81a3      	strh	r3, [r4, #12]
 8003834:	6665      	str	r5, [r4, #100]	; 0x64
 8003836:	6025      	str	r5, [r4, #0]
 8003838:	60a5      	str	r5, [r4, #8]
 800383a:	6065      	str	r5, [r4, #4]
 800383c:	6125      	str	r5, [r4, #16]
 800383e:	6165      	str	r5, [r4, #20]
 8003840:	61a5      	str	r5, [r4, #24]
 8003842:	2208      	movs	r2, #8
 8003844:	4629      	mov	r1, r5
 8003846:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800384a:	f7fe fc75 	bl	8002138 <memset>
 800384e:	6365      	str	r5, [r4, #52]	; 0x34
 8003850:	63a5      	str	r5, [r4, #56]	; 0x38
 8003852:	64a5      	str	r5, [r4, #72]	; 0x48
 8003854:	64e5      	str	r5, [r4, #76]	; 0x4c
 8003856:	e7e6      	b.n	8003826 <__sfp+0x42>
 8003858:	08004820 	.word	0x08004820

0800385c <_fwalk_reent>:
 800385c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003860:	4680      	mov	r8, r0
 8003862:	4689      	mov	r9, r1
 8003864:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003868:	2600      	movs	r6, #0
 800386a:	b914      	cbnz	r4, 8003872 <_fwalk_reent+0x16>
 800386c:	4630      	mov	r0, r6
 800386e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003872:	68a5      	ldr	r5, [r4, #8]
 8003874:	6867      	ldr	r7, [r4, #4]
 8003876:	3f01      	subs	r7, #1
 8003878:	d501      	bpl.n	800387e <_fwalk_reent+0x22>
 800387a:	6824      	ldr	r4, [r4, #0]
 800387c:	e7f5      	b.n	800386a <_fwalk_reent+0xe>
 800387e:	89ab      	ldrh	r3, [r5, #12]
 8003880:	2b01      	cmp	r3, #1
 8003882:	d907      	bls.n	8003894 <_fwalk_reent+0x38>
 8003884:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003888:	3301      	adds	r3, #1
 800388a:	d003      	beq.n	8003894 <_fwalk_reent+0x38>
 800388c:	4629      	mov	r1, r5
 800388e:	4640      	mov	r0, r8
 8003890:	47c8      	blx	r9
 8003892:	4306      	orrs	r6, r0
 8003894:	3568      	adds	r5, #104	; 0x68
 8003896:	e7ee      	b.n	8003876 <_fwalk_reent+0x1a>

08003898 <_localeconv_r>:
 8003898:	4b04      	ldr	r3, [pc, #16]	; (80038ac <_localeconv_r+0x14>)
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	6a18      	ldr	r0, [r3, #32]
 800389e:	4b04      	ldr	r3, [pc, #16]	; (80038b0 <_localeconv_r+0x18>)
 80038a0:	2800      	cmp	r0, #0
 80038a2:	bf08      	it	eq
 80038a4:	4618      	moveq	r0, r3
 80038a6:	30f0      	adds	r0, #240	; 0xf0
 80038a8:	4770      	bx	lr
 80038aa:	bf00      	nop
 80038ac:	2000000c 	.word	0x2000000c
 80038b0:	20000070 	.word	0x20000070

080038b4 <malloc>:
 80038b4:	4b02      	ldr	r3, [pc, #8]	; (80038c0 <malloc+0xc>)
 80038b6:	4601      	mov	r1, r0
 80038b8:	6818      	ldr	r0, [r3, #0]
 80038ba:	f000 bb3b 	b.w	8003f34 <_malloc_r>
 80038be:	bf00      	nop
 80038c0:	2000000c 	.word	0x2000000c

080038c4 <memcpy>:
 80038c4:	b510      	push	{r4, lr}
 80038c6:	1e43      	subs	r3, r0, #1
 80038c8:	440a      	add	r2, r1
 80038ca:	4291      	cmp	r1, r2
 80038cc:	d100      	bne.n	80038d0 <memcpy+0xc>
 80038ce:	bd10      	pop	{r4, pc}
 80038d0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80038d4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80038d8:	e7f7      	b.n	80038ca <memcpy+0x6>

080038da <_Balloc>:
 80038da:	b570      	push	{r4, r5, r6, lr}
 80038dc:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80038de:	4604      	mov	r4, r0
 80038e0:	460e      	mov	r6, r1
 80038e2:	b93d      	cbnz	r5, 80038f4 <_Balloc+0x1a>
 80038e4:	2010      	movs	r0, #16
 80038e6:	f7ff ffe5 	bl	80038b4 <malloc>
 80038ea:	6260      	str	r0, [r4, #36]	; 0x24
 80038ec:	6045      	str	r5, [r0, #4]
 80038ee:	6085      	str	r5, [r0, #8]
 80038f0:	6005      	str	r5, [r0, #0]
 80038f2:	60c5      	str	r5, [r0, #12]
 80038f4:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80038f6:	68eb      	ldr	r3, [r5, #12]
 80038f8:	b183      	cbz	r3, 800391c <_Balloc+0x42>
 80038fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80038fc:	68db      	ldr	r3, [r3, #12]
 80038fe:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8003902:	b9b8      	cbnz	r0, 8003934 <_Balloc+0x5a>
 8003904:	2101      	movs	r1, #1
 8003906:	fa01 f506 	lsl.w	r5, r1, r6
 800390a:	1d6a      	adds	r2, r5, #5
 800390c:	0092      	lsls	r2, r2, #2
 800390e:	4620      	mov	r0, r4
 8003910:	f000 fab4 	bl	8003e7c <_calloc_r>
 8003914:	b160      	cbz	r0, 8003930 <_Balloc+0x56>
 8003916:	6046      	str	r6, [r0, #4]
 8003918:	6085      	str	r5, [r0, #8]
 800391a:	e00e      	b.n	800393a <_Balloc+0x60>
 800391c:	2221      	movs	r2, #33	; 0x21
 800391e:	2104      	movs	r1, #4
 8003920:	4620      	mov	r0, r4
 8003922:	f000 faab 	bl	8003e7c <_calloc_r>
 8003926:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003928:	60e8      	str	r0, [r5, #12]
 800392a:	68db      	ldr	r3, [r3, #12]
 800392c:	2b00      	cmp	r3, #0
 800392e:	d1e4      	bne.n	80038fa <_Balloc+0x20>
 8003930:	2000      	movs	r0, #0
 8003932:	bd70      	pop	{r4, r5, r6, pc}
 8003934:	6802      	ldr	r2, [r0, #0]
 8003936:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 800393a:	2300      	movs	r3, #0
 800393c:	6103      	str	r3, [r0, #16]
 800393e:	60c3      	str	r3, [r0, #12]
 8003940:	bd70      	pop	{r4, r5, r6, pc}

08003942 <_Bfree>:
 8003942:	b570      	push	{r4, r5, r6, lr}
 8003944:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8003946:	4606      	mov	r6, r0
 8003948:	460d      	mov	r5, r1
 800394a:	b93c      	cbnz	r4, 800395c <_Bfree+0x1a>
 800394c:	2010      	movs	r0, #16
 800394e:	f7ff ffb1 	bl	80038b4 <malloc>
 8003952:	6270      	str	r0, [r6, #36]	; 0x24
 8003954:	6044      	str	r4, [r0, #4]
 8003956:	6084      	str	r4, [r0, #8]
 8003958:	6004      	str	r4, [r0, #0]
 800395a:	60c4      	str	r4, [r0, #12]
 800395c:	b13d      	cbz	r5, 800396e <_Bfree+0x2c>
 800395e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8003960:	686a      	ldr	r2, [r5, #4]
 8003962:	68db      	ldr	r3, [r3, #12]
 8003964:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003968:	6029      	str	r1, [r5, #0]
 800396a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 800396e:	bd70      	pop	{r4, r5, r6, pc}

08003970 <__multadd>:
 8003970:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003974:	690d      	ldr	r5, [r1, #16]
 8003976:	461f      	mov	r7, r3
 8003978:	4606      	mov	r6, r0
 800397a:	460c      	mov	r4, r1
 800397c:	f101 0e14 	add.w	lr, r1, #20
 8003980:	2300      	movs	r3, #0
 8003982:	f8de 0000 	ldr.w	r0, [lr]
 8003986:	b281      	uxth	r1, r0
 8003988:	fb02 7101 	mla	r1, r2, r1, r7
 800398c:	0c0f      	lsrs	r7, r1, #16
 800398e:	0c00      	lsrs	r0, r0, #16
 8003990:	fb02 7000 	mla	r0, r2, r0, r7
 8003994:	b289      	uxth	r1, r1
 8003996:	3301      	adds	r3, #1
 8003998:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 800399c:	429d      	cmp	r5, r3
 800399e:	ea4f 4710 	mov.w	r7, r0, lsr #16
 80039a2:	f84e 1b04 	str.w	r1, [lr], #4
 80039a6:	dcec      	bgt.n	8003982 <__multadd+0x12>
 80039a8:	b1d7      	cbz	r7, 80039e0 <__multadd+0x70>
 80039aa:	68a3      	ldr	r3, [r4, #8]
 80039ac:	429d      	cmp	r5, r3
 80039ae:	db12      	blt.n	80039d6 <__multadd+0x66>
 80039b0:	6861      	ldr	r1, [r4, #4]
 80039b2:	4630      	mov	r0, r6
 80039b4:	3101      	adds	r1, #1
 80039b6:	f7ff ff90 	bl	80038da <_Balloc>
 80039ba:	6922      	ldr	r2, [r4, #16]
 80039bc:	3202      	adds	r2, #2
 80039be:	f104 010c 	add.w	r1, r4, #12
 80039c2:	4680      	mov	r8, r0
 80039c4:	0092      	lsls	r2, r2, #2
 80039c6:	300c      	adds	r0, #12
 80039c8:	f7ff ff7c 	bl	80038c4 <memcpy>
 80039cc:	4621      	mov	r1, r4
 80039ce:	4630      	mov	r0, r6
 80039d0:	f7ff ffb7 	bl	8003942 <_Bfree>
 80039d4:	4644      	mov	r4, r8
 80039d6:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80039da:	3501      	adds	r5, #1
 80039dc:	615f      	str	r7, [r3, #20]
 80039de:	6125      	str	r5, [r4, #16]
 80039e0:	4620      	mov	r0, r4
 80039e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080039e6 <__hi0bits>:
 80039e6:	0c02      	lsrs	r2, r0, #16
 80039e8:	0412      	lsls	r2, r2, #16
 80039ea:	4603      	mov	r3, r0
 80039ec:	b9b2      	cbnz	r2, 8003a1c <__hi0bits+0x36>
 80039ee:	0403      	lsls	r3, r0, #16
 80039f0:	2010      	movs	r0, #16
 80039f2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80039f6:	bf04      	itt	eq
 80039f8:	021b      	lsleq	r3, r3, #8
 80039fa:	3008      	addeq	r0, #8
 80039fc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8003a00:	bf04      	itt	eq
 8003a02:	011b      	lsleq	r3, r3, #4
 8003a04:	3004      	addeq	r0, #4
 8003a06:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8003a0a:	bf04      	itt	eq
 8003a0c:	009b      	lsleq	r3, r3, #2
 8003a0e:	3002      	addeq	r0, #2
 8003a10:	2b00      	cmp	r3, #0
 8003a12:	db06      	blt.n	8003a22 <__hi0bits+0x3c>
 8003a14:	005b      	lsls	r3, r3, #1
 8003a16:	d503      	bpl.n	8003a20 <__hi0bits+0x3a>
 8003a18:	3001      	adds	r0, #1
 8003a1a:	4770      	bx	lr
 8003a1c:	2000      	movs	r0, #0
 8003a1e:	e7e8      	b.n	80039f2 <__hi0bits+0xc>
 8003a20:	2020      	movs	r0, #32
 8003a22:	4770      	bx	lr

08003a24 <__lo0bits>:
 8003a24:	6803      	ldr	r3, [r0, #0]
 8003a26:	f013 0207 	ands.w	r2, r3, #7
 8003a2a:	4601      	mov	r1, r0
 8003a2c:	d00b      	beq.n	8003a46 <__lo0bits+0x22>
 8003a2e:	07da      	lsls	r2, r3, #31
 8003a30:	d423      	bmi.n	8003a7a <__lo0bits+0x56>
 8003a32:	0798      	lsls	r0, r3, #30
 8003a34:	bf49      	itett	mi
 8003a36:	085b      	lsrmi	r3, r3, #1
 8003a38:	089b      	lsrpl	r3, r3, #2
 8003a3a:	2001      	movmi	r0, #1
 8003a3c:	600b      	strmi	r3, [r1, #0]
 8003a3e:	bf5c      	itt	pl
 8003a40:	600b      	strpl	r3, [r1, #0]
 8003a42:	2002      	movpl	r0, #2
 8003a44:	4770      	bx	lr
 8003a46:	b298      	uxth	r0, r3
 8003a48:	b9a8      	cbnz	r0, 8003a76 <__lo0bits+0x52>
 8003a4a:	0c1b      	lsrs	r3, r3, #16
 8003a4c:	2010      	movs	r0, #16
 8003a4e:	f013 0fff 	tst.w	r3, #255	; 0xff
 8003a52:	bf04      	itt	eq
 8003a54:	0a1b      	lsreq	r3, r3, #8
 8003a56:	3008      	addeq	r0, #8
 8003a58:	071a      	lsls	r2, r3, #28
 8003a5a:	bf04      	itt	eq
 8003a5c:	091b      	lsreq	r3, r3, #4
 8003a5e:	3004      	addeq	r0, #4
 8003a60:	079a      	lsls	r2, r3, #30
 8003a62:	bf04      	itt	eq
 8003a64:	089b      	lsreq	r3, r3, #2
 8003a66:	3002      	addeq	r0, #2
 8003a68:	07da      	lsls	r2, r3, #31
 8003a6a:	d402      	bmi.n	8003a72 <__lo0bits+0x4e>
 8003a6c:	085b      	lsrs	r3, r3, #1
 8003a6e:	d006      	beq.n	8003a7e <__lo0bits+0x5a>
 8003a70:	3001      	adds	r0, #1
 8003a72:	600b      	str	r3, [r1, #0]
 8003a74:	4770      	bx	lr
 8003a76:	4610      	mov	r0, r2
 8003a78:	e7e9      	b.n	8003a4e <__lo0bits+0x2a>
 8003a7a:	2000      	movs	r0, #0
 8003a7c:	4770      	bx	lr
 8003a7e:	2020      	movs	r0, #32
 8003a80:	4770      	bx	lr

08003a82 <__i2b>:
 8003a82:	b510      	push	{r4, lr}
 8003a84:	460c      	mov	r4, r1
 8003a86:	2101      	movs	r1, #1
 8003a88:	f7ff ff27 	bl	80038da <_Balloc>
 8003a8c:	2201      	movs	r2, #1
 8003a8e:	6144      	str	r4, [r0, #20]
 8003a90:	6102      	str	r2, [r0, #16]
 8003a92:	bd10      	pop	{r4, pc}

08003a94 <__multiply>:
 8003a94:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a98:	4614      	mov	r4, r2
 8003a9a:	690a      	ldr	r2, [r1, #16]
 8003a9c:	6923      	ldr	r3, [r4, #16]
 8003a9e:	429a      	cmp	r2, r3
 8003aa0:	bfb8      	it	lt
 8003aa2:	460b      	movlt	r3, r1
 8003aa4:	4689      	mov	r9, r1
 8003aa6:	bfbc      	itt	lt
 8003aa8:	46a1      	movlt	r9, r4
 8003aaa:	461c      	movlt	r4, r3
 8003aac:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003ab0:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003ab4:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8003ab8:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003abc:	eb07 060a 	add.w	r6, r7, sl
 8003ac0:	429e      	cmp	r6, r3
 8003ac2:	bfc8      	it	gt
 8003ac4:	3101      	addgt	r1, #1
 8003ac6:	f7ff ff08 	bl	80038da <_Balloc>
 8003aca:	f100 0514 	add.w	r5, r0, #20
 8003ace:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003ad2:	462b      	mov	r3, r5
 8003ad4:	2200      	movs	r2, #0
 8003ad6:	4543      	cmp	r3, r8
 8003ad8:	d316      	bcc.n	8003b08 <__multiply+0x74>
 8003ada:	f104 0214 	add.w	r2, r4, #20
 8003ade:	f109 0114 	add.w	r1, r9, #20
 8003ae2:	eb02 038a 	add.w	r3, r2, sl, lsl #2
 8003ae6:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8003aea:	9301      	str	r3, [sp, #4]
 8003aec:	9c01      	ldr	r4, [sp, #4]
 8003aee:	4294      	cmp	r4, r2
 8003af0:	4613      	mov	r3, r2
 8003af2:	d80c      	bhi.n	8003b0e <__multiply+0x7a>
 8003af4:	2e00      	cmp	r6, #0
 8003af6:	dd03      	ble.n	8003b00 <__multiply+0x6c>
 8003af8:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	d054      	beq.n	8003baa <__multiply+0x116>
 8003b00:	6106      	str	r6, [r0, #16]
 8003b02:	b003      	add	sp, #12
 8003b04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b08:	f843 2b04 	str.w	r2, [r3], #4
 8003b0c:	e7e3      	b.n	8003ad6 <__multiply+0x42>
 8003b0e:	f8b3 a000 	ldrh.w	sl, [r3]
 8003b12:	3204      	adds	r2, #4
 8003b14:	f1ba 0f00 	cmp.w	sl, #0
 8003b18:	d020      	beq.n	8003b5c <__multiply+0xc8>
 8003b1a:	46ae      	mov	lr, r5
 8003b1c:	4689      	mov	r9, r1
 8003b1e:	f04f 0c00 	mov.w	ip, #0
 8003b22:	f859 4b04 	ldr.w	r4, [r9], #4
 8003b26:	f8be b000 	ldrh.w	fp, [lr]
 8003b2a:	b2a3      	uxth	r3, r4
 8003b2c:	fb0a b303 	mla	r3, sl, r3, fp
 8003b30:	ea4f 4b14 	mov.w	fp, r4, lsr #16
 8003b34:	f8de 4000 	ldr.w	r4, [lr]
 8003b38:	4463      	add	r3, ip
 8003b3a:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8003b3e:	fb0a c40b 	mla	r4, sl, fp, ip
 8003b42:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8003b46:	b29b      	uxth	r3, r3
 8003b48:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8003b4c:	454f      	cmp	r7, r9
 8003b4e:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8003b52:	f84e 3b04 	str.w	r3, [lr], #4
 8003b56:	d8e4      	bhi.n	8003b22 <__multiply+0x8e>
 8003b58:	f8ce c000 	str.w	ip, [lr]
 8003b5c:	f832 9c02 	ldrh.w	r9, [r2, #-2]
 8003b60:	f1b9 0f00 	cmp.w	r9, #0
 8003b64:	d01f      	beq.n	8003ba6 <__multiply+0x112>
 8003b66:	682b      	ldr	r3, [r5, #0]
 8003b68:	46ae      	mov	lr, r5
 8003b6a:	468c      	mov	ip, r1
 8003b6c:	f04f 0a00 	mov.w	sl, #0
 8003b70:	f8bc 4000 	ldrh.w	r4, [ip]
 8003b74:	f8be b002 	ldrh.w	fp, [lr, #2]
 8003b78:	fb09 b404 	mla	r4, r9, r4, fp
 8003b7c:	44a2      	add	sl, r4
 8003b7e:	b29b      	uxth	r3, r3
 8003b80:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
 8003b84:	f84e 3b04 	str.w	r3, [lr], #4
 8003b88:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003b8c:	f8be 4000 	ldrh.w	r4, [lr]
 8003b90:	0c1b      	lsrs	r3, r3, #16
 8003b92:	fb09 4303 	mla	r3, r9, r3, r4
 8003b96:	eb03 431a 	add.w	r3, r3, sl, lsr #16
 8003b9a:	4567      	cmp	r7, ip
 8003b9c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003ba0:	d8e6      	bhi.n	8003b70 <__multiply+0xdc>
 8003ba2:	f8ce 3000 	str.w	r3, [lr]
 8003ba6:	3504      	adds	r5, #4
 8003ba8:	e7a0      	b.n	8003aec <__multiply+0x58>
 8003baa:	3e01      	subs	r6, #1
 8003bac:	e7a2      	b.n	8003af4 <__multiply+0x60>
	...

08003bb0 <__pow5mult>:
 8003bb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003bb4:	4615      	mov	r5, r2
 8003bb6:	f012 0203 	ands.w	r2, r2, #3
 8003bba:	4606      	mov	r6, r0
 8003bbc:	460f      	mov	r7, r1
 8003bbe:	d007      	beq.n	8003bd0 <__pow5mult+0x20>
 8003bc0:	3a01      	subs	r2, #1
 8003bc2:	4c21      	ldr	r4, [pc, #132]	; (8003c48 <__pow5mult+0x98>)
 8003bc4:	2300      	movs	r3, #0
 8003bc6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003bca:	f7ff fed1 	bl	8003970 <__multadd>
 8003bce:	4607      	mov	r7, r0
 8003bd0:	10ad      	asrs	r5, r5, #2
 8003bd2:	d035      	beq.n	8003c40 <__pow5mult+0x90>
 8003bd4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8003bd6:	b93c      	cbnz	r4, 8003be8 <__pow5mult+0x38>
 8003bd8:	2010      	movs	r0, #16
 8003bda:	f7ff fe6b 	bl	80038b4 <malloc>
 8003bde:	6270      	str	r0, [r6, #36]	; 0x24
 8003be0:	6044      	str	r4, [r0, #4]
 8003be2:	6084      	str	r4, [r0, #8]
 8003be4:	6004      	str	r4, [r0, #0]
 8003be6:	60c4      	str	r4, [r0, #12]
 8003be8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8003bec:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003bf0:	b94c      	cbnz	r4, 8003c06 <__pow5mult+0x56>
 8003bf2:	f240 2171 	movw	r1, #625	; 0x271
 8003bf6:	4630      	mov	r0, r6
 8003bf8:	f7ff ff43 	bl	8003a82 <__i2b>
 8003bfc:	2300      	movs	r3, #0
 8003bfe:	f8c8 0008 	str.w	r0, [r8, #8]
 8003c02:	4604      	mov	r4, r0
 8003c04:	6003      	str	r3, [r0, #0]
 8003c06:	f04f 0800 	mov.w	r8, #0
 8003c0a:	07eb      	lsls	r3, r5, #31
 8003c0c:	d50a      	bpl.n	8003c24 <__pow5mult+0x74>
 8003c0e:	4639      	mov	r1, r7
 8003c10:	4622      	mov	r2, r4
 8003c12:	4630      	mov	r0, r6
 8003c14:	f7ff ff3e 	bl	8003a94 <__multiply>
 8003c18:	4639      	mov	r1, r7
 8003c1a:	4681      	mov	r9, r0
 8003c1c:	4630      	mov	r0, r6
 8003c1e:	f7ff fe90 	bl	8003942 <_Bfree>
 8003c22:	464f      	mov	r7, r9
 8003c24:	106d      	asrs	r5, r5, #1
 8003c26:	d00b      	beq.n	8003c40 <__pow5mult+0x90>
 8003c28:	6820      	ldr	r0, [r4, #0]
 8003c2a:	b938      	cbnz	r0, 8003c3c <__pow5mult+0x8c>
 8003c2c:	4622      	mov	r2, r4
 8003c2e:	4621      	mov	r1, r4
 8003c30:	4630      	mov	r0, r6
 8003c32:	f7ff ff2f 	bl	8003a94 <__multiply>
 8003c36:	6020      	str	r0, [r4, #0]
 8003c38:	f8c0 8000 	str.w	r8, [r0]
 8003c3c:	4604      	mov	r4, r0
 8003c3e:	e7e4      	b.n	8003c0a <__pow5mult+0x5a>
 8003c40:	4638      	mov	r0, r7
 8003c42:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003c46:	bf00      	nop
 8003c48:	080049b8 	.word	0x080049b8

08003c4c <__lshift>:
 8003c4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c50:	460c      	mov	r4, r1
 8003c52:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003c56:	6923      	ldr	r3, [r4, #16]
 8003c58:	6849      	ldr	r1, [r1, #4]
 8003c5a:	eb0a 0903 	add.w	r9, sl, r3
 8003c5e:	68a3      	ldr	r3, [r4, #8]
 8003c60:	4607      	mov	r7, r0
 8003c62:	4616      	mov	r6, r2
 8003c64:	f109 0501 	add.w	r5, r9, #1
 8003c68:	42ab      	cmp	r3, r5
 8003c6a:	db31      	blt.n	8003cd0 <__lshift+0x84>
 8003c6c:	4638      	mov	r0, r7
 8003c6e:	f7ff fe34 	bl	80038da <_Balloc>
 8003c72:	2200      	movs	r2, #0
 8003c74:	4680      	mov	r8, r0
 8003c76:	f100 0314 	add.w	r3, r0, #20
 8003c7a:	4611      	mov	r1, r2
 8003c7c:	4552      	cmp	r2, sl
 8003c7e:	db2a      	blt.n	8003cd6 <__lshift+0x8a>
 8003c80:	6920      	ldr	r0, [r4, #16]
 8003c82:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003c86:	f104 0114 	add.w	r1, r4, #20
 8003c8a:	f016 021f 	ands.w	r2, r6, #31
 8003c8e:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8003c92:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
 8003c96:	d022      	beq.n	8003cde <__lshift+0x92>
 8003c98:	f1c2 0c20 	rsb	ip, r2, #32
 8003c9c:	2000      	movs	r0, #0
 8003c9e:	680e      	ldr	r6, [r1, #0]
 8003ca0:	4096      	lsls	r6, r2
 8003ca2:	4330      	orrs	r0, r6
 8003ca4:	f843 0b04 	str.w	r0, [r3], #4
 8003ca8:	f851 0b04 	ldr.w	r0, [r1], #4
 8003cac:	458e      	cmp	lr, r1
 8003cae:	fa20 f00c 	lsr.w	r0, r0, ip
 8003cb2:	d8f4      	bhi.n	8003c9e <__lshift+0x52>
 8003cb4:	6018      	str	r0, [r3, #0]
 8003cb6:	b108      	cbz	r0, 8003cbc <__lshift+0x70>
 8003cb8:	f109 0502 	add.w	r5, r9, #2
 8003cbc:	3d01      	subs	r5, #1
 8003cbe:	4638      	mov	r0, r7
 8003cc0:	f8c8 5010 	str.w	r5, [r8, #16]
 8003cc4:	4621      	mov	r1, r4
 8003cc6:	f7ff fe3c 	bl	8003942 <_Bfree>
 8003cca:	4640      	mov	r0, r8
 8003ccc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003cd0:	3101      	adds	r1, #1
 8003cd2:	005b      	lsls	r3, r3, #1
 8003cd4:	e7c8      	b.n	8003c68 <__lshift+0x1c>
 8003cd6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003cda:	3201      	adds	r2, #1
 8003cdc:	e7ce      	b.n	8003c7c <__lshift+0x30>
 8003cde:	3b04      	subs	r3, #4
 8003ce0:	f851 2b04 	ldr.w	r2, [r1], #4
 8003ce4:	f843 2f04 	str.w	r2, [r3, #4]!
 8003ce8:	458e      	cmp	lr, r1
 8003cea:	d8f9      	bhi.n	8003ce0 <__lshift+0x94>
 8003cec:	e7e6      	b.n	8003cbc <__lshift+0x70>

08003cee <__mcmp>:
 8003cee:	6903      	ldr	r3, [r0, #16]
 8003cf0:	690a      	ldr	r2, [r1, #16]
 8003cf2:	1a9b      	subs	r3, r3, r2
 8003cf4:	b530      	push	{r4, r5, lr}
 8003cf6:	d10c      	bne.n	8003d12 <__mcmp+0x24>
 8003cf8:	0092      	lsls	r2, r2, #2
 8003cfa:	3014      	adds	r0, #20
 8003cfc:	3114      	adds	r1, #20
 8003cfe:	1884      	adds	r4, r0, r2
 8003d00:	4411      	add	r1, r2
 8003d02:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003d06:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003d0a:	4295      	cmp	r5, r2
 8003d0c:	d003      	beq.n	8003d16 <__mcmp+0x28>
 8003d0e:	d305      	bcc.n	8003d1c <__mcmp+0x2e>
 8003d10:	2301      	movs	r3, #1
 8003d12:	4618      	mov	r0, r3
 8003d14:	bd30      	pop	{r4, r5, pc}
 8003d16:	42a0      	cmp	r0, r4
 8003d18:	d3f3      	bcc.n	8003d02 <__mcmp+0x14>
 8003d1a:	e7fa      	b.n	8003d12 <__mcmp+0x24>
 8003d1c:	f04f 33ff 	mov.w	r3, #4294967295
 8003d20:	e7f7      	b.n	8003d12 <__mcmp+0x24>

08003d22 <__mdiff>:
 8003d22:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d26:	460d      	mov	r5, r1
 8003d28:	4607      	mov	r7, r0
 8003d2a:	4611      	mov	r1, r2
 8003d2c:	4628      	mov	r0, r5
 8003d2e:	4614      	mov	r4, r2
 8003d30:	f7ff ffdd 	bl	8003cee <__mcmp>
 8003d34:	1e06      	subs	r6, r0, #0
 8003d36:	d108      	bne.n	8003d4a <__mdiff+0x28>
 8003d38:	4631      	mov	r1, r6
 8003d3a:	4638      	mov	r0, r7
 8003d3c:	f7ff fdcd 	bl	80038da <_Balloc>
 8003d40:	2301      	movs	r3, #1
 8003d42:	6103      	str	r3, [r0, #16]
 8003d44:	6146      	str	r6, [r0, #20]
 8003d46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003d4a:	bfa4      	itt	ge
 8003d4c:	4623      	movge	r3, r4
 8003d4e:	462c      	movge	r4, r5
 8003d50:	4638      	mov	r0, r7
 8003d52:	6861      	ldr	r1, [r4, #4]
 8003d54:	bfa6      	itte	ge
 8003d56:	461d      	movge	r5, r3
 8003d58:	2600      	movge	r6, #0
 8003d5a:	2601      	movlt	r6, #1
 8003d5c:	f7ff fdbd 	bl	80038da <_Balloc>
 8003d60:	692b      	ldr	r3, [r5, #16]
 8003d62:	60c6      	str	r6, [r0, #12]
 8003d64:	6926      	ldr	r6, [r4, #16]
 8003d66:	f105 0914 	add.w	r9, r5, #20
 8003d6a:	f104 0214 	add.w	r2, r4, #20
 8003d6e:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8003d72:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8003d76:	f100 0514 	add.w	r5, r0, #20
 8003d7a:	f04f 0c00 	mov.w	ip, #0
 8003d7e:	f852 ab04 	ldr.w	sl, [r2], #4
 8003d82:	f859 4b04 	ldr.w	r4, [r9], #4
 8003d86:	fa1c f18a 	uxtah	r1, ip, sl
 8003d8a:	b2a3      	uxth	r3, r4
 8003d8c:	1ac9      	subs	r1, r1, r3
 8003d8e:	0c23      	lsrs	r3, r4, #16
 8003d90:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 8003d94:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8003d98:	b289      	uxth	r1, r1
 8003d9a:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8003d9e:	45c8      	cmp	r8, r9
 8003da0:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8003da4:	4696      	mov	lr, r2
 8003da6:	f845 3b04 	str.w	r3, [r5], #4
 8003daa:	d8e8      	bhi.n	8003d7e <__mdiff+0x5c>
 8003dac:	45be      	cmp	lr, r7
 8003dae:	d305      	bcc.n	8003dbc <__mdiff+0x9a>
 8003db0:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8003db4:	b18b      	cbz	r3, 8003dda <__mdiff+0xb8>
 8003db6:	6106      	str	r6, [r0, #16]
 8003db8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003dbc:	f85e 1b04 	ldr.w	r1, [lr], #4
 8003dc0:	fa1c f381 	uxtah	r3, ip, r1
 8003dc4:	141a      	asrs	r2, r3, #16
 8003dc6:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8003dca:	b29b      	uxth	r3, r3
 8003dcc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003dd0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8003dd4:	f845 3b04 	str.w	r3, [r5], #4
 8003dd8:	e7e8      	b.n	8003dac <__mdiff+0x8a>
 8003dda:	3e01      	subs	r6, #1
 8003ddc:	e7e8      	b.n	8003db0 <__mdiff+0x8e>

08003dde <__d2b>:
 8003dde:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003de2:	460e      	mov	r6, r1
 8003de4:	2101      	movs	r1, #1
 8003de6:	ec59 8b10 	vmov	r8, r9, d0
 8003dea:	4615      	mov	r5, r2
 8003dec:	f7ff fd75 	bl	80038da <_Balloc>
 8003df0:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8003df4:	4607      	mov	r7, r0
 8003df6:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003dfa:	bb34      	cbnz	r4, 8003e4a <__d2b+0x6c>
 8003dfc:	9301      	str	r3, [sp, #4]
 8003dfe:	f1b8 0f00 	cmp.w	r8, #0
 8003e02:	d027      	beq.n	8003e54 <__d2b+0x76>
 8003e04:	a802      	add	r0, sp, #8
 8003e06:	f840 8d08 	str.w	r8, [r0, #-8]!
 8003e0a:	f7ff fe0b 	bl	8003a24 <__lo0bits>
 8003e0e:	9900      	ldr	r1, [sp, #0]
 8003e10:	b1f0      	cbz	r0, 8003e50 <__d2b+0x72>
 8003e12:	9a01      	ldr	r2, [sp, #4]
 8003e14:	f1c0 0320 	rsb	r3, r0, #32
 8003e18:	fa02 f303 	lsl.w	r3, r2, r3
 8003e1c:	430b      	orrs	r3, r1
 8003e1e:	40c2      	lsrs	r2, r0
 8003e20:	617b      	str	r3, [r7, #20]
 8003e22:	9201      	str	r2, [sp, #4]
 8003e24:	9b01      	ldr	r3, [sp, #4]
 8003e26:	61bb      	str	r3, [r7, #24]
 8003e28:	2b00      	cmp	r3, #0
 8003e2a:	bf14      	ite	ne
 8003e2c:	2102      	movne	r1, #2
 8003e2e:	2101      	moveq	r1, #1
 8003e30:	6139      	str	r1, [r7, #16]
 8003e32:	b1c4      	cbz	r4, 8003e66 <__d2b+0x88>
 8003e34:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8003e38:	4404      	add	r4, r0
 8003e3a:	6034      	str	r4, [r6, #0]
 8003e3c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003e40:	6028      	str	r0, [r5, #0]
 8003e42:	4638      	mov	r0, r7
 8003e44:	b003      	add	sp, #12
 8003e46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003e4a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003e4e:	e7d5      	b.n	8003dfc <__d2b+0x1e>
 8003e50:	6179      	str	r1, [r7, #20]
 8003e52:	e7e7      	b.n	8003e24 <__d2b+0x46>
 8003e54:	a801      	add	r0, sp, #4
 8003e56:	f7ff fde5 	bl	8003a24 <__lo0bits>
 8003e5a:	9b01      	ldr	r3, [sp, #4]
 8003e5c:	617b      	str	r3, [r7, #20]
 8003e5e:	2101      	movs	r1, #1
 8003e60:	6139      	str	r1, [r7, #16]
 8003e62:	3020      	adds	r0, #32
 8003e64:	e7e5      	b.n	8003e32 <__d2b+0x54>
 8003e66:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8003e6a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003e6e:	6030      	str	r0, [r6, #0]
 8003e70:	6918      	ldr	r0, [r3, #16]
 8003e72:	f7ff fdb8 	bl	80039e6 <__hi0bits>
 8003e76:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8003e7a:	e7e1      	b.n	8003e40 <__d2b+0x62>

08003e7c <_calloc_r>:
 8003e7c:	b538      	push	{r3, r4, r5, lr}
 8003e7e:	fb02 f401 	mul.w	r4, r2, r1
 8003e82:	4621      	mov	r1, r4
 8003e84:	f000 f856 	bl	8003f34 <_malloc_r>
 8003e88:	4605      	mov	r5, r0
 8003e8a:	b118      	cbz	r0, 8003e94 <_calloc_r+0x18>
 8003e8c:	4622      	mov	r2, r4
 8003e8e:	2100      	movs	r1, #0
 8003e90:	f7fe f952 	bl	8002138 <memset>
 8003e94:	4628      	mov	r0, r5
 8003e96:	bd38      	pop	{r3, r4, r5, pc}

08003e98 <_free_r>:
 8003e98:	b538      	push	{r3, r4, r5, lr}
 8003e9a:	4605      	mov	r5, r0
 8003e9c:	2900      	cmp	r1, #0
 8003e9e:	d045      	beq.n	8003f2c <_free_r+0x94>
 8003ea0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003ea4:	1f0c      	subs	r4, r1, #4
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	bfb8      	it	lt
 8003eaa:	18e4      	addlt	r4, r4, r3
 8003eac:	f000 fc50 	bl	8004750 <__malloc_lock>
 8003eb0:	4a1f      	ldr	r2, [pc, #124]	; (8003f30 <_free_r+0x98>)
 8003eb2:	6813      	ldr	r3, [r2, #0]
 8003eb4:	4610      	mov	r0, r2
 8003eb6:	b933      	cbnz	r3, 8003ec6 <_free_r+0x2e>
 8003eb8:	6063      	str	r3, [r4, #4]
 8003eba:	6014      	str	r4, [r2, #0]
 8003ebc:	4628      	mov	r0, r5
 8003ebe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003ec2:	f000 bc46 	b.w	8004752 <__malloc_unlock>
 8003ec6:	42a3      	cmp	r3, r4
 8003ec8:	d90c      	bls.n	8003ee4 <_free_r+0x4c>
 8003eca:	6821      	ldr	r1, [r4, #0]
 8003ecc:	1862      	adds	r2, r4, r1
 8003ece:	4293      	cmp	r3, r2
 8003ed0:	bf04      	itt	eq
 8003ed2:	681a      	ldreq	r2, [r3, #0]
 8003ed4:	685b      	ldreq	r3, [r3, #4]
 8003ed6:	6063      	str	r3, [r4, #4]
 8003ed8:	bf04      	itt	eq
 8003eda:	1852      	addeq	r2, r2, r1
 8003edc:	6022      	streq	r2, [r4, #0]
 8003ede:	6004      	str	r4, [r0, #0]
 8003ee0:	e7ec      	b.n	8003ebc <_free_r+0x24>
 8003ee2:	4613      	mov	r3, r2
 8003ee4:	685a      	ldr	r2, [r3, #4]
 8003ee6:	b10a      	cbz	r2, 8003eec <_free_r+0x54>
 8003ee8:	42a2      	cmp	r2, r4
 8003eea:	d9fa      	bls.n	8003ee2 <_free_r+0x4a>
 8003eec:	6819      	ldr	r1, [r3, #0]
 8003eee:	1858      	adds	r0, r3, r1
 8003ef0:	42a0      	cmp	r0, r4
 8003ef2:	d10b      	bne.n	8003f0c <_free_r+0x74>
 8003ef4:	6820      	ldr	r0, [r4, #0]
 8003ef6:	4401      	add	r1, r0
 8003ef8:	1858      	adds	r0, r3, r1
 8003efa:	4282      	cmp	r2, r0
 8003efc:	6019      	str	r1, [r3, #0]
 8003efe:	d1dd      	bne.n	8003ebc <_free_r+0x24>
 8003f00:	6810      	ldr	r0, [r2, #0]
 8003f02:	6852      	ldr	r2, [r2, #4]
 8003f04:	605a      	str	r2, [r3, #4]
 8003f06:	4401      	add	r1, r0
 8003f08:	6019      	str	r1, [r3, #0]
 8003f0a:	e7d7      	b.n	8003ebc <_free_r+0x24>
 8003f0c:	d902      	bls.n	8003f14 <_free_r+0x7c>
 8003f0e:	230c      	movs	r3, #12
 8003f10:	602b      	str	r3, [r5, #0]
 8003f12:	e7d3      	b.n	8003ebc <_free_r+0x24>
 8003f14:	6820      	ldr	r0, [r4, #0]
 8003f16:	1821      	adds	r1, r4, r0
 8003f18:	428a      	cmp	r2, r1
 8003f1a:	bf04      	itt	eq
 8003f1c:	6811      	ldreq	r1, [r2, #0]
 8003f1e:	6852      	ldreq	r2, [r2, #4]
 8003f20:	6062      	str	r2, [r4, #4]
 8003f22:	bf04      	itt	eq
 8003f24:	1809      	addeq	r1, r1, r0
 8003f26:	6021      	streq	r1, [r4, #0]
 8003f28:	605c      	str	r4, [r3, #4]
 8003f2a:	e7c7      	b.n	8003ebc <_free_r+0x24>
 8003f2c:	bd38      	pop	{r3, r4, r5, pc}
 8003f2e:	bf00      	nop
 8003f30:	200001fc 	.word	0x200001fc

08003f34 <_malloc_r>:
 8003f34:	b570      	push	{r4, r5, r6, lr}
 8003f36:	1ccd      	adds	r5, r1, #3
 8003f38:	f025 0503 	bic.w	r5, r5, #3
 8003f3c:	3508      	adds	r5, #8
 8003f3e:	2d0c      	cmp	r5, #12
 8003f40:	bf38      	it	cc
 8003f42:	250c      	movcc	r5, #12
 8003f44:	2d00      	cmp	r5, #0
 8003f46:	4606      	mov	r6, r0
 8003f48:	db01      	blt.n	8003f4e <_malloc_r+0x1a>
 8003f4a:	42a9      	cmp	r1, r5
 8003f4c:	d903      	bls.n	8003f56 <_malloc_r+0x22>
 8003f4e:	230c      	movs	r3, #12
 8003f50:	6033      	str	r3, [r6, #0]
 8003f52:	2000      	movs	r0, #0
 8003f54:	bd70      	pop	{r4, r5, r6, pc}
 8003f56:	f000 fbfb 	bl	8004750 <__malloc_lock>
 8003f5a:	4a23      	ldr	r2, [pc, #140]	; (8003fe8 <_malloc_r+0xb4>)
 8003f5c:	6814      	ldr	r4, [r2, #0]
 8003f5e:	4621      	mov	r1, r4
 8003f60:	b991      	cbnz	r1, 8003f88 <_malloc_r+0x54>
 8003f62:	4c22      	ldr	r4, [pc, #136]	; (8003fec <_malloc_r+0xb8>)
 8003f64:	6823      	ldr	r3, [r4, #0]
 8003f66:	b91b      	cbnz	r3, 8003f70 <_malloc_r+0x3c>
 8003f68:	4630      	mov	r0, r6
 8003f6a:	f000 f981 	bl	8004270 <_sbrk_r>
 8003f6e:	6020      	str	r0, [r4, #0]
 8003f70:	4629      	mov	r1, r5
 8003f72:	4630      	mov	r0, r6
 8003f74:	f000 f97c 	bl	8004270 <_sbrk_r>
 8003f78:	1c43      	adds	r3, r0, #1
 8003f7a:	d126      	bne.n	8003fca <_malloc_r+0x96>
 8003f7c:	230c      	movs	r3, #12
 8003f7e:	6033      	str	r3, [r6, #0]
 8003f80:	4630      	mov	r0, r6
 8003f82:	f000 fbe6 	bl	8004752 <__malloc_unlock>
 8003f86:	e7e4      	b.n	8003f52 <_malloc_r+0x1e>
 8003f88:	680b      	ldr	r3, [r1, #0]
 8003f8a:	1b5b      	subs	r3, r3, r5
 8003f8c:	d41a      	bmi.n	8003fc4 <_malloc_r+0x90>
 8003f8e:	2b0b      	cmp	r3, #11
 8003f90:	d90f      	bls.n	8003fb2 <_malloc_r+0x7e>
 8003f92:	600b      	str	r3, [r1, #0]
 8003f94:	50cd      	str	r5, [r1, r3]
 8003f96:	18cc      	adds	r4, r1, r3
 8003f98:	4630      	mov	r0, r6
 8003f9a:	f000 fbda 	bl	8004752 <__malloc_unlock>
 8003f9e:	f104 000b 	add.w	r0, r4, #11
 8003fa2:	1d23      	adds	r3, r4, #4
 8003fa4:	f020 0007 	bic.w	r0, r0, #7
 8003fa8:	1ac3      	subs	r3, r0, r3
 8003faa:	d01b      	beq.n	8003fe4 <_malloc_r+0xb0>
 8003fac:	425a      	negs	r2, r3
 8003fae:	50e2      	str	r2, [r4, r3]
 8003fb0:	bd70      	pop	{r4, r5, r6, pc}
 8003fb2:	428c      	cmp	r4, r1
 8003fb4:	bf0d      	iteet	eq
 8003fb6:	6863      	ldreq	r3, [r4, #4]
 8003fb8:	684b      	ldrne	r3, [r1, #4]
 8003fba:	6063      	strne	r3, [r4, #4]
 8003fbc:	6013      	streq	r3, [r2, #0]
 8003fbe:	bf18      	it	ne
 8003fc0:	460c      	movne	r4, r1
 8003fc2:	e7e9      	b.n	8003f98 <_malloc_r+0x64>
 8003fc4:	460c      	mov	r4, r1
 8003fc6:	6849      	ldr	r1, [r1, #4]
 8003fc8:	e7ca      	b.n	8003f60 <_malloc_r+0x2c>
 8003fca:	1cc4      	adds	r4, r0, #3
 8003fcc:	f024 0403 	bic.w	r4, r4, #3
 8003fd0:	42a0      	cmp	r0, r4
 8003fd2:	d005      	beq.n	8003fe0 <_malloc_r+0xac>
 8003fd4:	1a21      	subs	r1, r4, r0
 8003fd6:	4630      	mov	r0, r6
 8003fd8:	f000 f94a 	bl	8004270 <_sbrk_r>
 8003fdc:	3001      	adds	r0, #1
 8003fde:	d0cd      	beq.n	8003f7c <_malloc_r+0x48>
 8003fe0:	6025      	str	r5, [r4, #0]
 8003fe2:	e7d9      	b.n	8003f98 <_malloc_r+0x64>
 8003fe4:	bd70      	pop	{r4, r5, r6, pc}
 8003fe6:	bf00      	nop
 8003fe8:	200001fc 	.word	0x200001fc
 8003fec:	20000200 	.word	0x20000200

08003ff0 <__sfputc_r>:
 8003ff0:	6893      	ldr	r3, [r2, #8]
 8003ff2:	3b01      	subs	r3, #1
 8003ff4:	2b00      	cmp	r3, #0
 8003ff6:	b410      	push	{r4}
 8003ff8:	6093      	str	r3, [r2, #8]
 8003ffa:	da09      	bge.n	8004010 <__sfputc_r+0x20>
 8003ffc:	6994      	ldr	r4, [r2, #24]
 8003ffe:	42a3      	cmp	r3, r4
 8004000:	db02      	blt.n	8004008 <__sfputc_r+0x18>
 8004002:	b2cb      	uxtb	r3, r1
 8004004:	2b0a      	cmp	r3, #10
 8004006:	d103      	bne.n	8004010 <__sfputc_r+0x20>
 8004008:	f85d 4b04 	ldr.w	r4, [sp], #4
 800400c:	f000 b984 	b.w	8004318 <__swbuf_r>
 8004010:	6813      	ldr	r3, [r2, #0]
 8004012:	1c58      	adds	r0, r3, #1
 8004014:	6010      	str	r0, [r2, #0]
 8004016:	7019      	strb	r1, [r3, #0]
 8004018:	b2c8      	uxtb	r0, r1
 800401a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800401e:	4770      	bx	lr

08004020 <__sfputs_r>:
 8004020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004022:	4606      	mov	r6, r0
 8004024:	460f      	mov	r7, r1
 8004026:	4614      	mov	r4, r2
 8004028:	18d5      	adds	r5, r2, r3
 800402a:	42ac      	cmp	r4, r5
 800402c:	d101      	bne.n	8004032 <__sfputs_r+0x12>
 800402e:	2000      	movs	r0, #0
 8004030:	e007      	b.n	8004042 <__sfputs_r+0x22>
 8004032:	463a      	mov	r2, r7
 8004034:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004038:	4630      	mov	r0, r6
 800403a:	f7ff ffd9 	bl	8003ff0 <__sfputc_r>
 800403e:	1c43      	adds	r3, r0, #1
 8004040:	d1f3      	bne.n	800402a <__sfputs_r+0xa>
 8004042:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004044 <_vfiprintf_r>:
 8004044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004048:	b09d      	sub	sp, #116	; 0x74
 800404a:	460c      	mov	r4, r1
 800404c:	4617      	mov	r7, r2
 800404e:	9303      	str	r3, [sp, #12]
 8004050:	4606      	mov	r6, r0
 8004052:	b118      	cbz	r0, 800405c <_vfiprintf_r+0x18>
 8004054:	6983      	ldr	r3, [r0, #24]
 8004056:	b90b      	cbnz	r3, 800405c <_vfiprintf_r+0x18>
 8004058:	f7ff fb94 	bl	8003784 <__sinit>
 800405c:	4b7c      	ldr	r3, [pc, #496]	; (8004250 <_vfiprintf_r+0x20c>)
 800405e:	429c      	cmp	r4, r3
 8004060:	d157      	bne.n	8004112 <_vfiprintf_r+0xce>
 8004062:	6874      	ldr	r4, [r6, #4]
 8004064:	89a3      	ldrh	r3, [r4, #12]
 8004066:	0718      	lsls	r0, r3, #28
 8004068:	d55d      	bpl.n	8004126 <_vfiprintf_r+0xe2>
 800406a:	6923      	ldr	r3, [r4, #16]
 800406c:	2b00      	cmp	r3, #0
 800406e:	d05a      	beq.n	8004126 <_vfiprintf_r+0xe2>
 8004070:	2300      	movs	r3, #0
 8004072:	9309      	str	r3, [sp, #36]	; 0x24
 8004074:	2320      	movs	r3, #32
 8004076:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800407a:	2330      	movs	r3, #48	; 0x30
 800407c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004080:	f04f 0b01 	mov.w	fp, #1
 8004084:	46b8      	mov	r8, r7
 8004086:	4645      	mov	r5, r8
 8004088:	f815 3b01 	ldrb.w	r3, [r5], #1
 800408c:	2b00      	cmp	r3, #0
 800408e:	d155      	bne.n	800413c <_vfiprintf_r+0xf8>
 8004090:	ebb8 0a07 	subs.w	sl, r8, r7
 8004094:	d00b      	beq.n	80040ae <_vfiprintf_r+0x6a>
 8004096:	4653      	mov	r3, sl
 8004098:	463a      	mov	r2, r7
 800409a:	4621      	mov	r1, r4
 800409c:	4630      	mov	r0, r6
 800409e:	f7ff ffbf 	bl	8004020 <__sfputs_r>
 80040a2:	3001      	adds	r0, #1
 80040a4:	f000 80c4 	beq.w	8004230 <_vfiprintf_r+0x1ec>
 80040a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80040aa:	4453      	add	r3, sl
 80040ac:	9309      	str	r3, [sp, #36]	; 0x24
 80040ae:	f898 3000 	ldrb.w	r3, [r8]
 80040b2:	2b00      	cmp	r3, #0
 80040b4:	f000 80bc 	beq.w	8004230 <_vfiprintf_r+0x1ec>
 80040b8:	2300      	movs	r3, #0
 80040ba:	f04f 32ff 	mov.w	r2, #4294967295
 80040be:	9304      	str	r3, [sp, #16]
 80040c0:	9307      	str	r3, [sp, #28]
 80040c2:	9205      	str	r2, [sp, #20]
 80040c4:	9306      	str	r3, [sp, #24]
 80040c6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80040ca:	931a      	str	r3, [sp, #104]	; 0x68
 80040cc:	2205      	movs	r2, #5
 80040ce:	7829      	ldrb	r1, [r5, #0]
 80040d0:	4860      	ldr	r0, [pc, #384]	; (8004254 <_vfiprintf_r+0x210>)
 80040d2:	f7fc f895 	bl	8000200 <memchr>
 80040d6:	f105 0801 	add.w	r8, r5, #1
 80040da:	9b04      	ldr	r3, [sp, #16]
 80040dc:	2800      	cmp	r0, #0
 80040de:	d131      	bne.n	8004144 <_vfiprintf_r+0x100>
 80040e0:	06d9      	lsls	r1, r3, #27
 80040e2:	bf44      	itt	mi
 80040e4:	2220      	movmi	r2, #32
 80040e6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80040ea:	071a      	lsls	r2, r3, #28
 80040ec:	bf44      	itt	mi
 80040ee:	222b      	movmi	r2, #43	; 0x2b
 80040f0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80040f4:	782a      	ldrb	r2, [r5, #0]
 80040f6:	2a2a      	cmp	r2, #42	; 0x2a
 80040f8:	d02c      	beq.n	8004154 <_vfiprintf_r+0x110>
 80040fa:	9a07      	ldr	r2, [sp, #28]
 80040fc:	2100      	movs	r1, #0
 80040fe:	200a      	movs	r0, #10
 8004100:	46a8      	mov	r8, r5
 8004102:	3501      	adds	r5, #1
 8004104:	f898 3000 	ldrb.w	r3, [r8]
 8004108:	3b30      	subs	r3, #48	; 0x30
 800410a:	2b09      	cmp	r3, #9
 800410c:	d96d      	bls.n	80041ea <_vfiprintf_r+0x1a6>
 800410e:	b371      	cbz	r1, 800416e <_vfiprintf_r+0x12a>
 8004110:	e026      	b.n	8004160 <_vfiprintf_r+0x11c>
 8004112:	4b51      	ldr	r3, [pc, #324]	; (8004258 <_vfiprintf_r+0x214>)
 8004114:	429c      	cmp	r4, r3
 8004116:	d101      	bne.n	800411c <_vfiprintf_r+0xd8>
 8004118:	68b4      	ldr	r4, [r6, #8]
 800411a:	e7a3      	b.n	8004064 <_vfiprintf_r+0x20>
 800411c:	4b4f      	ldr	r3, [pc, #316]	; (800425c <_vfiprintf_r+0x218>)
 800411e:	429c      	cmp	r4, r3
 8004120:	bf08      	it	eq
 8004122:	68f4      	ldreq	r4, [r6, #12]
 8004124:	e79e      	b.n	8004064 <_vfiprintf_r+0x20>
 8004126:	4621      	mov	r1, r4
 8004128:	4630      	mov	r0, r6
 800412a:	f000 f959 	bl	80043e0 <__swsetup_r>
 800412e:	2800      	cmp	r0, #0
 8004130:	d09e      	beq.n	8004070 <_vfiprintf_r+0x2c>
 8004132:	f04f 30ff 	mov.w	r0, #4294967295
 8004136:	b01d      	add	sp, #116	; 0x74
 8004138:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800413c:	2b25      	cmp	r3, #37	; 0x25
 800413e:	d0a7      	beq.n	8004090 <_vfiprintf_r+0x4c>
 8004140:	46a8      	mov	r8, r5
 8004142:	e7a0      	b.n	8004086 <_vfiprintf_r+0x42>
 8004144:	4a43      	ldr	r2, [pc, #268]	; (8004254 <_vfiprintf_r+0x210>)
 8004146:	1a80      	subs	r0, r0, r2
 8004148:	fa0b f000 	lsl.w	r0, fp, r0
 800414c:	4318      	orrs	r0, r3
 800414e:	9004      	str	r0, [sp, #16]
 8004150:	4645      	mov	r5, r8
 8004152:	e7bb      	b.n	80040cc <_vfiprintf_r+0x88>
 8004154:	9a03      	ldr	r2, [sp, #12]
 8004156:	1d11      	adds	r1, r2, #4
 8004158:	6812      	ldr	r2, [r2, #0]
 800415a:	9103      	str	r1, [sp, #12]
 800415c:	2a00      	cmp	r2, #0
 800415e:	db01      	blt.n	8004164 <_vfiprintf_r+0x120>
 8004160:	9207      	str	r2, [sp, #28]
 8004162:	e004      	b.n	800416e <_vfiprintf_r+0x12a>
 8004164:	4252      	negs	r2, r2
 8004166:	f043 0302 	orr.w	r3, r3, #2
 800416a:	9207      	str	r2, [sp, #28]
 800416c:	9304      	str	r3, [sp, #16]
 800416e:	f898 3000 	ldrb.w	r3, [r8]
 8004172:	2b2e      	cmp	r3, #46	; 0x2e
 8004174:	d110      	bne.n	8004198 <_vfiprintf_r+0x154>
 8004176:	f898 3001 	ldrb.w	r3, [r8, #1]
 800417a:	2b2a      	cmp	r3, #42	; 0x2a
 800417c:	f108 0101 	add.w	r1, r8, #1
 8004180:	d137      	bne.n	80041f2 <_vfiprintf_r+0x1ae>
 8004182:	9b03      	ldr	r3, [sp, #12]
 8004184:	1d1a      	adds	r2, r3, #4
 8004186:	681b      	ldr	r3, [r3, #0]
 8004188:	9203      	str	r2, [sp, #12]
 800418a:	2b00      	cmp	r3, #0
 800418c:	bfb8      	it	lt
 800418e:	f04f 33ff 	movlt.w	r3, #4294967295
 8004192:	f108 0802 	add.w	r8, r8, #2
 8004196:	9305      	str	r3, [sp, #20]
 8004198:	4d31      	ldr	r5, [pc, #196]	; (8004260 <_vfiprintf_r+0x21c>)
 800419a:	f898 1000 	ldrb.w	r1, [r8]
 800419e:	2203      	movs	r2, #3
 80041a0:	4628      	mov	r0, r5
 80041a2:	f7fc f82d 	bl	8000200 <memchr>
 80041a6:	b140      	cbz	r0, 80041ba <_vfiprintf_r+0x176>
 80041a8:	2340      	movs	r3, #64	; 0x40
 80041aa:	1b40      	subs	r0, r0, r5
 80041ac:	fa03 f000 	lsl.w	r0, r3, r0
 80041b0:	9b04      	ldr	r3, [sp, #16]
 80041b2:	4303      	orrs	r3, r0
 80041b4:	9304      	str	r3, [sp, #16]
 80041b6:	f108 0801 	add.w	r8, r8, #1
 80041ba:	f898 1000 	ldrb.w	r1, [r8]
 80041be:	4829      	ldr	r0, [pc, #164]	; (8004264 <_vfiprintf_r+0x220>)
 80041c0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80041c4:	2206      	movs	r2, #6
 80041c6:	f108 0701 	add.w	r7, r8, #1
 80041ca:	f7fc f819 	bl	8000200 <memchr>
 80041ce:	2800      	cmp	r0, #0
 80041d0:	d034      	beq.n	800423c <_vfiprintf_r+0x1f8>
 80041d2:	4b25      	ldr	r3, [pc, #148]	; (8004268 <_vfiprintf_r+0x224>)
 80041d4:	bb03      	cbnz	r3, 8004218 <_vfiprintf_r+0x1d4>
 80041d6:	9b03      	ldr	r3, [sp, #12]
 80041d8:	3307      	adds	r3, #7
 80041da:	f023 0307 	bic.w	r3, r3, #7
 80041de:	3308      	adds	r3, #8
 80041e0:	9303      	str	r3, [sp, #12]
 80041e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80041e4:	444b      	add	r3, r9
 80041e6:	9309      	str	r3, [sp, #36]	; 0x24
 80041e8:	e74c      	b.n	8004084 <_vfiprintf_r+0x40>
 80041ea:	fb00 3202 	mla	r2, r0, r2, r3
 80041ee:	2101      	movs	r1, #1
 80041f0:	e786      	b.n	8004100 <_vfiprintf_r+0xbc>
 80041f2:	2300      	movs	r3, #0
 80041f4:	9305      	str	r3, [sp, #20]
 80041f6:	4618      	mov	r0, r3
 80041f8:	250a      	movs	r5, #10
 80041fa:	4688      	mov	r8, r1
 80041fc:	3101      	adds	r1, #1
 80041fe:	f898 2000 	ldrb.w	r2, [r8]
 8004202:	3a30      	subs	r2, #48	; 0x30
 8004204:	2a09      	cmp	r2, #9
 8004206:	d903      	bls.n	8004210 <_vfiprintf_r+0x1cc>
 8004208:	2b00      	cmp	r3, #0
 800420a:	d0c5      	beq.n	8004198 <_vfiprintf_r+0x154>
 800420c:	9005      	str	r0, [sp, #20]
 800420e:	e7c3      	b.n	8004198 <_vfiprintf_r+0x154>
 8004210:	fb05 2000 	mla	r0, r5, r0, r2
 8004214:	2301      	movs	r3, #1
 8004216:	e7f0      	b.n	80041fa <_vfiprintf_r+0x1b6>
 8004218:	ab03      	add	r3, sp, #12
 800421a:	9300      	str	r3, [sp, #0]
 800421c:	4622      	mov	r2, r4
 800421e:	4b13      	ldr	r3, [pc, #76]	; (800426c <_vfiprintf_r+0x228>)
 8004220:	a904      	add	r1, sp, #16
 8004222:	4630      	mov	r0, r6
 8004224:	f7fe f826 	bl	8002274 <_printf_float>
 8004228:	f1b0 3fff 	cmp.w	r0, #4294967295
 800422c:	4681      	mov	r9, r0
 800422e:	d1d8      	bne.n	80041e2 <_vfiprintf_r+0x19e>
 8004230:	89a3      	ldrh	r3, [r4, #12]
 8004232:	065b      	lsls	r3, r3, #25
 8004234:	f53f af7d 	bmi.w	8004132 <_vfiprintf_r+0xee>
 8004238:	9809      	ldr	r0, [sp, #36]	; 0x24
 800423a:	e77c      	b.n	8004136 <_vfiprintf_r+0xf2>
 800423c:	ab03      	add	r3, sp, #12
 800423e:	9300      	str	r3, [sp, #0]
 8004240:	4622      	mov	r2, r4
 8004242:	4b0a      	ldr	r3, [pc, #40]	; (800426c <_vfiprintf_r+0x228>)
 8004244:	a904      	add	r1, sp, #16
 8004246:	4630      	mov	r0, r6
 8004248:	f7fe faca 	bl	80027e0 <_printf_i>
 800424c:	e7ec      	b.n	8004228 <_vfiprintf_r+0x1e4>
 800424e:	bf00      	nop
 8004250:	08004888 	.word	0x08004888
 8004254:	080049c4 	.word	0x080049c4
 8004258:	080048a8 	.word	0x080048a8
 800425c:	08004868 	.word	0x08004868
 8004260:	080049ca 	.word	0x080049ca
 8004264:	080049ce 	.word	0x080049ce
 8004268:	08002275 	.word	0x08002275
 800426c:	08004021 	.word	0x08004021

08004270 <_sbrk_r>:
 8004270:	b538      	push	{r3, r4, r5, lr}
 8004272:	4c06      	ldr	r4, [pc, #24]	; (800428c <_sbrk_r+0x1c>)
 8004274:	2300      	movs	r3, #0
 8004276:	4605      	mov	r5, r0
 8004278:	4608      	mov	r0, r1
 800427a:	6023      	str	r3, [r4, #0]
 800427c:	f7fd fe62 	bl	8001f44 <_sbrk>
 8004280:	1c43      	adds	r3, r0, #1
 8004282:	d102      	bne.n	800428a <_sbrk_r+0x1a>
 8004284:	6823      	ldr	r3, [r4, #0]
 8004286:	b103      	cbz	r3, 800428a <_sbrk_r+0x1a>
 8004288:	602b      	str	r3, [r5, #0]
 800428a:	bd38      	pop	{r3, r4, r5, pc}
 800428c:	20000248 	.word	0x20000248

08004290 <__sread>:
 8004290:	b510      	push	{r4, lr}
 8004292:	460c      	mov	r4, r1
 8004294:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004298:	f000 fa5c 	bl	8004754 <_read_r>
 800429c:	2800      	cmp	r0, #0
 800429e:	bfab      	itete	ge
 80042a0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80042a2:	89a3      	ldrhlt	r3, [r4, #12]
 80042a4:	181b      	addge	r3, r3, r0
 80042a6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80042aa:	bfac      	ite	ge
 80042ac:	6563      	strge	r3, [r4, #84]	; 0x54
 80042ae:	81a3      	strhlt	r3, [r4, #12]
 80042b0:	bd10      	pop	{r4, pc}

080042b2 <__swrite>:
 80042b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80042b6:	461f      	mov	r7, r3
 80042b8:	898b      	ldrh	r3, [r1, #12]
 80042ba:	05db      	lsls	r3, r3, #23
 80042bc:	4605      	mov	r5, r0
 80042be:	460c      	mov	r4, r1
 80042c0:	4616      	mov	r6, r2
 80042c2:	d505      	bpl.n	80042d0 <__swrite+0x1e>
 80042c4:	2302      	movs	r3, #2
 80042c6:	2200      	movs	r2, #0
 80042c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80042cc:	f000 f9b8 	bl	8004640 <_lseek_r>
 80042d0:	89a3      	ldrh	r3, [r4, #12]
 80042d2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80042d6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80042da:	81a3      	strh	r3, [r4, #12]
 80042dc:	4632      	mov	r2, r6
 80042de:	463b      	mov	r3, r7
 80042e0:	4628      	mov	r0, r5
 80042e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80042e6:	f000 b869 	b.w	80043bc <_write_r>

080042ea <__sseek>:
 80042ea:	b510      	push	{r4, lr}
 80042ec:	460c      	mov	r4, r1
 80042ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80042f2:	f000 f9a5 	bl	8004640 <_lseek_r>
 80042f6:	1c43      	adds	r3, r0, #1
 80042f8:	89a3      	ldrh	r3, [r4, #12]
 80042fa:	bf15      	itete	ne
 80042fc:	6560      	strne	r0, [r4, #84]	; 0x54
 80042fe:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8004302:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8004306:	81a3      	strheq	r3, [r4, #12]
 8004308:	bf18      	it	ne
 800430a:	81a3      	strhne	r3, [r4, #12]
 800430c:	bd10      	pop	{r4, pc}

0800430e <__sclose>:
 800430e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004312:	f000 b8d3 	b.w	80044bc <_close_r>
	...

08004318 <__swbuf_r>:
 8004318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800431a:	460e      	mov	r6, r1
 800431c:	4614      	mov	r4, r2
 800431e:	4605      	mov	r5, r0
 8004320:	b118      	cbz	r0, 800432a <__swbuf_r+0x12>
 8004322:	6983      	ldr	r3, [r0, #24]
 8004324:	b90b      	cbnz	r3, 800432a <__swbuf_r+0x12>
 8004326:	f7ff fa2d 	bl	8003784 <__sinit>
 800432a:	4b21      	ldr	r3, [pc, #132]	; (80043b0 <__swbuf_r+0x98>)
 800432c:	429c      	cmp	r4, r3
 800432e:	d12a      	bne.n	8004386 <__swbuf_r+0x6e>
 8004330:	686c      	ldr	r4, [r5, #4]
 8004332:	69a3      	ldr	r3, [r4, #24]
 8004334:	60a3      	str	r3, [r4, #8]
 8004336:	89a3      	ldrh	r3, [r4, #12]
 8004338:	071a      	lsls	r2, r3, #28
 800433a:	d52e      	bpl.n	800439a <__swbuf_r+0x82>
 800433c:	6923      	ldr	r3, [r4, #16]
 800433e:	b363      	cbz	r3, 800439a <__swbuf_r+0x82>
 8004340:	6923      	ldr	r3, [r4, #16]
 8004342:	6820      	ldr	r0, [r4, #0]
 8004344:	1ac0      	subs	r0, r0, r3
 8004346:	6963      	ldr	r3, [r4, #20]
 8004348:	b2f6      	uxtb	r6, r6
 800434a:	4298      	cmp	r0, r3
 800434c:	4637      	mov	r7, r6
 800434e:	db04      	blt.n	800435a <__swbuf_r+0x42>
 8004350:	4621      	mov	r1, r4
 8004352:	4628      	mov	r0, r5
 8004354:	f000 f94a 	bl	80045ec <_fflush_r>
 8004358:	bb28      	cbnz	r0, 80043a6 <__swbuf_r+0x8e>
 800435a:	68a3      	ldr	r3, [r4, #8]
 800435c:	3b01      	subs	r3, #1
 800435e:	60a3      	str	r3, [r4, #8]
 8004360:	6823      	ldr	r3, [r4, #0]
 8004362:	1c5a      	adds	r2, r3, #1
 8004364:	6022      	str	r2, [r4, #0]
 8004366:	701e      	strb	r6, [r3, #0]
 8004368:	6963      	ldr	r3, [r4, #20]
 800436a:	3001      	adds	r0, #1
 800436c:	4298      	cmp	r0, r3
 800436e:	d004      	beq.n	800437a <__swbuf_r+0x62>
 8004370:	89a3      	ldrh	r3, [r4, #12]
 8004372:	07db      	lsls	r3, r3, #31
 8004374:	d519      	bpl.n	80043aa <__swbuf_r+0x92>
 8004376:	2e0a      	cmp	r6, #10
 8004378:	d117      	bne.n	80043aa <__swbuf_r+0x92>
 800437a:	4621      	mov	r1, r4
 800437c:	4628      	mov	r0, r5
 800437e:	f000 f935 	bl	80045ec <_fflush_r>
 8004382:	b190      	cbz	r0, 80043aa <__swbuf_r+0x92>
 8004384:	e00f      	b.n	80043a6 <__swbuf_r+0x8e>
 8004386:	4b0b      	ldr	r3, [pc, #44]	; (80043b4 <__swbuf_r+0x9c>)
 8004388:	429c      	cmp	r4, r3
 800438a:	d101      	bne.n	8004390 <__swbuf_r+0x78>
 800438c:	68ac      	ldr	r4, [r5, #8]
 800438e:	e7d0      	b.n	8004332 <__swbuf_r+0x1a>
 8004390:	4b09      	ldr	r3, [pc, #36]	; (80043b8 <__swbuf_r+0xa0>)
 8004392:	429c      	cmp	r4, r3
 8004394:	bf08      	it	eq
 8004396:	68ec      	ldreq	r4, [r5, #12]
 8004398:	e7cb      	b.n	8004332 <__swbuf_r+0x1a>
 800439a:	4621      	mov	r1, r4
 800439c:	4628      	mov	r0, r5
 800439e:	f000 f81f 	bl	80043e0 <__swsetup_r>
 80043a2:	2800      	cmp	r0, #0
 80043a4:	d0cc      	beq.n	8004340 <__swbuf_r+0x28>
 80043a6:	f04f 37ff 	mov.w	r7, #4294967295
 80043aa:	4638      	mov	r0, r7
 80043ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80043ae:	bf00      	nop
 80043b0:	08004888 	.word	0x08004888
 80043b4:	080048a8 	.word	0x080048a8
 80043b8:	08004868 	.word	0x08004868

080043bc <_write_r>:
 80043bc:	b538      	push	{r3, r4, r5, lr}
 80043be:	4c07      	ldr	r4, [pc, #28]	; (80043dc <_write_r+0x20>)
 80043c0:	4605      	mov	r5, r0
 80043c2:	4608      	mov	r0, r1
 80043c4:	4611      	mov	r1, r2
 80043c6:	2200      	movs	r2, #0
 80043c8:	6022      	str	r2, [r4, #0]
 80043ca:	461a      	mov	r2, r3
 80043cc:	f7fd fcfe 	bl	8001dcc <_write>
 80043d0:	1c43      	adds	r3, r0, #1
 80043d2:	d102      	bne.n	80043da <_write_r+0x1e>
 80043d4:	6823      	ldr	r3, [r4, #0]
 80043d6:	b103      	cbz	r3, 80043da <_write_r+0x1e>
 80043d8:	602b      	str	r3, [r5, #0]
 80043da:	bd38      	pop	{r3, r4, r5, pc}
 80043dc:	20000248 	.word	0x20000248

080043e0 <__swsetup_r>:
 80043e0:	4b32      	ldr	r3, [pc, #200]	; (80044ac <__swsetup_r+0xcc>)
 80043e2:	b570      	push	{r4, r5, r6, lr}
 80043e4:	681d      	ldr	r5, [r3, #0]
 80043e6:	4606      	mov	r6, r0
 80043e8:	460c      	mov	r4, r1
 80043ea:	b125      	cbz	r5, 80043f6 <__swsetup_r+0x16>
 80043ec:	69ab      	ldr	r3, [r5, #24]
 80043ee:	b913      	cbnz	r3, 80043f6 <__swsetup_r+0x16>
 80043f0:	4628      	mov	r0, r5
 80043f2:	f7ff f9c7 	bl	8003784 <__sinit>
 80043f6:	4b2e      	ldr	r3, [pc, #184]	; (80044b0 <__swsetup_r+0xd0>)
 80043f8:	429c      	cmp	r4, r3
 80043fa:	d10f      	bne.n	800441c <__swsetup_r+0x3c>
 80043fc:	686c      	ldr	r4, [r5, #4]
 80043fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004402:	b29a      	uxth	r2, r3
 8004404:	0715      	lsls	r5, r2, #28
 8004406:	d42c      	bmi.n	8004462 <__swsetup_r+0x82>
 8004408:	06d0      	lsls	r0, r2, #27
 800440a:	d411      	bmi.n	8004430 <__swsetup_r+0x50>
 800440c:	2209      	movs	r2, #9
 800440e:	6032      	str	r2, [r6, #0]
 8004410:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004414:	81a3      	strh	r3, [r4, #12]
 8004416:	f04f 30ff 	mov.w	r0, #4294967295
 800441a:	bd70      	pop	{r4, r5, r6, pc}
 800441c:	4b25      	ldr	r3, [pc, #148]	; (80044b4 <__swsetup_r+0xd4>)
 800441e:	429c      	cmp	r4, r3
 8004420:	d101      	bne.n	8004426 <__swsetup_r+0x46>
 8004422:	68ac      	ldr	r4, [r5, #8]
 8004424:	e7eb      	b.n	80043fe <__swsetup_r+0x1e>
 8004426:	4b24      	ldr	r3, [pc, #144]	; (80044b8 <__swsetup_r+0xd8>)
 8004428:	429c      	cmp	r4, r3
 800442a:	bf08      	it	eq
 800442c:	68ec      	ldreq	r4, [r5, #12]
 800442e:	e7e6      	b.n	80043fe <__swsetup_r+0x1e>
 8004430:	0751      	lsls	r1, r2, #29
 8004432:	d512      	bpl.n	800445a <__swsetup_r+0x7a>
 8004434:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004436:	b141      	cbz	r1, 800444a <__swsetup_r+0x6a>
 8004438:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800443c:	4299      	cmp	r1, r3
 800443e:	d002      	beq.n	8004446 <__swsetup_r+0x66>
 8004440:	4630      	mov	r0, r6
 8004442:	f7ff fd29 	bl	8003e98 <_free_r>
 8004446:	2300      	movs	r3, #0
 8004448:	6363      	str	r3, [r4, #52]	; 0x34
 800444a:	89a3      	ldrh	r3, [r4, #12]
 800444c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8004450:	81a3      	strh	r3, [r4, #12]
 8004452:	2300      	movs	r3, #0
 8004454:	6063      	str	r3, [r4, #4]
 8004456:	6923      	ldr	r3, [r4, #16]
 8004458:	6023      	str	r3, [r4, #0]
 800445a:	89a3      	ldrh	r3, [r4, #12]
 800445c:	f043 0308 	orr.w	r3, r3, #8
 8004460:	81a3      	strh	r3, [r4, #12]
 8004462:	6923      	ldr	r3, [r4, #16]
 8004464:	b94b      	cbnz	r3, 800447a <__swsetup_r+0x9a>
 8004466:	89a3      	ldrh	r3, [r4, #12]
 8004468:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800446c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004470:	d003      	beq.n	800447a <__swsetup_r+0x9a>
 8004472:	4621      	mov	r1, r4
 8004474:	4630      	mov	r0, r6
 8004476:	f000 f919 	bl	80046ac <__smakebuf_r>
 800447a:	89a2      	ldrh	r2, [r4, #12]
 800447c:	f012 0301 	ands.w	r3, r2, #1
 8004480:	d00c      	beq.n	800449c <__swsetup_r+0xbc>
 8004482:	2300      	movs	r3, #0
 8004484:	60a3      	str	r3, [r4, #8]
 8004486:	6963      	ldr	r3, [r4, #20]
 8004488:	425b      	negs	r3, r3
 800448a:	61a3      	str	r3, [r4, #24]
 800448c:	6923      	ldr	r3, [r4, #16]
 800448e:	b953      	cbnz	r3, 80044a6 <__swsetup_r+0xc6>
 8004490:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004494:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8004498:	d1ba      	bne.n	8004410 <__swsetup_r+0x30>
 800449a:	bd70      	pop	{r4, r5, r6, pc}
 800449c:	0792      	lsls	r2, r2, #30
 800449e:	bf58      	it	pl
 80044a0:	6963      	ldrpl	r3, [r4, #20]
 80044a2:	60a3      	str	r3, [r4, #8]
 80044a4:	e7f2      	b.n	800448c <__swsetup_r+0xac>
 80044a6:	2000      	movs	r0, #0
 80044a8:	e7f7      	b.n	800449a <__swsetup_r+0xba>
 80044aa:	bf00      	nop
 80044ac:	2000000c 	.word	0x2000000c
 80044b0:	08004888 	.word	0x08004888
 80044b4:	080048a8 	.word	0x080048a8
 80044b8:	08004868 	.word	0x08004868

080044bc <_close_r>:
 80044bc:	b538      	push	{r3, r4, r5, lr}
 80044be:	4c06      	ldr	r4, [pc, #24]	; (80044d8 <_close_r+0x1c>)
 80044c0:	2300      	movs	r3, #0
 80044c2:	4605      	mov	r5, r0
 80044c4:	4608      	mov	r0, r1
 80044c6:	6023      	str	r3, [r4, #0]
 80044c8:	f7fd fd5a 	bl	8001f80 <_close>
 80044cc:	1c43      	adds	r3, r0, #1
 80044ce:	d102      	bne.n	80044d6 <_close_r+0x1a>
 80044d0:	6823      	ldr	r3, [r4, #0]
 80044d2:	b103      	cbz	r3, 80044d6 <_close_r+0x1a>
 80044d4:	602b      	str	r3, [r5, #0]
 80044d6:	bd38      	pop	{r3, r4, r5, pc}
 80044d8:	20000248 	.word	0x20000248

080044dc <__sflush_r>:
 80044dc:	898a      	ldrh	r2, [r1, #12]
 80044de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044e2:	4605      	mov	r5, r0
 80044e4:	0710      	lsls	r0, r2, #28
 80044e6:	460c      	mov	r4, r1
 80044e8:	d45a      	bmi.n	80045a0 <__sflush_r+0xc4>
 80044ea:	684b      	ldr	r3, [r1, #4]
 80044ec:	2b00      	cmp	r3, #0
 80044ee:	dc05      	bgt.n	80044fc <__sflush_r+0x20>
 80044f0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80044f2:	2b00      	cmp	r3, #0
 80044f4:	dc02      	bgt.n	80044fc <__sflush_r+0x20>
 80044f6:	2000      	movs	r0, #0
 80044f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80044fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80044fe:	2e00      	cmp	r6, #0
 8004500:	d0f9      	beq.n	80044f6 <__sflush_r+0x1a>
 8004502:	2300      	movs	r3, #0
 8004504:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004508:	682f      	ldr	r7, [r5, #0]
 800450a:	602b      	str	r3, [r5, #0]
 800450c:	d033      	beq.n	8004576 <__sflush_r+0x9a>
 800450e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004510:	89a3      	ldrh	r3, [r4, #12]
 8004512:	075a      	lsls	r2, r3, #29
 8004514:	d505      	bpl.n	8004522 <__sflush_r+0x46>
 8004516:	6863      	ldr	r3, [r4, #4]
 8004518:	1ac0      	subs	r0, r0, r3
 800451a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800451c:	b10b      	cbz	r3, 8004522 <__sflush_r+0x46>
 800451e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004520:	1ac0      	subs	r0, r0, r3
 8004522:	2300      	movs	r3, #0
 8004524:	4602      	mov	r2, r0
 8004526:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004528:	6a21      	ldr	r1, [r4, #32]
 800452a:	4628      	mov	r0, r5
 800452c:	47b0      	blx	r6
 800452e:	1c43      	adds	r3, r0, #1
 8004530:	89a3      	ldrh	r3, [r4, #12]
 8004532:	d106      	bne.n	8004542 <__sflush_r+0x66>
 8004534:	6829      	ldr	r1, [r5, #0]
 8004536:	291d      	cmp	r1, #29
 8004538:	d84b      	bhi.n	80045d2 <__sflush_r+0xf6>
 800453a:	4a2b      	ldr	r2, [pc, #172]	; (80045e8 <__sflush_r+0x10c>)
 800453c:	40ca      	lsrs	r2, r1
 800453e:	07d6      	lsls	r6, r2, #31
 8004540:	d547      	bpl.n	80045d2 <__sflush_r+0xf6>
 8004542:	2200      	movs	r2, #0
 8004544:	6062      	str	r2, [r4, #4]
 8004546:	04d9      	lsls	r1, r3, #19
 8004548:	6922      	ldr	r2, [r4, #16]
 800454a:	6022      	str	r2, [r4, #0]
 800454c:	d504      	bpl.n	8004558 <__sflush_r+0x7c>
 800454e:	1c42      	adds	r2, r0, #1
 8004550:	d101      	bne.n	8004556 <__sflush_r+0x7a>
 8004552:	682b      	ldr	r3, [r5, #0]
 8004554:	b903      	cbnz	r3, 8004558 <__sflush_r+0x7c>
 8004556:	6560      	str	r0, [r4, #84]	; 0x54
 8004558:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800455a:	602f      	str	r7, [r5, #0]
 800455c:	2900      	cmp	r1, #0
 800455e:	d0ca      	beq.n	80044f6 <__sflush_r+0x1a>
 8004560:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004564:	4299      	cmp	r1, r3
 8004566:	d002      	beq.n	800456e <__sflush_r+0x92>
 8004568:	4628      	mov	r0, r5
 800456a:	f7ff fc95 	bl	8003e98 <_free_r>
 800456e:	2000      	movs	r0, #0
 8004570:	6360      	str	r0, [r4, #52]	; 0x34
 8004572:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004576:	6a21      	ldr	r1, [r4, #32]
 8004578:	2301      	movs	r3, #1
 800457a:	4628      	mov	r0, r5
 800457c:	47b0      	blx	r6
 800457e:	1c41      	adds	r1, r0, #1
 8004580:	d1c6      	bne.n	8004510 <__sflush_r+0x34>
 8004582:	682b      	ldr	r3, [r5, #0]
 8004584:	2b00      	cmp	r3, #0
 8004586:	d0c3      	beq.n	8004510 <__sflush_r+0x34>
 8004588:	2b1d      	cmp	r3, #29
 800458a:	d001      	beq.n	8004590 <__sflush_r+0xb4>
 800458c:	2b16      	cmp	r3, #22
 800458e:	d101      	bne.n	8004594 <__sflush_r+0xb8>
 8004590:	602f      	str	r7, [r5, #0]
 8004592:	e7b0      	b.n	80044f6 <__sflush_r+0x1a>
 8004594:	89a3      	ldrh	r3, [r4, #12]
 8004596:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800459a:	81a3      	strh	r3, [r4, #12]
 800459c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80045a0:	690f      	ldr	r7, [r1, #16]
 80045a2:	2f00      	cmp	r7, #0
 80045a4:	d0a7      	beq.n	80044f6 <__sflush_r+0x1a>
 80045a6:	0793      	lsls	r3, r2, #30
 80045a8:	680e      	ldr	r6, [r1, #0]
 80045aa:	bf08      	it	eq
 80045ac:	694b      	ldreq	r3, [r1, #20]
 80045ae:	600f      	str	r7, [r1, #0]
 80045b0:	bf18      	it	ne
 80045b2:	2300      	movne	r3, #0
 80045b4:	eba6 0807 	sub.w	r8, r6, r7
 80045b8:	608b      	str	r3, [r1, #8]
 80045ba:	f1b8 0f00 	cmp.w	r8, #0
 80045be:	dd9a      	ble.n	80044f6 <__sflush_r+0x1a>
 80045c0:	4643      	mov	r3, r8
 80045c2:	463a      	mov	r2, r7
 80045c4:	6a21      	ldr	r1, [r4, #32]
 80045c6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80045c8:	4628      	mov	r0, r5
 80045ca:	47b0      	blx	r6
 80045cc:	2800      	cmp	r0, #0
 80045ce:	dc07      	bgt.n	80045e0 <__sflush_r+0x104>
 80045d0:	89a3      	ldrh	r3, [r4, #12]
 80045d2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80045d6:	81a3      	strh	r3, [r4, #12]
 80045d8:	f04f 30ff 	mov.w	r0, #4294967295
 80045dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80045e0:	4407      	add	r7, r0
 80045e2:	eba8 0800 	sub.w	r8, r8, r0
 80045e6:	e7e8      	b.n	80045ba <__sflush_r+0xde>
 80045e8:	20400001 	.word	0x20400001

080045ec <_fflush_r>:
 80045ec:	b538      	push	{r3, r4, r5, lr}
 80045ee:	690b      	ldr	r3, [r1, #16]
 80045f0:	4605      	mov	r5, r0
 80045f2:	460c      	mov	r4, r1
 80045f4:	b1db      	cbz	r3, 800462e <_fflush_r+0x42>
 80045f6:	b118      	cbz	r0, 8004600 <_fflush_r+0x14>
 80045f8:	6983      	ldr	r3, [r0, #24]
 80045fa:	b90b      	cbnz	r3, 8004600 <_fflush_r+0x14>
 80045fc:	f7ff f8c2 	bl	8003784 <__sinit>
 8004600:	4b0c      	ldr	r3, [pc, #48]	; (8004634 <_fflush_r+0x48>)
 8004602:	429c      	cmp	r4, r3
 8004604:	d109      	bne.n	800461a <_fflush_r+0x2e>
 8004606:	686c      	ldr	r4, [r5, #4]
 8004608:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800460c:	b17b      	cbz	r3, 800462e <_fflush_r+0x42>
 800460e:	4621      	mov	r1, r4
 8004610:	4628      	mov	r0, r5
 8004612:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004616:	f7ff bf61 	b.w	80044dc <__sflush_r>
 800461a:	4b07      	ldr	r3, [pc, #28]	; (8004638 <_fflush_r+0x4c>)
 800461c:	429c      	cmp	r4, r3
 800461e:	d101      	bne.n	8004624 <_fflush_r+0x38>
 8004620:	68ac      	ldr	r4, [r5, #8]
 8004622:	e7f1      	b.n	8004608 <_fflush_r+0x1c>
 8004624:	4b05      	ldr	r3, [pc, #20]	; (800463c <_fflush_r+0x50>)
 8004626:	429c      	cmp	r4, r3
 8004628:	bf08      	it	eq
 800462a:	68ec      	ldreq	r4, [r5, #12]
 800462c:	e7ec      	b.n	8004608 <_fflush_r+0x1c>
 800462e:	2000      	movs	r0, #0
 8004630:	bd38      	pop	{r3, r4, r5, pc}
 8004632:	bf00      	nop
 8004634:	08004888 	.word	0x08004888
 8004638:	080048a8 	.word	0x080048a8
 800463c:	08004868 	.word	0x08004868

08004640 <_lseek_r>:
 8004640:	b538      	push	{r3, r4, r5, lr}
 8004642:	4c07      	ldr	r4, [pc, #28]	; (8004660 <_lseek_r+0x20>)
 8004644:	4605      	mov	r5, r0
 8004646:	4608      	mov	r0, r1
 8004648:	4611      	mov	r1, r2
 800464a:	2200      	movs	r2, #0
 800464c:	6022      	str	r2, [r4, #0]
 800464e:	461a      	mov	r2, r3
 8004650:	f7fd fca0 	bl	8001f94 <_lseek>
 8004654:	1c43      	adds	r3, r0, #1
 8004656:	d102      	bne.n	800465e <_lseek_r+0x1e>
 8004658:	6823      	ldr	r3, [r4, #0]
 800465a:	b103      	cbz	r3, 800465e <_lseek_r+0x1e>
 800465c:	602b      	str	r3, [r5, #0]
 800465e:	bd38      	pop	{r3, r4, r5, pc}
 8004660:	20000248 	.word	0x20000248

08004664 <__swhatbuf_r>:
 8004664:	b570      	push	{r4, r5, r6, lr}
 8004666:	460e      	mov	r6, r1
 8004668:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800466c:	2900      	cmp	r1, #0
 800466e:	b090      	sub	sp, #64	; 0x40
 8004670:	4614      	mov	r4, r2
 8004672:	461d      	mov	r5, r3
 8004674:	da07      	bge.n	8004686 <__swhatbuf_r+0x22>
 8004676:	2300      	movs	r3, #0
 8004678:	602b      	str	r3, [r5, #0]
 800467a:	89b3      	ldrh	r3, [r6, #12]
 800467c:	061a      	lsls	r2, r3, #24
 800467e:	d410      	bmi.n	80046a2 <__swhatbuf_r+0x3e>
 8004680:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004684:	e00e      	b.n	80046a4 <__swhatbuf_r+0x40>
 8004686:	aa01      	add	r2, sp, #4
 8004688:	f000 f884 	bl	8004794 <_fstat_r>
 800468c:	2800      	cmp	r0, #0
 800468e:	dbf2      	blt.n	8004676 <__swhatbuf_r+0x12>
 8004690:	9a02      	ldr	r2, [sp, #8]
 8004692:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8004696:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800469a:	425a      	negs	r2, r3
 800469c:	415a      	adcs	r2, r3
 800469e:	602a      	str	r2, [r5, #0]
 80046a0:	e7ee      	b.n	8004680 <__swhatbuf_r+0x1c>
 80046a2:	2340      	movs	r3, #64	; 0x40
 80046a4:	2000      	movs	r0, #0
 80046a6:	6023      	str	r3, [r4, #0]
 80046a8:	b010      	add	sp, #64	; 0x40
 80046aa:	bd70      	pop	{r4, r5, r6, pc}

080046ac <__smakebuf_r>:
 80046ac:	898b      	ldrh	r3, [r1, #12]
 80046ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80046b0:	079d      	lsls	r5, r3, #30
 80046b2:	4606      	mov	r6, r0
 80046b4:	460c      	mov	r4, r1
 80046b6:	d507      	bpl.n	80046c8 <__smakebuf_r+0x1c>
 80046b8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80046bc:	6023      	str	r3, [r4, #0]
 80046be:	6123      	str	r3, [r4, #16]
 80046c0:	2301      	movs	r3, #1
 80046c2:	6163      	str	r3, [r4, #20]
 80046c4:	b002      	add	sp, #8
 80046c6:	bd70      	pop	{r4, r5, r6, pc}
 80046c8:	ab01      	add	r3, sp, #4
 80046ca:	466a      	mov	r2, sp
 80046cc:	f7ff ffca 	bl	8004664 <__swhatbuf_r>
 80046d0:	9900      	ldr	r1, [sp, #0]
 80046d2:	4605      	mov	r5, r0
 80046d4:	4630      	mov	r0, r6
 80046d6:	f7ff fc2d 	bl	8003f34 <_malloc_r>
 80046da:	b948      	cbnz	r0, 80046f0 <__smakebuf_r+0x44>
 80046dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80046e0:	059a      	lsls	r2, r3, #22
 80046e2:	d4ef      	bmi.n	80046c4 <__smakebuf_r+0x18>
 80046e4:	f023 0303 	bic.w	r3, r3, #3
 80046e8:	f043 0302 	orr.w	r3, r3, #2
 80046ec:	81a3      	strh	r3, [r4, #12]
 80046ee:	e7e3      	b.n	80046b8 <__smakebuf_r+0xc>
 80046f0:	4b0d      	ldr	r3, [pc, #52]	; (8004728 <__smakebuf_r+0x7c>)
 80046f2:	62b3      	str	r3, [r6, #40]	; 0x28
 80046f4:	89a3      	ldrh	r3, [r4, #12]
 80046f6:	6020      	str	r0, [r4, #0]
 80046f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80046fc:	81a3      	strh	r3, [r4, #12]
 80046fe:	9b00      	ldr	r3, [sp, #0]
 8004700:	6163      	str	r3, [r4, #20]
 8004702:	9b01      	ldr	r3, [sp, #4]
 8004704:	6120      	str	r0, [r4, #16]
 8004706:	b15b      	cbz	r3, 8004720 <__smakebuf_r+0x74>
 8004708:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800470c:	4630      	mov	r0, r6
 800470e:	f000 f853 	bl	80047b8 <_isatty_r>
 8004712:	b128      	cbz	r0, 8004720 <__smakebuf_r+0x74>
 8004714:	89a3      	ldrh	r3, [r4, #12]
 8004716:	f023 0303 	bic.w	r3, r3, #3
 800471a:	f043 0301 	orr.w	r3, r3, #1
 800471e:	81a3      	strh	r3, [r4, #12]
 8004720:	89a3      	ldrh	r3, [r4, #12]
 8004722:	431d      	orrs	r5, r3
 8004724:	81a5      	strh	r5, [r4, #12]
 8004726:	e7cd      	b.n	80046c4 <__smakebuf_r+0x18>
 8004728:	08003705 	.word	0x08003705

0800472c <__ascii_mbtowc>:
 800472c:	b082      	sub	sp, #8
 800472e:	b901      	cbnz	r1, 8004732 <__ascii_mbtowc+0x6>
 8004730:	a901      	add	r1, sp, #4
 8004732:	b142      	cbz	r2, 8004746 <__ascii_mbtowc+0x1a>
 8004734:	b14b      	cbz	r3, 800474a <__ascii_mbtowc+0x1e>
 8004736:	7813      	ldrb	r3, [r2, #0]
 8004738:	600b      	str	r3, [r1, #0]
 800473a:	7812      	ldrb	r2, [r2, #0]
 800473c:	1c10      	adds	r0, r2, #0
 800473e:	bf18      	it	ne
 8004740:	2001      	movne	r0, #1
 8004742:	b002      	add	sp, #8
 8004744:	4770      	bx	lr
 8004746:	4610      	mov	r0, r2
 8004748:	e7fb      	b.n	8004742 <__ascii_mbtowc+0x16>
 800474a:	f06f 0001 	mvn.w	r0, #1
 800474e:	e7f8      	b.n	8004742 <__ascii_mbtowc+0x16>

08004750 <__malloc_lock>:
 8004750:	4770      	bx	lr

08004752 <__malloc_unlock>:
 8004752:	4770      	bx	lr

08004754 <_read_r>:
 8004754:	b538      	push	{r3, r4, r5, lr}
 8004756:	4c07      	ldr	r4, [pc, #28]	; (8004774 <_read_r+0x20>)
 8004758:	4605      	mov	r5, r0
 800475a:	4608      	mov	r0, r1
 800475c:	4611      	mov	r1, r2
 800475e:	2200      	movs	r2, #0
 8004760:	6022      	str	r2, [r4, #0]
 8004762:	461a      	mov	r2, r3
 8004764:	f7fd fbde 	bl	8001f24 <_read>
 8004768:	1c43      	adds	r3, r0, #1
 800476a:	d102      	bne.n	8004772 <_read_r+0x1e>
 800476c:	6823      	ldr	r3, [r4, #0]
 800476e:	b103      	cbz	r3, 8004772 <_read_r+0x1e>
 8004770:	602b      	str	r3, [r5, #0]
 8004772:	bd38      	pop	{r3, r4, r5, pc}
 8004774:	20000248 	.word	0x20000248

08004778 <__ascii_wctomb>:
 8004778:	b149      	cbz	r1, 800478e <__ascii_wctomb+0x16>
 800477a:	2aff      	cmp	r2, #255	; 0xff
 800477c:	bf85      	ittet	hi
 800477e:	238a      	movhi	r3, #138	; 0x8a
 8004780:	6003      	strhi	r3, [r0, #0]
 8004782:	700a      	strbls	r2, [r1, #0]
 8004784:	f04f 30ff 	movhi.w	r0, #4294967295
 8004788:	bf98      	it	ls
 800478a:	2001      	movls	r0, #1
 800478c:	4770      	bx	lr
 800478e:	4608      	mov	r0, r1
 8004790:	4770      	bx	lr
	...

08004794 <_fstat_r>:
 8004794:	b538      	push	{r3, r4, r5, lr}
 8004796:	4c07      	ldr	r4, [pc, #28]	; (80047b4 <_fstat_r+0x20>)
 8004798:	2300      	movs	r3, #0
 800479a:	4605      	mov	r5, r0
 800479c:	4608      	mov	r0, r1
 800479e:	4611      	mov	r1, r2
 80047a0:	6023      	str	r3, [r4, #0]
 80047a2:	f7fd fbf0 	bl	8001f86 <_fstat>
 80047a6:	1c43      	adds	r3, r0, #1
 80047a8:	d102      	bne.n	80047b0 <_fstat_r+0x1c>
 80047aa:	6823      	ldr	r3, [r4, #0]
 80047ac:	b103      	cbz	r3, 80047b0 <_fstat_r+0x1c>
 80047ae:	602b      	str	r3, [r5, #0]
 80047b0:	bd38      	pop	{r3, r4, r5, pc}
 80047b2:	bf00      	nop
 80047b4:	20000248 	.word	0x20000248

080047b8 <_isatty_r>:
 80047b8:	b538      	push	{r3, r4, r5, lr}
 80047ba:	4c06      	ldr	r4, [pc, #24]	; (80047d4 <_isatty_r+0x1c>)
 80047bc:	2300      	movs	r3, #0
 80047be:	4605      	mov	r5, r0
 80047c0:	4608      	mov	r0, r1
 80047c2:	6023      	str	r3, [r4, #0]
 80047c4:	f7fd fbe4 	bl	8001f90 <_isatty>
 80047c8:	1c43      	adds	r3, r0, #1
 80047ca:	d102      	bne.n	80047d2 <_isatty_r+0x1a>
 80047cc:	6823      	ldr	r3, [r4, #0]
 80047ce:	b103      	cbz	r3, 80047d2 <_isatty_r+0x1a>
 80047d0:	602b      	str	r3, [r5, #0]
 80047d2:	bd38      	pop	{r3, r4, r5, pc}
 80047d4:	20000248 	.word	0x20000248

080047d8 <_init>:
 80047d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80047da:	bf00      	nop
 80047dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80047de:	bc08      	pop	{r3}
 80047e0:	469e      	mov	lr, r3
 80047e2:	4770      	bx	lr

080047e4 <_fini>:
 80047e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80047e6:	bf00      	nop
 80047e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80047ea:	bc08      	pop	{r3}
 80047ec:	469e      	mov	lr, r3
 80047ee:	4770      	bx	lr
